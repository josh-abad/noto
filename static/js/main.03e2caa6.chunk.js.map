{"version":3,"sources":["components/User.js","components/SearchBar.js","models/Notebook.js","components/NewNotebookDialog.js","components/Navigation.js","models/Note.js","components/CreateButton.js","components/NewNoteDialog.js","components/Sidebar.js","components/EditNoteDialog.js","components/DeleteNoteDialog.js","components/NoteView.js","components/RenameNotebookDialog copy.js","components/EmptyTrashDialog.js","components/NoteListView.js","components/Bridge.js","models/Tag.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","avatar","margin","User","_ref","name","classes","_React$useState","React","useState","_React$useState2","Object","slicedToArray","anchorEl","setAnchorEl","react_default","a","createElement","ListItem","ListItemAvatar","Avatar","className","charAt","split","ListItemText","primary","IconButton","edge","onClick","event","currentTarget","ExpandMore_default","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","setDarkTheme","dark","ListItemIcon","InvertColors_default","ExitToApp_default","inputRoot","color","inputInput","defineProperty","padding","spacing","transition","transitions","create","width","breakpoints","up","&:focus","search","position","borderRadius","shape","backgroundColor","fade","palette","common","black","&:hover","marginLeft","searchIcon","height","pointerEvents","display","alignItems","justifyContent","SearchBar","folderSetter","Search_default","InputBase","value","term","onChange","update","target","placeholder","root","input","inputProps","aria-label","Notebook","classCallCheck","this","NewNotebookDialog","addNotebook","_useState","_useState2","setOpen","_useState3","_useState4","nameInput","setNameInput","onSubmit","preventDefault","newNotebook","button","AddCircleOutline_default","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","label","variant","fullWidth","DialogActions","Button","nested","paddingLeft","Navigation","pageSetter","notebooks","tags","folder","selected","setSelected","openNotebooks","setOpenNotebooks","_useState5","_useState6","openTags","setOpenTags","onDropDownClick","setter","page","List","Note_default","Book_default","ExpandLess_default","Collapse","in","timeout","unmountOnExit","component","disablePadding","map","notebook","index","key","BookOutlined_default","components_NewNotebookDialog","LocalOffer_default","tag","Delete_default","Note","title","content","date","arguments","length","undefined","Date","deleted","leftIcon","marginRight","CreateButton","size","AddCircle_default","NewNoteDialog","addNote","titleInput","setTitleInput","contentInput","setContentInput","_useState7","_useState8","values","setValues","newNote","Container","components_CreateButton","type","multiline","rows","FormControl","InputLabel","htmlFor","Select","oldValues","objectSpread","drawer","flexShrink","drawerPaper","Sidebar","Drawer","paper","anchor","style","components_User","components_SearchBar","components_NewNoteDialog","components_Navigation","EditNoteDialog","note","editNote","closeMenu","handleClose","EditOutlined_default","DeleteNoteDialog","noteTitle","deleteNote","DeleteOutlined_default","view","iconLeft","chip","marginTop","NoteView","restoreNote","Box","Grid","container","direction","item","xs","Typography","gutterBottom","fontSize","alignContent","MoreVert_default","UndoOutlined_default","components_EditNoteDialog","components_DeleteNoteDialog","Divider","ChipInput_default","onAdd","add","onDelete","remove","whiteSpace","RenameNotebookDialog","rename","EmptyTrashDialog","emptyTrash","DeleteForeverOutlined_default","header","marginBottom","textField","tertiary","textItem","paddingRight","NoteList","notes","noteSetter","selectedNote","setSelectedNote","truncate","indexOf","concat","slice","substring","divider","disableTypography","secondary","distanceInWordsToNow","addSuffix","NoteListView","_ref2","menu","trash","maxHeight","overflowY","MoreHoriz_default","RenameNotebookDialog_copy","delete","components_EmptyTrashDialog","empty","NoteListView_NoteList","Bridge","openFolder","searchTerm","document","components_NoteListView","filter","toLowerCase","includes","notebookName","all","find","Tag","flexGrow","close","darkTheme","createMuiTheme","main","purple","lightTheme","App","props","setPage","setNotes","setNotebooks","setTags","_useState9","_useState10","openNote","setOpenNote","_useState11","_useState12","setDark","_useState13","_useState14","openSnackbar","setOpenSnackbar","_useState15","_useState16","snackbarMessage","setSnackbarMessage","_useState17","_useState18","setSearchTerm","_useState19","_useState20","setOpenFolder","reason","ThemeProvider","CssBaseline","components_Sidebar","pageNumber","components_Bridge","copy","toConsumableArray","findIndex","splice","recursiveDeletion","noteId","components_NoteView","tagName","tagFound","some","copyTags","tagId","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","aria-describedby","message","action","Close_default","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.03e2caa6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport {\r\n  ListItem,\r\n  ListItemText,\r\n  Avatar,\r\n  ListItemAvatar,\r\n  Menu,\r\n  MenuItem,\r\n  IconButton,\r\n  ListItemIcon\r\n} from \"@material-ui/core\";\r\nimport InvertColorsIcon from \"@material-ui/icons/InvertColors\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  avatar: {\r\n    margin: 10\r\n  }\r\n}));\r\n\r\nconst User = ({ name, theme }) => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  return (\r\n    <div>\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n          <Avatar className={classes.avatar}>\r\n            {name.charAt(0)}\r\n            {name.split(\" \")[1].charAt(0)}\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary={name} />\r\n        <IconButton\r\n          edge=\"end\"\r\n          onClick={event => setAnchorEl(event.currentTarget)}\r\n        >\r\n          <ExpandMoreIcon />\r\n        </IconButton>\r\n      </ListItem>\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={() => setAnchorEl(null)}\r\n      >\r\n        <MenuItem\r\n          onClick={() => {\r\n            theme.setDarkTheme(!theme.dark);\r\n            setAnchorEl(null);\r\n          }}\r\n        >\r\n          <ListItemIcon>\r\n            <InvertColorsIcon />\r\n          </ListItemIcon>\r\n          Enable {theme.dark ? \"Light\" : \"Dark\"} Mode\r\n        </MenuItem>\r\n        <MenuItem onClick={() => setAnchorEl(null)}>\r\n          <ListItemIcon>\r\n            <ExitToAppIcon />\r\n          </ListItemIcon>\r\n          Logout\r\n        </MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React from \"react\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { InputBase } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  inputRoot: {\r\n    color: \"inherit\"\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 7),\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: 120,\r\n      \"&:focus\": {\r\n        width: 120\r\n      }\r\n    }\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.black, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.black, 0.25)\r\n    },\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      margin: theme.spacing(2),\r\n      width: \"auto\"\r\n    }\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing(7),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  }\r\n}));\r\n\r\nconst SearchBar = ({ search, folderSetter }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        value={search.term}\r\n        onChange={event => search.update(event.target.value)}\r\n        onClick={() => folderSetter(\"search\")}\r\n        placeholder=\"Search notes...\"\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput\r\n        }}\r\n        inputProps={{ \"aria-label\": \"search\" }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","let id = 0;\r\n\r\nexport default class Notebook {\r\n  constructor(name) {\r\n    this.id = id++;\r\n    this.name = name;\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport AddCircle from \"@material-ui/icons/AddCircleOutline\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Notebook from \"../models/Notebook\";\r\nimport { ListItem, ListItemIcon, ListItemText, DialogContentText } from \"@material-ui/core\";\r\n\r\nconst NewNotebookDialog = ({ className, addNotebook }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [nameInput, setNameInput] = useState(\"\");\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n    const newNotebook = new Notebook(nameInput);\r\n    addNotebook(newNotebook);\r\n    setNameInput(\"\");\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ListItem button className={className} onClick={() => setOpen(true)}>\r\n        <ListItemIcon>\r\n          <AddCircle />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"New Notebook\" />\r\n      </ListItem>\r\n      <Dialog\r\n        open={open}\r\n        onClose={() => setOpen(false)}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        onSubmit={onSubmit}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Create new notebook</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Notebooks are useful for grouping notes around a common topic.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            value={nameInput}\r\n            onChange={event => setNameInput(event.target.value)}\r\n            label=\"Name\"\r\n            variant=\"outlined\"\r\n            name=\"name\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpen(false)} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={onSubmit} color=\"primary\">\r\n            Create\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewNotebookDialog;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Collapse,\r\n} from \"@material-ui/core\";\r\nimport NoteIcon from \"@material-ui/icons/Note\";\r\nimport BookIcon from \"@material-ui/icons/Book\";\r\nimport BookIconOutlined from \"@material-ui/icons/BookOutlined\";\r\nimport LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport NewNotebookDialog from \"./NewNotebookDialog\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  nested: {\r\n    paddingLeft: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nconst Navigation = ({\r\n  addNotebook,\r\n  pageSetter,\r\n  folderSetter,\r\n  notebooks,\r\n  tags\r\n}) => {\r\n  const classes = useStyles();\r\n  const [selected, setSelected] = useState({ id: 0, folder: \"all\" });\r\n  const [openNotebooks, setOpenNotebooks] = useState(false);\r\n  const [openTags, setOpenTags] = useState(false);\r\n\r\n  const getNotebooks = () => {\r\n    return notebooks.map((notebook, index) => {\r\n      return (\r\n        <ListItem\r\n          button\r\n          onClick={onClick(notebook.id, \"notebook\")}\r\n          selected={\r\n            selected.id === notebook.id && selected.folder === \"notebook\"\r\n          }\r\n          key={index}\r\n          className={classes.nested}\r\n        >\r\n          <ListItemIcon>\r\n            <BookIconOutlined />\r\n          </ListItemIcon>\r\n          <ListItemText primary={notebook.name} />\r\n        </ListItem>\r\n      );\r\n    });\r\n  };\r\n\r\n  const getTags = () => {\r\n    return tags.map((tag, index) => {\r\n      return (\r\n        <ListItem\r\n          button\r\n          onClick={onClick(tag.id, \"tag\")}\r\n          selected={selected.id === tag.id && selected.folder === \"tag\"}\r\n          key={index}\r\n          className={classes.nested}\r\n        >\r\n          <ListItemText primary={tag.name} />\r\n        </ListItem>\r\n      );\r\n    });\r\n  };\r\n\r\n  const onDropDownClick = (value, setter) => {\r\n    return () => {\r\n      setter(!value);\r\n    };\r\n  };\r\n\r\n  const onClick = (page, folder) => {\r\n    return () => {\r\n      pageSetter(page);\r\n      folderSetter(folder);\r\n      setSelected({ id: page, folder: folder });\r\n    };\r\n  };\r\n\r\n  return (\r\n    <List>\r\n      <ListItem\r\n        button\r\n        onClick={onClick(0, \"all\")}\r\n        selected={selected.id === 0 && selected.folder === \"all\"}\r\n      >\r\n        <ListItemIcon>\r\n          <NoteIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"All Notes\" />\r\n      </ListItem>\r\n      <ListItem\r\n        button\r\n        onClick={onDropDownClick(openNotebooks, setOpenNotebooks)}\r\n      >\r\n        <ListItemIcon>\r\n          <BookIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Notebooks\" />\r\n        {openNotebooks ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n      <Collapse in={openNotebooks} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          {getNotebooks()}\r\n          <NewNotebookDialog\r\n            className={classes.nested}\r\n            addNotebook={addNotebook}\r\n          />\r\n        </List>\r\n      </Collapse>\r\n      <ListItem button onClick={onDropDownClick(openTags, setOpenTags)}>\r\n        <ListItemIcon>\r\n          <LocalOfferIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Tags\" />\r\n        {openTags ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n      <Collapse in={openTags} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          {getTags()}\r\n        </List>\r\n      </Collapse>\r\n      <ListItem\r\n        button\r\n        onClick={onClick(-1, \"trash\")}\r\n        selected={selected.id === -1 && selected.folder === \"trash\"}\r\n      >\r\n        <ListItemIcon>\r\n          <DeleteIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Trash\" />\r\n      </ListItem>\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import Notebook from \"./Notebook\";\r\n\r\nlet id = 1;\r\n\r\nexport default class Note {\r\n  constructor(\r\n    title,\r\n    content,\r\n    date = new Date(),\r\n    notebook = new Notebook('Default'),\r\n    tags = [],\r\n  ) {\r\n    this.id = id++;\r\n    this.title = title;\r\n    this.content = content;\r\n    this.date = date;\r\n    this.notebook = notebook;\r\n    this.deleted = false;\r\n    this.tags = tags;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddCircle from \"@material-ui/icons/AddCircle\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst CreateButton = ({ onClick }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Button\r\n      onClick={onClick}\r\n      size=\"large\"\r\n      color=\"primary\"\r\n      className={classes.button}\r\n    >\r\n      <AddCircle className={classes.leftIcon} />\r\n      New Note\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default CreateButton;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport {\r\n  MenuItem,\r\n  Select,\r\n  FormControl,\r\n  InputLabel,\r\n  Container\r\n} from \"@material-ui/core\";\r\nimport Note from \"../models/Note\";\r\nimport CreateButton from \"./CreateButton\";\r\n\r\nconst NewNoteDialog = ({ addNote, notebooks }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [titleInput, setTitleInput] = useState(\"\");\r\n  const [contentInput, setContentInput] = useState(\"\");\r\n  const [values, setValues] = useState({\r\n    notebook: notebooks[0]\r\n  });\r\n\r\n  const getNotebooks = () =>\r\n    notebooks.map((notebook, index) => (\r\n      <MenuItem key={index} value={notebook}>\r\n        {notebook.name}\r\n      </MenuItem>\r\n    ));\r\n\r\n  const handleChange = event => {\r\n    setValues(oldValues => ({\r\n      ...oldValues,\r\n      [event.target.name]: event.target.value\r\n    }));\r\n  };\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n    const newNote = new Note(\r\n      titleInput,\r\n      contentInput,\r\n      new Date(),\r\n      values.notebook\r\n    );\r\n    addNote(newNote);\r\n    setTitleInput(\"\");\r\n    setContentInput(\"\");\r\n    setValues(\"\");\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <CreateButton onClick={() => setOpen(true)} />\r\n      </Container>\r\n      <Dialog\r\n        open={open}\r\n        onClose={() => setOpen(false)}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        onSubmit={onSubmit}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">New Note</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            value={titleInput}\r\n            onChange={event => setTitleInput(event.target.value)}\r\n            label=\"Title\"\r\n            type=\"email\"\r\n            variant=\"outlined\"\r\n            name=\"title\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            id=\"outlined-multiline-static\"\r\n            value={contentInput}\r\n            onChange={event => setContentInput(event.target.value)}\r\n            label=\"Content\"\r\n            multiline\r\n            rows=\"8\"\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            name=\"content\"\r\n            fullWidth\r\n          />\r\n          <FormControl fullWidth>\r\n            <InputLabel htmlFor=\"notebook\">Notebook</InputLabel>\r\n            <Select\r\n              value={values.notebook}\r\n              onChange={handleChange}\r\n              inputProps={{\r\n                name: \"notebook\",\r\n                id: \"notebook\"\r\n              }}\r\n            >\r\n              {getNotebooks()}\r\n            </Select>\r\n          </FormControl>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpen(false)} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={onSubmit} color=\"primary\">\r\n            Create\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewNoteDialog;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport User from \"./User\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport Navigation from \"./Navigation\";\r\nimport { Drawer } from \"@material-ui/core\";\r\nimport NewNoteDialog from \"./NewNoteDialog\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  drawer: {\r\n    width: 280,\r\n    flexShrink: 0\r\n  },\r\n  drawerPaper: {\r\n    width: 280\r\n  }\r\n}));\r\n\r\nconst Sidebar = ({\r\n  addNote,\r\n  addNotebook,\r\n  pageSetter,\r\n  folderSetter,\r\n  notebooks,\r\n  tags,\r\n  theme,\r\n  search\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Drawer\r\n      variant=\"permanent\"\r\n      className={classes.drawer}\r\n      classes={{\r\n        paper: classes.drawerPaper\r\n      }}\r\n      anchor=\"left\"\r\n      style={{ backgroundColor: \"red\" }}\r\n    >\r\n      <User name=\"John Doe\" theme={theme} />\r\n      <SearchBar search={search} folderSetter={folderSetter} />\r\n      <NewNoteDialog addNote={addNote} notebooks={notebooks} />\r\n      <Navigation\r\n        addNotebook={addNotebook}\r\n        pageSetter={pageSetter}\r\n        folderSetter={folderSetter}\r\n        notebooks={notebooks}\r\n        tags={tags}\r\n      />\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\r\nimport { MenuItem, Select, FormControl, InputLabel, ListItemIcon } from \"@material-ui/core\";\r\n\r\nconst EditNoteDialog = ({ note, editNote, notebooks, closeMenu }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [titleInput, setTitleInput] = useState(note.title);\r\n  const [contentInput, setContentInput] = useState(note.content);\r\n  const [values, setValues] = useState({\r\n    notebook: note.notebook\r\n  });\r\n\r\n  const getNotebooks = () =>\r\n    notebooks.map((notebook, index) => (\r\n      <MenuItem key={notebook.id} value={notebook}>\r\n        {notebook.name}\r\n      </MenuItem>\r\n    ));\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n    setTitleInput(note.title);\r\n    setContentInput(note.content);\r\n    setValues({\r\n      notebook: note.notebook\r\n    });\r\n    closeMenu();\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleChange = event => {\r\n    setValues({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n    editNote(note.id, titleInput, contentInput, values.notebook);\r\n    setTitleInput(\"\");\r\n    setContentInput(\"\");\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MenuItem onClick={handleOpen}>\r\n        <ListItemIcon>\r\n          <EditIcon />\r\n        </ListItemIcon>\r\n        Edit</MenuItem>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        onSubmit={onSubmit}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Edit Note</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            value={titleInput}\r\n            onChange={event => setTitleInput(event.target.value)}\r\n            label=\"Title\"\r\n            variant=\"outlined\"\r\n            name=\"title\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            id=\"outlined-multiline-static\"\r\n            value={contentInput}\r\n            onChange={event => setContentInput(event.target.value)}\r\n            label=\"Content\"\r\n            multiline\r\n            rows=\"8\"\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            name=\"content\"\r\n            fullWidth\r\n          />\r\n          <FormControl fullWidth>\r\n            <InputLabel htmlFor=\"notebook\">Notebook</InputLabel>\r\n            <Select\r\n              value={values.notebook}\r\n              onChange={handleChange}\r\n              inputProps={{\r\n                name: \"notebook\",\r\n                id: \"notebook\"\r\n              }}\r\n            >\r\n              {getNotebooks()}\r\n            </Select>\r\n          </FormControl>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={onSubmit} color=\"primary\">\r\n            Update\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditNoteDialog;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { MenuItem, ListItemIcon, DialogContentText } from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/DeleteOutlined\";\r\n\r\nconst DeleteNoteDialog = ({ noteTitle, deleteNote, closeMenu }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <MenuItem\r\n        onClick={() => {\r\n          setOpen(true);\r\n          closeMenu();\r\n        }}\r\n      >\r\n        <ListItemIcon>\r\n          <DeleteIcon />\r\n        </ListItemIcon>\r\n        Delete\r\n      </MenuItem>\r\n      <Dialog\r\n        open={open}\r\n        onClose={() => setOpen(false)}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        onSubmit={deleteNote}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Delete note</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {noteTitle} will be moved to trash.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpen(false)} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={deleteNote} color=\"primary\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteNoteDialog;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Divider,\r\n  Box,\r\n  Drawer,\r\n  IconButton,\r\n  Menu,\r\n  Grid,\r\n  MenuItem,\r\n  ListItemIcon\r\n} from \"@material-ui/core\";\r\nimport BookIcon from \"@material-ui/icons/BookOutlined\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreVert\";\r\nimport UndoIcon from \"@material-ui/icons/UndoOutlined\";\r\nimport EditNoteDialog from \"./EditNoteDialog\";\r\nimport DeleteNoteDialog from \"./DeleteNoteDialog\";\r\nimport ChipInput from \"material-ui-chip-input\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  view: {\r\n    padding: theme.spacing(3)\r\n  },\r\n  iconLeft: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  drawer: {\r\n    width: 740,\r\n    flexShrink: 0\r\n  },\r\n  drawerPaper: {\r\n    width: 740\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5)\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst NoteView = ({\r\n  note,\r\n  editNote,\r\n  deleteNote,\r\n  restoreNote,\r\n  notebooks,\r\n  tags\r\n}) => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  if (!note) {\r\n    return (\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={classes.drawer}\r\n        classes={{\r\n          paper: classes.drawerPaper\r\n        }}\r\n        anchor=\"right\"\r\n      >\r\n        <Container />\r\n      </Drawer>\r\n    );\r\n  }\r\n  return (\r\n    <Drawer\r\n      variant=\"permanent\"\r\n      className={classes.drawer}\r\n      classes={{\r\n        paper: classes.drawerPaper\r\n      }}\r\n      anchor=\"right\"\r\n    >\r\n      <Box className={classes.view}>\r\n        <Grid container spacing={0} direction=\"row\" alignItems=\"center\">\r\n          <Grid item xs={11}>\r\n            <Box\r\n              color=\"text.secondary\"\r\n              justifyContent=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Typography variant=\"subtitle2\" gutterBottom>\r\n                {!note.deleted ? (\r\n                  <div>\r\n                    <BookIcon fontSize=\"inherit\" className={classes.iconLeft} />\r\n                    {note.notebook.name}\r\n                  </div>\r\n                ) : (\r\n                  <div />\r\n                )}\r\n              </Typography>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={1}>\r\n            <Box justifyContent=\"center\" alignContent=\"right\">\r\n              <IconButton\r\n                onClick={event => setAnchorEl(event.currentTarget)}\r\n                edge=\"end\"\r\n                aria-label=\"more\"\r\n              >\r\n                <MoreHorizIcon />\r\n              </IconButton>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n        <Menu\r\n          id=\"simple-menu\"\r\n          anchorEl={anchorEl}\r\n          keepMounted\r\n          open={Boolean(anchorEl)}\r\n          onClose={() => setAnchorEl(null)}\r\n        >\r\n          {!note.deleted ? (\r\n            <div>\r\n              <EditNoteDialog\r\n                note={note}\r\n                editNote={editNote}\r\n                notebooks={notebooks}\r\n                closeMenu={() => setAnchorEl(null)}\r\n              />\r\n              <DeleteNoteDialog\r\n                noteTitle={note.title}\r\n                deleteNote={event => deleteNote(note.id)}\r\n                closeMenu={() => setAnchorEl(null)}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <MenuItem\r\n              onClick={() => {\r\n                restoreNote(note.id);\r\n                setAnchorEl(null);\r\n              }}\r\n            >\r\n              <ListItemIcon>\r\n                <UndoIcon />\r\n              </ListItemIcon>\r\n              Restore\r\n            </MenuItem>\r\n          )}\r\n        </Menu>\r\n        <Divider />\r\n        <Container className={classes.view}>\r\n          {!note.deleted ? (\r\n            <ChipInput\r\n              value={note.tags.map(tag => tag.name)}\r\n              onAdd={chip => tags.add(note.id, chip)}\r\n              onDelete={chip => tags.remove(note.id, chip)}\r\n              placeholder=\"Add tag\"\r\n              fullWidth\r\n            />\r\n          ) : (\r\n            <div />\r\n          )}\r\n          <Typography variant=\"h4\" className={classes.title} gutterBottom>\r\n            {note.title}\r\n          </Typography>\r\n          <Typography\r\n            style={{ whiteSpace: \"pre-wrap\" }}\r\n            variant=\"body1\"\r\n            gutterBottom\r\n          >\r\n            {note.content}\r\n          </Typography>\r\n        </Container>\r\n      </Box>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default NoteView;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\r\nimport {\r\n  ListItemIcon,\r\n  MenuItem\r\n} from \"@material-ui/core\";\r\n\r\nconst RenameNotebookDialog = ({ id, name, rename, setAnchorEl }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [nameInput, setNameInput] = useState(name);\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n    rename(id, nameInput);\r\n    setNameInput(\"\");\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MenuItem\r\n        onClick={() => {\r\n          setOpen(true);\r\n          setNameInput(name)\r\n          setAnchorEl();\r\n        }}\r\n      >\r\n        <ListItemIcon>\r\n          <EditIcon />\r\n        </ListItemIcon>\r\n        Rename notebook\r\n      </MenuItem>\r\n      <Dialog\r\n        open={open}\r\n        onClose={() => setOpen(false)}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        onSubmit={onSubmit}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Rename notebook</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            value={nameInput}\r\n            onChange={event => setNameInput(event.target.value)}\r\n            label=\"Name\"\r\n            variant=\"outlined\"\r\n            name=\"name\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpen(false)} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={onSubmit} color=\"primary\">\r\n            Continue\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RenameNotebookDialog;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { MenuItem, ListItemIcon, DialogContentText } from \"@material-ui/core\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForeverOutlined\";\r\n\r\nconst EmptyTrashDialog = ({ emptyTrash, closeMenu }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <MenuItem\r\n        onClick={() => {\r\n          setOpen(true);\r\n          closeMenu();\r\n        }}\r\n      >\r\n        <ListItemIcon>\r\n          <DeleteForeverIcon />\r\n        </ListItemIcon>\r\n        Empty Trash\r\n      </MenuItem>\r\n      <Dialog\r\n        open={open}\r\n        onClose={() => setOpen(false)}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        onSubmit={emptyTrash}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Empty Trash?</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Are you sure you want to empty the trash? All items in the trash\r\n            will be permanently deleted and cannot be restored.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpen(false)} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={emptyTrash} color=\"primary\">\r\n            Empty\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmptyTrashDialog;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  ListItem,\r\n  ListItemText,\r\n  List,\r\n  Container,\r\n  Typography,\r\n  Box,\r\n  IconButton,\r\n  Grid,\r\n  Menu,\r\n  MenuItem,\r\n  ListItemIcon\r\n} from \"@material-ui/core\";\r\nimport { distanceInWordsToNow } from \"date-fns\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport DeleteIcon from \"@material-ui/icons/DeleteOutlined\";\r\nimport RenameNotebookDialog from \"./RenameNotebookDialog copy\";\r\nimport EmptyTrashDialog from \"./EmptyTrashDialog\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  header: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(6)\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200\r\n  },\r\n  tertiary: {\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  textItem: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst NoteList = ({ notes, noteSetter }) => {\r\n  const [selectedNote, setSelectedNote] = useState(1);\r\n  const classes = useStyles();\r\n\r\n  const truncate = content => {\r\n    const charLength = 100;\r\n    if (content.indexOf(\"\\n\") === -1) {\r\n      return content.length < charLength\r\n        ? content\r\n        : `${content.slice(0, charLength)}...`;\r\n    }\r\n    return truncate(content.substring(0, content.indexOf(\"\\n\")));\r\n  };\r\n\r\n  const getItems = () =>\r\n    notes.map((note, index) => (\r\n      <ListItem\r\n        button\r\n        selected={selectedNote === note.id}\r\n        onClick={() => {\r\n          noteSetter(note.id);\r\n          setSelectedNote(note.id);\r\n        }}\r\n        key={index}\r\n        divider\r\n      >\r\n        <ListItemText\r\n          disableTypography\r\n          className={classes.textItem}\r\n          primary={<Typography variant=\"subtitle1\">{note.title}</Typography>}\r\n          secondary={\r\n            <Box>\r\n              <Box color=\"text.secondary\">{truncate(note.content)}</Box>\r\n              <Box color=\"text.hint\" className={classes.tertiary}>\r\n                <Typography variant=\"caption\">\r\n                  {distanceInWordsToNow(note.date, { addSuffix: true })}\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n          }\r\n        />\r\n      </ListItem>\r\n    ));\r\n\r\n  if (notes.length > 0) {\r\n    return <List component=\"nav\">{getItems()}</List>;\r\n  }\r\n  return <Container />;\r\n};\r\n\r\nconst NoteListView = ({ name, notes, noteSetter, menu, notebooks, trash }) => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const getMenu = () => {\r\n    if (!menu || (menu !== \"notebook\" && notes.length === 0)) {\r\n      return <div />;\r\n    } else {\r\n      return (\r\n        <div>\r\n          <IconButton onClick={event => setAnchorEl(event.currentTarget)}>\r\n            <MoreHorizIcon />\r\n          </IconButton>\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={() => setAnchorEl(null)}\r\n          >\r\n            {menu === \"notebook\" ? (\r\n              <div>\r\n                <RenameNotebookDialog\r\n                  id={notebooks.id}\r\n                  name={name}\r\n                  rename={notebooks.rename}\r\n                  setAnchorEl={() => setAnchorEl(null)}\r\n                />\r\n                {notes.length === 0 ? (\r\n                  <MenuItem\r\n                    onClick={() => {\r\n                      setAnchorEl(null);\r\n                      notebooks.delete(notebooks.id);\r\n                    }}\r\n                  >\r\n                    <ListItemIcon>\r\n                      <DeleteIcon />\r\n                    </ListItemIcon>\r\n                    Delete notebook\r\n                  </MenuItem>\r\n                ) : (\r\n                  <div />\r\n                )}\r\n              </div>\r\n            ) : (\r\n              <EmptyTrashDialog\r\n                emptyTrash={trash.empty}\r\n                closeMenu={() => setAnchorEl(null)}\r\n              />\r\n            )}\r\n          </Menu>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box style={{ maxHeight: \"100%\", overflowY: \"auto\" }}>\r\n      <Container>\r\n        <Typography className={classes.header} variant=\"h6\">\r\n          {name}\r\n        </Typography>\r\n        <Grid container alignItems=\"center\">\r\n          <Grid item xs={11}>\r\n            <Box color=\"text.secondary\">\r\n              <Typography variant=\"subtitle2\">\r\n                {notes.length} {notes.length === 1 ? \"note\" : \"notes\"}\r\n              </Typography>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={1}>\r\n            {getMenu()}\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      <NoteList notes={notes} noteSetter={noteSetter} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default NoteListView;\r\n","import React from \"react\";\r\nimport NoteListView from \"./NoteListView\";\r\n\r\nconst Bridge = ({\r\n  page,\r\n  openFolder,\r\n  notes,\r\n  notebooks,\r\n  trash,\r\n  tags,\r\n  noteSetter,\r\n  searchTerm\r\n}) => {\r\n  const search = note => {\r\n    return (\r\n      searchTerm.value.length > 0 &&\r\n      (note.title.toLowerCase().includes(searchTerm.value.toLowerCase()) ||\r\n        note.content.toLowerCase().includes(searchTerm.value.toLowerCase()))\r\n    );\r\n  };\r\n\r\n  if (openFolder === \"search\") {\r\n    document.title = \"Search Results - Noto\";\r\n    return (\r\n      <NoteListView\r\n        name={\r\n          searchTerm.value.length > 0\r\n            ? `Search results for '${searchTerm.value}'`\r\n            : \"Start typing...\"\r\n        }\r\n        notes={notes.filter(search)}\r\n        noteSetter={noteSetter}\r\n      />\r\n    );\r\n  }\r\n  if (openFolder === \"all\") {\r\n    document.title = \"All Notes - Noto\";\r\n    return (\r\n      <NoteListView\r\n        name=\"All Notes\"\r\n        notes={notes.filter(note => !note.deleted)}\r\n        noteSetter={noteSetter}\r\n      />\r\n    );\r\n  }\r\n  if (openFolder === \"notebook\") {\r\n    const notebookName = notebooks.all.find(notebook => notebook.id === page)\r\n      .name;\r\n    document.title = `${notebookName} - Noto`;\r\n    return (\r\n      <NoteListView\r\n        name={notebookName}\r\n        notes={notes.filter(note => note.notebook.id === page && !note.deleted)}\r\n        noteSetter={noteSetter}\r\n        menu=\"notebook\"\r\n        notebooks={{ ...notebooks, id: page }}\r\n      />\r\n    );\r\n  }\r\n  if (openFolder === \"tag\") {\r\n    const tag = tags.find(tag => tag.id === page);\r\n    document.title = `${tag.name} - Noto`;\r\n    return (\r\n      <NoteListView\r\n        name={`Tagged '${tag.name}'`}\r\n        notes={notes.filter(note => note.tags.includes(tag) && !note.deleted)}\r\n        noteSetter={noteSetter}\r\n      />\r\n    );\r\n  }\r\n  if (openFolder === \"trash\") {\r\n    document.title = \"Trash - Noto\";\r\n    return (\r\n      <NoteListView\r\n        name=\"Trash\"\r\n        notes={notes.filter(note => note.deleted)}\r\n        noteSetter={noteSetter}\r\n        menu=\"trash\"\r\n        trash={trash}\r\n      />\r\n    );\r\n  }\r\n  return <h1>Invalid Folder</h1>;\r\n};\r\n\r\nexport default Bridge;\r\n","let id = 0;\r\n\r\nexport default class Tag {\r\n  constructor(name) {\r\n    this.id = id++;\r\n    this.name = name;\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Sidebar from \"./components/Sidebar\";\nimport NoteView from \"./components/NoteView\";\nimport Bridge from \"./components/Bridge\";\nimport {\n  createMuiTheme,\n  CssBaseline,\n  Snackbar,\n  IconButton\n} from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport purple from \"@material-ui/core/colors/purple\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Tag from \"./models/Tag\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  content: {\n    flexGrow: 1\n  },\n  close: {\n    padding: theme.spacing(0.5)\n  }\n}));\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    primary: {\n      main: purple[\"200\"]\n    }\n  }\n});\n\nconst lightTheme = createMuiTheme({\n  palette: {\n    type: \"light\"\n  }\n});\n\nfunction App(props) {\n  const classes = useStyles();\n  const [page, setPage] = useState(0);\n  const [notes, setNotes] = useState(props.notes);\n  const [notebooks, setNotebooks] = useState(props.notebooks);\n  // eslint-disable-next-line\n  const [tags, setTags] = useState(props.tags);\n  const [openNote, setOpenNote] = useState(1);\n  const [dark, setDark] = useState(true);\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  // OPTIONS: all, notebook, tag, trash\n  const [openFolder, setOpenFolder] = useState(\"all\");\n\n  const setDarkTheme = value => {\n    setDark(value);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpenSnackbar(false);\n  };\n\n  const pageSetter = pageNumber => {\n    setPage(pageNumber);\n  };\n\n  const folderSetter = folder => {\n    setOpenFolder(folder);\n  };\n\n  const noteSetter = noteId => {\n    setOpenNote(noteId);\n  };\n\n  const addNote = note => {\n    setNotes(notes.concat(note));\n    setSnackbarMessage(`Successfully created ${note.title}`);\n    setOpenSnackbar(true);\n  };\n\n  const editNote = (id, title, content, notebook) => {\n    let copy = [...notes];\n    let note = copy[copy.findIndex(note => note.id === id)];\n    note.title = title;\n    note.content = content;\n    note.notebook = notebook;\n    note.date = new Date();\n    setNotes(copy);\n    setSnackbarMessage(`${note.title} updated`);\n    setOpenSnackbar(true);\n  };\n\n  const renameNotebook = (id, name) => {\n    let copy = [...notebooks];\n    let notebook = copy[copy.findIndex(notebook => notebook.id === id)];\n    notebook.name = name;\n    setNotebooks(copy);\n    setSnackbarMessage(\"Notebook renamed\");\n    setOpenSnackbar(true);\n  };\n\n  const deleteNotebook = id => {\n    let copy = [...notebooks];\n    let notebook = copy.find(notebook => notebook.id === id);\n    copy.splice(copy.indexOf(notebook), 1);\n    setNotebooks(copy);\n    setOpenFolder(\"all\");\n    setSnackbarMessage(`Deleted ${notebook.name}`);\n    setOpenSnackbar(true);\n  };\n\n  const deleteNote = noteId => {\n    let copy = [...notes];\n    let note = copy[copy.findIndex(note => note.id === noteId)];\n    note.deleted = true;\n    setNotes(copy);\n    setOpenNote(-1);\n    setSnackbarMessage(`${note.title} moved to Trash`);\n    setOpenSnackbar(true);\n  };\n\n  const restoreNote = noteId => {\n    let copy = [...notes];\n    let note = copy[copy.findIndex(note => note.id === noteId)];\n    note.deleted = false;\n    setNotes(copy);\n    setOpenNote(-1);\n    setSnackbarMessage(`${note.title} restored to ${note.notebook.name}`);\n    setOpenSnackbar(true);\n  };\n\n  const addNotebook = notebook => {\n    setNotebooks(notebooks.concat(notebook));\n    setSnackbarMessage(`Successfully created ${notebook.name}`);\n    setOpenSnackbar(true);\n  };\n\n  const addTag = (noteId, tagName) => {\n    let tagFound = tags.find(tag => tag.name === tagName);\n    if (!tagFound) {\n      tagFound = new Tag(tagName);\n      setTags(tags.concat(tagFound));\n    }\n    let copy = [...notes];\n    let note = copy[copy.findIndex(note => note.id === noteId)];\n    note.tags = note.tags.concat(tagFound);\n    setNotes(copy);\n  };\n\n  const removeTag = (noteId, tagName) => {\n    let copy = [...notes];\n    let note = copy[copy.findIndex(note => note.id === noteId)];\n    let tag = note.tags.find(tag => tag.name === tagName);\n    note.tags.splice(note.tags.indexOf(tag), 1);\n    setNotes(copy);\n    if (\n      !notes.some(\n        note => note.tags.findIndex(tag => tag.name === tagName) !== -1\n      )\n    ) {\n      let copyTags = [...tags];\n      let tagId = tag.id;\n      copyTags.splice(copyTags.findIndex(tag => tag.name === tagName), 1);\n      setTags(copyTags);\n      if (openFolder === \"tag\" && page === tagId) {\n        setOpenFolder(\"all\");\n      }\n    }\n  };\n\n  const emptyTrash = () => {\n    const recursiveDeletion = (all, trash) => {\n      if (trash === 0) {\n        setNotes(all);\n        setSnackbarMessage(\"Trash emptied\");\n        setOpenSnackbar(true);\n        return;\n      }\n      all.splice(all.findIndex(note => note.deleted), 1);\n      recursiveDeletion(all, trash - 1);\n    };\n    recursiveDeletion([...notes], notes.filter(note => note.deleted).length);\n  };\n\n  return (\n    <ThemeProvider theme={dark ? darkTheme : lightTheme}>\n      <div className={classes.root}>\n        <CssBaseline />\n        <Sidebar\n          addNote={addNote}\n          addNotebook={addNotebook}\n          pageSetter={pageSetter}\n          folderSetter={folderSetter}\n          notebooks={notebooks}\n          tags={tags}\n          theme={{ dark: dark, setDarkTheme: setDarkTheme }}\n          search={{\n            term: searchTerm,\n            update: value => setSearchTerm(value)\n          }}\n        />\n        <main className={classes.content}>\n          <Bridge\n            page={page}\n            openFolder={openFolder}\n            notes={notes}\n            notebooks={{\n              all: notebooks,\n              rename: renameNotebook,\n              delete: deleteNotebook\n            }}\n            trash={{ empty: emptyTrash }}\n            tags={tags}\n            noteSetter={noteSetter}\n            searchTerm={{\n              value: searchTerm,\n              update: value => setSearchTerm(value)\n            }}\n          />\n        </main>\n        <NoteView\n          note={notes.filter(note => note.id === openNote)[0]}\n          editNote={editNote}\n          deleteNote={deleteNote}\n          restoreNote={restoreNote}\n          notebooks={notebooks}\n          tags={{ add: addTag, remove: removeTag }}\n        />\n        <Snackbar\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"left\"\n          }}\n          open={openSnackbar}\n          autoHideDuration={6000}\n          onClose={handleClose}\n          ContentProps={{\n            \"aria-describedby\": \"message-id\"\n          }}\n          message={<span id=\"message-id\">{snackbarMessage}</span>}\n          action={[\n            <IconButton\n              key=\"close\"\n              aria-label=\"close\"\n              color=\"inherit\"\n              className={classes.close}\n              onClick={handleClose}\n            >\n              <CloseIcon />\n            </IconButton>\n          ]}\n        />\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Note from \"./models/Note\";\nimport Notebook from \"./models/Notebook\";\nimport Tag from \"./models/Tag\";\n\nconst notebooks = [\n  new Notebook(\"My Notebook\"),\n];\n\nconst tags = [\n  new Tag(\"Noto\"),\n  new Tag(\"WIP\"),\n];\n\nconst notes = [\n  new Note(\n    \"Welcome to Noto 📝\",\n    \"To get started, click the 'New Note' button on the sidebar.\\n\\nCreate notebooks to organize notes with a common topic. Add tags at the top each note to further categorize them.\",\n    new Date(2019, 6, 29),\n    notebooks[0],\n    [tags[0]]\n  ),\n  new Note(\n    \"TODO 📃\",\n    \"✅ Add dark mode 🌙\\n❌ Add login/logout 👤\\n✅ Implement search 🔍\\n✅ Tag creation/removal in note view\\n✅ CRUD notes\\n✅ Rename and delete notebooks 📓\\n✅ Empty the trash 🗑\\n❌ Order notes displayed (alphabetical, date created, ascending/descending)\\n❌ Use a rich text editor (maybe Draft.js)\",\n    new Date(2019, 7, 1),\n    notebooks[0],\n    [...tags]\n  ),\n  new Note(\n    \"Known Issues 🐛\",\n    \"- When deleting a note, it's still selected in the folder.\\n- NOT responsive on mobile.\\n- All Notes not selected when redirected there.\\n- Cannot move arrow keys up or down in edit note dialog.\\n- React complains about something in edit note dialog (most likely related to above).\",\n    new Date(2019, 7, 1),\n    notebooks[0],\n    [...tags]\n  ),\n];\n\nReactDOM.render(\n  <App notes={notes} notebooks={notebooks} tags={tags} />,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}