{"version":3,"sources":["components/User.js","components/SearchBar.js","models/Notebook.js","components/NewNotebookDialog.js","components/Navigation.js","models/Note.js","components/CreateButton.js","components/NewNoteDialog.js","components/Sidebar.js","components/EditNoteDialog.js","components/DeleteNoteDialog.js","components/NoteView.js","components/RenameNotebookDialog copy.js","components/EmptyTrashDialog.js","components/NoteListView.js","components/Bridge.js","models/Tag.js","components/Login.js","models/Account.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","avatar","margin","User","_ref","user","classes","_React$useState","React","useState","_React$useState2","Object","slicedToArray","anchorEl","setAnchorEl","react_default","a","createElement","ListItem","ListItemAvatar","Avatar","className","name","nameArray","split","charAt","length","toUpperCase","getInitials","get","ListItemText","primary","IconButton","edge","onClick","event","currentTarget","ExpandMore_default","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","setDarkTheme","dark","ListItemIcon","InvertColors_default","signOut","ExitToApp_default","email","inputRoot","color","inputInput","defineProperty","padding","spacing","transition","transitions","create","width","breakpoints","up","&:focus","search","position","borderRadius","shape","backgroundColor","fade","palette","common","black","&:hover","marginLeft","searchIcon","height","pointerEvents","display","alignItems","justifyContent","SearchBar","folderSetter","Search_default","InputBase","value","term","onChange","update","target","placeholder","root","input","inputProps","aria-label","Notebook","author","classCallCheck","this","NewNotebookDialog","addNotebook","_useState","_useState2","setOpen","_useState3","_useState4","nameInput","setNameInput","onSubmit","preventDefault","newNotebook","button","AddCircleOutline_default","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","label","variant","fullWidth","DialogActions","Button","nested","paddingLeft","Navigation","folder","notebooks","tags","openNotebooks","setOpenNotebooks","openTags","setOpenTags","onDropDownClick","setter","type","set","List","selected","Note_default","Book_default","ExpandLess_default","Collapse","in","timeout","unmountOnExit","component","disablePadding","map","notebook","index","key","BookOutlined_default","components_NewNotebookDialog","LocalOffer_default","tag","Delete_default","Note","title","content","date","arguments","undefined","Date","deleted","leftIcon","marginRight","CreateButton","size","AddCircle_default","NewNoteDialog","addNote","titleInput","setTitleInput","_useState5","_useState6","contentInput","setContentInput","_useState7","_useState8","values","setValues","newNote","Container","components_CreateButton","multiline","rows","FormControl","InputLabel","htmlFor","Select","oldValues","objectSpread","drawer","flexShrink","drawerPaper","Sidebar","Drawer","paper","anchor","style","components_User","components_SearchBar","components_NewNoteDialog","components_Navigation","EditNoteDialog","note","editNote","closeMenu","handleClose","EditOutlined_default","DeleteNoteDialog","noteTitle","deleteNote","DeleteOutlined_default","appBar","top","bottom","view","iconLeft","chip","marginTop","NoteView","restoreNote","Box","maxHeight","overflowY","Grid","container","direction","item","xs","Typography","gutterBottom","fontSize","alignContent","MoreVert_default","UndoOutlined_default","components_EditNoteDialog","components_DeleteNoteDialog","Divider","whiteSpace","AppBar","Toolbar","ChipInput_default","onAdd","add","onDelete","remove","RenameNotebookDialog","rename","EmptyTrashDialog","emptyTrash","DeleteForeverOutlined_default","header","marginBottom","textField","tertiary","textItem","paddingRight","NoteList","notes","truncate","indexOf","concat","slice","substring","all","divider","disableTypography","secondary","distanceInWordsToNow","addSuffix","NoteListView","_ref2","menu","trash","MoreHoriz_default","RenameNotebookDialog_copy","delete","components_EmptyTrashDialog","empty","NoteListView_NoteList","Bridge","items","searchTerm","document","components_NoteListView","filter","toLowerCase","includes","noteSetter","find","Tag","card","alignSelf","maxWidth","flexWrap","flexGrow","paddingTop","dense","subheader","Login","say","password","confirmPassword","createAccount","setCreateAccount","setTitle","handleChange","Card","CardContent","justify","Fragment","required","autoComplete","test","String","validatedUser","validate","logIn","Account","close","darkTheme","createMuiTheme","main","purple","lightTheme","App","props","setSearchTerm","users","setUsers","setNotes","setNotebooks","_useState9","_useState10","setTags","_useState11","_useState12","setDark","_useState13","_useState14","openSnackbar","setOpenSnackbar","_useState15","_useState16","snackbarMessage","setSnackbarMessage","_useState17","_useState18","loggedIn","setLoggedIn","_useState19","_useState20","setUser","_useState21","_useState22","folderType","setFolderType","_useState23","_useState24","folderId","setFolderId","_useState25","_useState26","openNoteId","setOpenNoteId","reason","message","ThemeProvider","CssBaseline","components_Sidebar","components_Bridge","copy","toConsumableArray","findIndex","splice","recursiveDeletion","components_NoteView","noteId","tagName","tagFound","some","copyTags","tagId","components_Login","newAccount","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","aria-describedby","action","Close_default","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gWAgBMA,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCC,OAAQ,CACNC,OAAQ,OA6DGC,EAzDF,SAAAC,GAAqB,IAAlBC,EAAkBD,EAAlBC,KAAML,EAAYI,EAAZJ,MACdM,EAAUR,IADgBS,EAEAC,IAAMC,SAAS,MAFfC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAEzBM,EAFyBH,EAAA,GAEfI,EAFeJ,EAAA,GAYhC,OACEK,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQC,UAAWf,EAAQL,QAZf,SAAAqB,GAClB,IAAIC,EAAYD,EAAKE,MAAM,KAC3B,OACEF,EAAKG,OAAO,IACXF,EAAUG,OAAS,EAAIH,EAAUA,EAAUG,OAAS,GAAGD,OAAO,GAAK,KACpEE,cAQOC,CAAYvB,EAAKwB,IAAIP,QAG1BP,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAcC,QAAS1B,EAAKwB,IAAIP,OAChCP,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACEC,KAAK,MACLC,QAAS,SAAAC,GAAK,OAAIrB,EAAYqB,EAAMC,iBAEpCrB,EAAAC,EAAAC,cAACoB,EAAArB,EAAD,QAGJD,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CACEC,GAAG,cACH1B,SAAUA,EACV2B,aAAW,EACXC,KAAMC,QAAQ7B,GACd8B,QAAS,kBAAM7B,EAAY,QAE3BC,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CACEV,QAAS,WACPlC,EAAM6C,cAAc7C,EAAM8C,MAC1BhC,EAAY,QAGdC,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,KACEhC,EAAAC,EAAAC,cAAC+B,EAAAhC,EAAD,OAPJ,UASUhB,EAAM8C,KAAO,QAAU,OATjC,SAWA/B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAUV,QAAS,kBAAM7B,EAAK4C,YAC5BlC,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,KACEhC,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,OAFJ,YAIYX,EAAKwB,IAAIsB,qDCnEvBrD,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCoD,UAAW,CACTC,MAAO,WAETC,WAAW3C,OAAA4C,EAAA,EAAA5C,CAAA,CACT6C,QAASxD,EAAMyD,QAAQ,EAAG,EAAG,EAAG,GAChCC,WAAY1D,EAAM2D,YAAYC,OAAO,SACrCC,MAAO,QACN7D,EAAM8D,YAAYC,GAAG,MAAQ,CAC5BF,MAAO,IACPG,UAAW,CACTH,MAAO,OAIbI,OAAOtD,OAAA4C,EAAA,EAAA5C,CAAA,CACLuD,SAAU,WACVC,aAAcnE,EAAMoE,MAAMD,aAC1BE,gBAAiBC,YAAKtE,EAAMuE,QAAQC,OAAOC,MAAO,KAClDC,UAAW,CACTL,gBAAiBC,YAAKtE,EAAMuE,QAAQC,OAAOC,MAAO,MAEpDE,WAAY,EACZd,MAAO,QACN7D,EAAM8D,YAAYC,GAAG,MAAQ,CAC5B7D,OAAQF,EAAMyD,QAAQ,GACtBI,MAAO,SAGXe,WAAY,CACVf,MAAO7D,EAAMyD,QAAQ,GACrBoB,OAAQ,OACRX,SAAU,WACVY,cAAe,OACfC,QAAS,OACTC,WAAY,SACZC,eAAgB,aA2BLC,EAvBG,SAAA9E,GAA8B,IAA3B6D,EAA2B7D,EAA3B6D,OAAQkB,EAAmB/E,EAAnB+E,aACrB7E,EAAUR,IAEhB,OACEiB,EAAAC,EAAAC,cAAA,OAAKI,UAAWf,EAAQ2D,QACtBlD,EAAAC,EAAAC,cAAA,OAAKI,UAAWf,EAAQsE,YACtB7D,EAAAC,EAAAC,cAACmE,EAAApE,EAAD,OAEFD,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CACEC,MAAOrB,EAAOsB,KACdC,SAAU,SAAArD,GAAK,OAAI8B,EAAOwB,OAAOtD,EAAMuD,OAAOJ,QAC9CpD,QAAS,kBAAMiD,EAAa,WAC5BQ,YAAY,sBACZrF,QAAS,CACPsF,KAAMtF,EAAQ8C,UACdyC,MAAOvF,EAAQgD,YAEjBwC,WAAY,CAAEC,aAAc,6NC9DhCxD,GAAK,EAEYyD,GACnB,SAAAA,EAAYC,EAAQ3E,GAAOX,OAAAuF,GAAA,EAAAvF,CAAAwF,KAAAH,GACzBG,KAAK5D,GAAKA,KACV4D,KAAKF,OAASA,EACdE,KAAK7E,KAAOA,aC6DD8E,GAxDW,SAAAhG,GAAsC,IAAnCC,EAAmCD,EAAnCC,KAAMgB,EAA6BjB,EAA7BiB,UAAWgF,EAAkBjG,EAAlBiG,YAAkBC,EACtC7F,oBAAS,GAD6B8F,EAAA5F,OAAAC,EAAA,EAAAD,CAAA2F,EAAA,GACvD7D,EADuD8D,EAAA,GACjDC,EADiDD,EAAA,GAAAE,EAE5BhG,mBAAS,IAFmBiG,EAAA/F,OAAAC,EAAA,EAAAD,CAAA8F,EAAA,GAEvDE,EAFuDD,EAAA,GAE5CE,EAF4CF,EAAA,GAIxDG,EAAW,SAAA1E,GACfA,EAAM2E,iBACN,IAAMC,EAAc,IAAIf,GAAS3F,EAAMsG,GACvCN,EAAYU,GACZH,EAAa,IACbJ,GAAQ,IAGV,OACEzF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAU8F,QAAM,EAAC3F,UAAWA,EAAWa,QAAS,kBAAMsE,GAAQ,KAC5DzF,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,KACEhC,EAAAC,EAAAC,cAACgG,EAAAjG,EAAD,OAEFD,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAcC,QAAQ,kBAExBhB,EAAAC,EAAAC,cAACiG,EAAA,EAAD,CACEzE,KAAMA,EACNE,QAAS,kBAAM6D,GAAQ,IACvBW,kBAAgB,oBAChBN,SAAUA,GAEV9F,EAAAC,EAAAC,cAACmG,GAAA,EAAD,CAAa7E,GAAG,qBAAhB,uBACAxB,EAAAC,EAAAC,cAACoG,EAAA,EAAD,KACEtG,EAAAC,EAAAC,cAACqG,GAAA,EAAD,CAAmB/E,GAAG,4BAAtB,kEAGAxB,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CACEC,WAAS,EACTtH,OAAO,QACPqC,GAAG,OACH+C,MAAOqB,EACPnB,SAAU,SAAArD,GAAK,OAAIyE,EAAazE,EAAMuD,OAAOJ,QAC7CmC,MAAM,OACNC,QAAQ,WACRpG,KAAK,OACLqG,WAAS,KAGb5G,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,KACE7G,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,CAAQ3F,QAAS,kBAAMsE,GAAQ,IAAQnD,MAAM,WAA7C,UAGAtC,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,CAAQ3F,QAAS2E,EAAUxD,MAAM,WAAjC,cCxCJvD,GAAYC,YAAW,SAAAC,GAAK,MAAK,CACrC8H,OAAQ,CACNC,YAAa/H,EAAMyD,QAAQ,OAqHhBuE,GAjHI,SAAA5H,GAAoD,IAAjDC,EAAiDD,EAAjDC,KAAMgG,EAA2CjG,EAA3CiG,YAAa4B,EAA8B7H,EAA9B6H,OAAQC,EAAsB9H,EAAtB8H,UAAWC,EAAW/H,EAAX+H,KACpD7H,EAAUR,KADqDwG,EAE3B7F,oBAAS,GAFkB8F,EAAA5F,OAAAC,EAAA,EAAAD,CAAA2F,EAAA,GAE9D8B,EAF8D7B,EAAA,GAE/C8B,EAF+C9B,EAAA,GAAAE,EAGrChG,oBAAS,GAH4BiG,EAAA/F,OAAAC,EAAA,EAAAD,CAAA8F,EAAA,GAG9D6B,EAH8D5B,EAAA,GAGpD6B,EAHoD7B,EAAA,GA0C/D8B,EAAkB,SAAClD,EAAOmD,GAC9B,OAAO,WACLA,GAAQnD,KAINpD,EAAU,SAACK,EAAImG,GACnB,OAAO,WACLT,EAAO1F,GAAGoG,IAAIpG,GACd0F,EAAOS,KAAKC,IAAID,KAIpB,OACE3H,EAAAC,EAAAC,cAAC2H,EAAA,EAAD,KACE7H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8F,QAAM,EACN9E,QAASA,EAAQ,EAAG,OACpB2G,SAA8B,IAApBZ,EAAO1F,GAAGV,OAAqC,QAAtBoG,EAAOS,KAAK7G,OAE/Cd,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,KACEhC,EAAAC,EAAAC,cAAC6H,EAAA9H,EAAD,OAEFD,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAcC,QAAQ,eAExBhB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8F,QAAM,EACN9E,QAASsG,EAAgBJ,EAAeC,IAExCtH,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,KACEhC,EAAAC,EAAAC,cAAC8H,EAAA/H,EAAD,OAEFD,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAcC,QAAQ,cACrBqG,EAAgBrH,EAAAC,EAAAC,cAAC+H,EAAAhI,EAAD,MAAiBD,EAAAC,EAAAC,cAACoB,EAAArB,EAAD,OAEpCD,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAUC,GAAId,EAAee,QAAQ,OAAOC,eAAa,GACvDrI,EAAAC,EAAAC,cAAC2H,EAAA,EAAD,CAAMS,UAAU,MAAMC,gBAAc,GAxEjCpB,EAAUqB,IAAI,SAACC,EAAUC,GAC9B,OACE1I,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8F,QAAM,EACN9E,QAASA,EAAQsH,EAASjH,GAAI,YAC9BsG,SACEZ,EAAO1F,GAAGV,QAAU2H,EAASjH,IAA4B,aAAtB0F,EAAOS,KAAK7G,MAEjD6H,IAAKD,EACLpI,UAAWf,EAAQwH,QAEnB/G,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,KACEhC,EAAAC,EAAAC,cAAC0I,EAAA3I,EAAD,OAEFD,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAcC,QAASyH,EAASlI,UA4DhCP,EAAAC,EAAAC,cAAC2I,GAAD,CACEvJ,KAAMA,EACNgB,UAAWf,EAAQwH,OACnBzB,YAAaA,MAInBtF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAU8F,QAAM,EAAC9E,QAASsG,EAAgBF,EAAUC,IAClDxH,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,KACEhC,EAAAC,EAAAC,cAAC4I,EAAA7I,EAAD,OAEFD,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAcC,QAAQ,SACrBuG,EAAWvH,EAAAC,EAAAC,cAAC+H,EAAAhI,EAAD,MAAiBD,EAAAC,EAAAC,cAACoB,EAAArB,EAAD,OAE/BD,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAUC,GAAIZ,EAAUa,QAAQ,OAAOC,eAAa,GAClDrI,EAAAC,EAAAC,cAAC2H,EAAA,EAAD,CAAMS,UAAU,MAAMC,gBAAc,GApEjCnB,EAAKoB,IAAI,SAACO,EAAKL,GACpB,OACE1I,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8F,QAAM,EACN9E,QAASA,EAAQ4H,EAAIvH,GAAI,OACzBsG,SAAUZ,EAAO1F,GAAGV,QAAUiI,EAAIvH,IAA4B,QAAtB0F,EAAOS,KAAK7G,MACpD6H,IAAKD,EACLpI,UAAWf,EAAQwH,QAEnB/G,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAcC,QAAS+H,EAAIxI,YA+D/BP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8F,QAAM,EACN9E,QAASA,GAAS,EAAG,SACrB2G,UAA+B,IAArBZ,EAAO1F,GAAGV,OAAsC,UAAtBoG,EAAOS,KAAK7G,OAEhDd,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,KACEhC,EAAAC,EAAAC,cAAC8I,EAAA/I,EAAD,OAEFD,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAcC,QAAQ,wECjI1BQ,GAAK,EAEYyH,GACnB,SAAAA,EACE/D,EACAgE,EACAC,GAIA,IAHAC,EAGAC,UAAA1I,OAAA,QAAA2I,IAAAD,UAAA,GAAAA,UAAA,GAHO,IAAIE,KACXd,EAEAY,UAAA1I,OAAA,QAAA2I,IAAAD,UAAA,GAAAA,UAAA,GAFW,IAAIpE,GAAS,WACxBmC,EACAiC,UAAA1I,OAAA,QAAA2I,IAAAD,UAAA,GAAAA,UAAA,GADO,GACPzJ,OAAAuF,GAAA,EAAAvF,CAAAwF,KAAA6D,GACA7D,KAAKF,OAASA,EACdE,KAAK5D,GAAKA,KACV4D,KAAK8D,MAAQA,EACb9D,KAAK+D,QAAUA,EACf/D,KAAKgE,KAAOA,EACZhE,KAAKqD,SAAWA,EAChBrD,KAAKoE,SAAU,EACfpE,KAAKgC,KAAOA,wBCfVrI,GAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCgH,OAAQ,CACN9G,OAAQF,EAAMyD,QAAQ,IAExB+G,SAAU,CACRC,YAAazK,EAAMyD,QAAQ,OAoBhBiH,GAhBM,SAAAtK,GAAiB,IAAd8B,EAAc9B,EAAd8B,QAChB5B,EAAUR,KAEhB,OACEiB,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,CACE3F,QAASA,EACTyI,KAAK,QACLtH,MAAM,UACNhC,UAAWf,EAAQ0G,QAEnBjG,EAAAC,EAAAC,cAAC2J,GAAA5J,EAAD,CAAWK,UAAWf,EAAQkK,WANhC,aC0GWK,GA3GO,SAAAzK,GAAkC,IAA/BC,EAA+BD,EAA/BC,KAAMyK,EAAyB1K,EAAzB0K,QAAS5C,EAAgB9H,EAAhB8H,UAAgB5B,EAC9B7F,oBAAS,GADqB8F,EAAA5F,OAAAC,EAAA,EAAAD,CAAA2F,EAAA,GAC/C7D,EAD+C8D,EAAA,GACzCC,EADyCD,EAAA,GAAAE,EAElBhG,mBAAS,IAFSiG,EAAA/F,OAAAC,EAAA,EAAAD,CAAA8F,EAAA,GAE/CsE,EAF+CrE,EAAA,GAEnCsE,EAFmCtE,EAAA,GAAAuE,EAGdxK,mBAAS,IAHKyK,EAAAvK,OAAAC,EAAA,EAAAD,CAAAsK,EAAA,GAG/CE,EAH+CD,EAAA,GAGjCE,EAHiCF,EAAA,GAAAG,EAI1B5K,mBAAS,CACnC+I,SAAUtB,EAAU,KALgCoD,EAAA3K,OAAAC,EAAA,EAAAD,CAAA0K,EAAA,GAI/CE,EAJ+CD,EAAA,GAIvCE,EAJuCF,EAAA,GAsBhDzE,EAAW,SAAA1E,GACfA,EAAM2E,iBACN,IAAM2E,EAAU,IAAIzB,GAClB3J,EACA0K,EACAI,EACA,IAAIb,KACJiB,EAAO/B,UAETsB,EAAQW,GACRT,EAAc,IACdI,EAAgB,IAChBI,EAAU,IACVhF,GAAQ,IAGV,OACEzF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACyK,GAAA,EAAD,KACE3K,EAAAC,EAAAC,cAAC0K,GAAD,CACEzJ,QAAS,WACPsE,GAAQ,GACRgF,EAAU,CAAEhC,SAAUtB,EAAU,SAItCnH,EAAAC,EAAAC,cAACiG,EAAA,EAAD,CACEzE,KAAMA,EACNE,QAAS,kBAAM6D,GAAQ,IACvBW,kBAAgB,oBAChBN,SAAUA,GAEV9F,EAAAC,EAAAC,cAACmG,GAAA,EAAD,CAAa7E,GAAG,qBAAhB,YACAxB,EAAAC,EAAAC,cAACoG,EAAA,EAAD,KACEtG,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CACEC,WAAS,EACTtH,OAAO,QACPqC,GAAG,OACH+C,MAAOyF,EACPvF,SAAU,SAAArD,GAAK,OAAI6I,EAAc7I,EAAMuD,OAAOJ,QAC9CmC,MAAM,QACNiB,KAAK,QACLhB,QAAQ,WACRpG,KAAK,QACLqG,WAAS,IAEX5G,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CACEhF,GAAG,4BACH+C,MAAO6F,EACP3F,SAAU,SAAArD,GAAK,OAAIiJ,EAAgBjJ,EAAMuD,OAAOJ,QAChDmC,MAAM,UACNmE,WAAS,EACTC,KAAK,IACL3L,OAAO,SACPwH,QAAQ,WACRpG,KAAK,UACLqG,WAAS,IAEX5G,EAAAC,EAAAC,cAAC6K,GAAA,EAAD,CAAanE,WAAS,GACpB5G,EAAAC,EAAAC,cAAC8K,GAAA,EAAD,CAAYC,QAAQ,YAApB,YACAjL,EAAAC,EAAAC,cAACgL,GAAA,EAAD,CACE3G,MAAOiG,EAAO/B,SACdhE,SArES,SAAArD,GACnBqJ,EAAU,SAAAU,GAAS,OAAAvL,OAAAwL,GAAA,EAAAxL,CAAA,GACduL,EADcvL,OAAA4C,EAAA,EAAA5C,CAAA,GAEhBwB,EAAMuD,OAAOpE,KAAOa,EAAMuD,OAAOJ,WAmE1BQ,WAAY,CACVxE,KAAM,WACNiB,GAAI,aA9EhB2F,EAAUqB,IAAI,SAACC,EAAUC,GAAX,OACZ1I,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAU8G,IAAKD,EAAOnE,MAAOkE,GAC1BA,EAASlI,WAmFVP,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,KACE7G,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,CAAQ3F,QAAS,kBAAMsE,GAAQ,IAAQnD,MAAM,WAA7C,UAGAtC,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,CAAQ3F,QAAS2E,EAAUxD,MAAM,WAAjC,cC3GJvD,GAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCoM,OAAQ,CACNvI,MAAO,IACPwI,WAAY,GAEdC,YAAa,CACXzI,MAAO,QAwCI0I,GApCC,SAAAnM,GASV,IARJC,EAQID,EARJC,KACAyK,EAOI1K,EAPJ0K,QACAzE,EAMIjG,EANJiG,YACA4B,EAKI7H,EALJ6H,OACAC,EAII9H,EAJJ8H,UACAC,EAGI/H,EAHJ+H,KACAnI,EAEII,EAFJJ,MACAiE,EACI7D,EADJ6D,OAEM3D,EAAUR,KAEhB,OACEiB,EAAAC,EAAAC,cAACuL,GAAA,EAAD,CACE9E,QAAQ,YACRrG,UAAWf,EAAQ8L,OACnB9L,QAAS,CACPmM,MAAOnM,EAAQgM,aAEjBI,OAAO,OACPC,MAAO,CAAEtI,gBAAiB,QAE1BtD,EAAAC,EAAAC,cAAC2L,EAAD,CAAMvM,KAAMA,EAAML,MAAOA,IACzBe,EAAAC,EAAAC,cAAC4L,EAAD,CAAW5I,OAAQA,EAAQkB,aAAc8C,EAAOS,KAAKC,MACrD5H,EAAAC,EAAAC,cAAC6L,GAAD,CAAezM,KAAMA,EAAKwB,IAAKiJ,QAASA,EAAS5C,UAAWA,IAC5DnH,EAAAC,EAAAC,cAAC8L,GAAD,CACE1M,KAAMA,EAAKwB,IACXwE,YAAaA,EACb4B,OAAQA,EACRC,UAAWA,EACXC,KAAMA,+HC6EC6E,GA7GQ,SAAA5M,GAA8C,IAA3C6M,EAA2C7M,EAA3C6M,KAAMC,EAAqC9M,EAArC8M,SAAUhF,EAA2B9H,EAA3B8H,UAAWiF,EAAgB/M,EAAhB+M,UAAgB7G,EAC3C7F,oBAAS,GADkC8F,EAAA5F,OAAAC,EAAA,EAAAD,CAAA2F,EAAA,GAC5D7D,EAD4D8D,EAAA,GACtDC,EADsDD,EAAA,GAAAE,EAE/BhG,mBAASwM,EAAKhD,OAFiBvD,EAAA/F,OAAAC,EAAA,EAAAD,CAAA8F,EAAA,GAE5DsE,EAF4DrE,EAAA,GAEhDsE,EAFgDtE,EAAA,GAAAuE,EAG3BxK,mBAASwM,EAAK/C,SAHagB,EAAAvK,OAAAC,EAAA,EAAAD,CAAAsK,EAAA,GAG5DE,EAH4DD,EAAA,GAG9CE,EAH8CF,EAAA,GAAAG,EAIvC5K,mBAAS,CACnC+I,SAAUyD,EAAKzD,WALkD8B,EAAA3K,OAAAC,EAAA,EAAAD,CAAA0K,EAAA,GAI5DE,EAJ4DD,EAAA,GAIpDE,EAJoDF,EAAA,GAyB7D8B,EAAc,WAClB5G,GAAQ,IASJK,EAAW,SAAA1E,GACfA,EAAM2E,iBACNoG,EAASD,EAAK1K,GAAIwI,EAAYI,EAAcI,EAAO/B,UACnDwB,EAAc,IACdI,EAAgB,IAChB5E,GAAQ,IAGV,OACEzF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAUV,QA9BK,WACjBsE,GAAQ,GACRwE,EAAciC,EAAKhD,OACnBmB,EAAgB6B,EAAK/C,SACrBsB,EAAU,CACRhC,SAAUyD,EAAKzD,WAEjB2D,MAwBIpM,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,KACEhC,EAAAC,EAAAC,cAACoM,GAAArM,EAAD,OAFJ,aAMAD,EAAAC,EAAAC,cAACiG,EAAA,EAAD,CACEzE,KAAMA,EACNE,QAASyK,EACTjG,kBAAgB,oBAChBN,SAAUA,GAEV9F,EAAAC,EAAAC,cAACmG,GAAA,EAAD,CAAa7E,GAAG,qBAAhB,aACAxB,EAAAC,EAAAC,cAACoG,EAAA,EAAD,KACEtG,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CACEC,WAAS,EACTtH,OAAO,QACPqC,GAAG,OACH+C,MAAOyF,EACPvF,SAAU,SAAArD,GAAK,OAAI6I,EAAc7I,EAAMuD,OAAOJ,QAC9CmC,MAAM,QACNC,QAAQ,WACRpG,KAAK,QACLqG,WAAS,IAEX5G,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CACEhF,GAAG,4BACH+C,MAAO6F,EACP3F,SAAU,SAAArD,GAAK,OAAIiJ,EAAgBjJ,EAAMuD,OAAOJ,QAChDmC,MAAM,UACNmE,WAAS,EACTC,KAAK,IACL3L,OAAO,SACPwH,QAAQ,WACRpG,KAAK,UACLqG,WAAS,IAEX5G,EAAAC,EAAAC,cAAC6K,GAAA,EAAD,CAAanE,WAAS,GACpB5G,EAAAC,EAAAC,cAAC8K,GAAA,EAAD,CAAYC,QAAQ,YAApB,YACAjL,EAAAC,EAAAC,cAACgL,GAAA,EAAD,CACE3G,MAAOiG,EAAO/B,SACdhE,SAzDS,SAAArD,GACnBqJ,EAAU7K,OAAA4C,EAAA,EAAA5C,CAAA,GACPwB,EAAMuD,OAAOpE,KAAOa,EAAMuD,OAAOJ,SAwD1BQ,WAAY,CACVxE,KAAM,WACNiB,GAAI,aAhFhB2F,EAAUqB,IAAI,SAAAC,GAAQ,OACpBzI,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAU8G,IAAKF,EAASjH,GAAI+C,MAAOkE,GAChCA,EAASlI,WAqFVP,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,KACE7G,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,CAAQ3F,QAASkL,EAAa/J,MAAM,WAApC,UAGAtC,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,CAAQ3F,QAAS2E,EAAUxD,MAAM,WAAjC,kCClEKiK,GAzCU,SAAAlN,GAA0C,IAAvCmN,EAAuCnN,EAAvCmN,UAAWC,EAA4BpN,EAA5BoN,WAAYL,EAAgB/M,EAAhB+M,UAAgB7G,EACzC7F,oBAAS,GADgC8F,EAAA5F,OAAAC,EAAA,EAAAD,CAAA2F,EAAA,GAC1D7D,EAD0D8D,EAAA,GACpDC,EADoDD,EAAA,GAGjE,OACExF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CACEV,QAAS,WACPsE,GAAQ,GACR2G,MAGFpM,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,KACEhC,EAAAC,EAAAC,cAACwM,GAAAzM,EAAD,OAPJ,eAWAD,EAAAC,EAAAC,cAACiG,EAAA,EAAD,CACEzE,KAAMA,EACNE,QAAS,kBAAM6D,GAAQ,IACvBW,kBAAgB,oBAChBN,SAAU2G,GAEVzM,EAAAC,EAAAC,cAACmG,GAAA,EAAD,CAAa7E,GAAG,qBAAhB,eACAxB,EAAAC,EAAAC,cAACoG,EAAA,EAAD,KACEtG,EAAAC,EAAAC,cAACqG,GAAA,EAAD,CAAmB/E,GAAG,4BACnBgL,EADH,6BAIFxM,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,KACE7G,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,CAAQ3F,QAAS,kBAAMsE,GAAQ,IAAQnD,MAAM,WAA7C,UAGAtC,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,CAAQ3F,QAASsL,EAAYnK,MAAM,WAAnC,mCClBJvD,GAAYC,YAAW,SAAAC,GAAK,MAAK,CACrC0N,OAAQ,CACNC,IAAK,OACLC,OAAQ,GAEVC,KAAM,CACJrK,QAASxD,EAAMyD,QAAQ,IAEzBqK,SAAU,CACRrD,YAAazK,EAAMyD,QAAQ,IAE7B2I,OAAQ,CACNvI,MAAO,IACPwI,WAAY,GAEdC,YAAa,CACXzI,MAAO,KAETkK,KAAM,CACJ7N,OAAQF,EAAMyD,QAAQ,KAExBwG,MAAO,CACL+D,UAAWhO,EAAMyD,QAAQ,OA6IdwK,GAzIE,SAAA7N,GAOX,IANJ6M,EAMI7M,EANJ6M,KACAC,EAKI9M,EALJ8M,SACAM,EAIIpN,EAJJoN,WACAU,EAGI9N,EAHJ8N,YACAhG,EAEI9H,EAFJ8H,UACAC,EACI/H,EADJ+H,KAEM7H,EAAUR,KADZwG,EAE4B7F,mBAAS,MAFrC8F,EAAA5F,OAAAC,EAAA,EAAAD,CAAA2F,EAAA,GAEGzF,EAFH0F,EAAA,GAEazF,EAFbyF,EAAA,GAIJ,OAAK0G,EAeHlM,EAAAC,EAAAC,cAACuL,GAAA,EAAD,CACE9E,QAAQ,YACRrG,UAAWf,EAAQ8L,OACnB9L,QAAS,CACPmM,MAAOnM,EAAQgM,aAEjBI,OAAO,SAEP3L,EAAAC,EAAAC,cAACkN,GAAA,EAAD,CACE9M,UAAWf,EAAQuN,KACnBlB,MAAO,CAAEyB,UAAW,OAAQC,UAAW,SAEvCtN,EAAAC,EAAAC,cAACqN,GAAA,EAAD,CAAMC,WAAS,EAAC9K,QAAS,EAAG+K,UAAU,MAAMxJ,WAAW,UACrDjE,EAAAC,EAAAC,cAACqN,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb3N,EAAAC,EAAAC,cAACkN,GAAA,EAAD,CACE9K,MAAM,iBACN4B,eAAe,SACfD,WAAW,UAEXjE,EAAAC,EAAAC,cAAC0N,GAAA,EAAD,CAAYjH,QAAQ,YAAYkH,cAAY,GACxC3B,EAAK1C,QAMLxJ,EAAAC,EAAAC,cAAA,YALAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC0I,EAAA3I,EAAD,CAAU6N,SAAS,UAAUxN,UAAWf,EAAQwN,WAC/Cb,EAAKzD,SAASlI,SAQzBP,EAAAC,EAAAC,cAACqN,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACb3N,EAAAC,EAAAC,cAACkN,GAAA,EAAD,CAAKlJ,eAAe,SAAS6J,aAAa,SACxC/N,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACEE,QAAS,SAAAC,GAAK,OAAIrB,EAAYqB,EAAMC,gBACpCH,KAAK,MACL8D,aAAW,QAEXhF,EAAAC,EAAAC,cAAC8N,GAAA/N,EAAD,UAKRD,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CACEC,GAAG,cACH1B,SAAUA,EACV2B,aAAW,EACXC,KAAMC,QAAQ7B,GACd8B,QAAS,kBAAM7B,EAAY,QAEzBmM,EAAK1C,QAeLxJ,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CACEV,QAAS,WACPgM,EAAYjB,EAAK1K,IACjBzB,EAAY,QAGdC,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,KACEhC,EAAAC,EAAAC,cAAC+N,GAAAhO,EAAD,OAPJ,WAdAD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACgO,GAAD,CACEhC,KAAMA,EACNC,SAAUA,EACVhF,UAAWA,EACXiF,UAAW,kBAAMrM,EAAY,SAE/BC,EAAAC,EAAAC,cAACiO,GAAD,CACE3B,UAAWN,EAAKhD,MAChBuD,WAAY,SAAArL,GAAK,OAAIqL,EAAWP,EAAK1K,KACrC4K,UAAW,kBAAMrM,EAAY,WAiBrCC,EAAAC,EAAAC,cAACkO,GAAA,EAAD,MACApO,EAAAC,EAAAC,cAACyK,GAAA,EAAD,CAAWrK,UAAWf,EAAQuN,MAC5B9M,EAAAC,EAAAC,cAAC0N,GAAA,EAAD,CAAYjH,QAAQ,KAAKrG,UAAWf,EAAQ2J,MAAO2E,cAAY,GAC5D3B,EAAKhD,OAERlJ,EAAAC,EAAAC,cAAC0N,GAAA,EAAD,CACEhC,MAAO,CAAEyC,WAAY,YACrB1H,QAAQ,QACRkH,cAAY,GAEX3B,EAAK/C,WAIV+C,EAAK1C,QAaLxJ,EAAAC,EAAAC,cAAA,YAZAF,EAAAC,EAAAC,cAACoO,GAAA,EAAD,CAAQnL,SAAS,WAAWb,MAAM,UAAUhC,UAAWf,EAAQoN,QAC7D3M,EAAAC,EAAAC,cAACqO,GAAA,EAAD,KACEvO,EAAAC,EAAAC,cAACsO,GAAAvO,EAAD,CACEsE,MAAO2H,EAAK9E,KAAKoB,IAAI,SAAAO,GAAG,OAAIA,EAAIxI,OAChCkO,MAAO,SAAAzB,GAAI,OAAI5F,EAAKsH,IAAIxC,EAAK1K,GAAIwL,IACjC2B,SAAU,SAAA3B,GAAI,OAAI5F,EAAKwH,OAAO1C,EAAK1K,GAAIwL,IACvCpI,YAAY,UACZgC,WAAS,OAjHjB5G,EAAAC,EAAAC,cAACuL,GAAA,EAAD,CACE9E,QAAQ,YACRrG,UAAWf,EAAQ8L,OACnB9L,QAAS,CACPmM,MAAOnM,EAAQgM,aAEjBI,OAAO,SAEP3L,EAAAC,EAAAC,cAACyK,GAAA,EAAD,uCCCOkE,GA1Dc,SAAAxP,GAAuC,IAApCmC,EAAoCnC,EAApCmC,GAAIjB,EAAgClB,EAAhCkB,KAAMuO,EAA0BzP,EAA1ByP,OAAQ/O,EAAkBV,EAAlBU,YAAkBwF,EAC1C7F,oBAAS,GADiC8F,EAAA5F,OAAAC,EAAA,EAAAD,CAAA2F,EAAA,GAC3D7D,EAD2D8D,EAAA,GACrDC,EADqDD,EAAA,GAAAE,EAEhChG,mBAASa,GAFuBoF,EAAA/F,OAAAC,EAAA,EAAAD,CAAA8F,EAAA,GAE3DE,EAF2DD,EAAA,GAEhDE,EAFgDF,EAAA,GAI5DG,EAAW,SAAA1E,GACfA,EAAM2E,iBACN+I,EAAOtN,EAAIoE,GACXC,EAAa,IACbJ,GAAQ,IAGV,OACEzF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CACEV,QAAS,WACPsE,GAAQ,GACRI,EAAatF,GACbR,MAGFC,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,KACEhC,EAAAC,EAAAC,cAACoM,GAAArM,EAAD,OARJ,mBAYAD,EAAAC,EAAAC,cAACiG,EAAA,EAAD,CACEzE,KAAMA,EACNE,QAAS,kBAAM6D,GAAQ,IACvBW,kBAAgB,oBAChBN,SAAUA,GAEV9F,EAAAC,EAAAC,cAACmG,GAAA,EAAD,CAAa7E,GAAG,qBAAhB,mBACAxB,EAAAC,EAAAC,cAACoG,EAAA,EAAD,KACEtG,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CACEC,WAAS,EACTtH,OAAO,QACPqC,GAAG,OACH+C,MAAOqB,EACPnB,SAAU,SAAArD,GAAK,OAAIyE,EAAazE,EAAMuD,OAAOJ,QAC7CmC,MAAM,OACNC,QAAQ,WACRpG,KAAK,OACLqG,WAAS,KAGb5G,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,KACE7G,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,CAAQ3F,QAAS,kBAAMsE,GAAQ,IAAQnD,MAAM,WAA7C,UAGAtC,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,CAAQ3F,QAAS2E,EAAUxD,MAAM,WAAjC,qCCXKyM,GA1CU,SAAA1P,GAA+B,IAA5B2P,EAA4B3P,EAA5B2P,WAAY5C,EAAgB/M,EAAhB+M,UAAgB7G,EAC9B7F,oBAAS,GADqB8F,EAAA5F,OAAAC,EAAA,EAAAD,CAAA2F,EAAA,GAC/C7D,EAD+C8D,EAAA,GACzCC,EADyCD,EAAA,GAGtD,OACExF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CACEV,QAAS,WACPsE,GAAQ,GACR2G,MAGFpM,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,KACEhC,EAAAC,EAAAC,cAAC+O,GAAAhP,EAAD,OAPJ,eAWAD,EAAAC,EAAAC,cAACiG,EAAA,EAAD,CACEzE,KAAMA,EACNE,QAAS,kBAAM6D,GAAQ,IACvBW,kBAAgB,oBAChBN,SAAUkJ,GAEVhP,EAAAC,EAAAC,cAACmG,GAAA,EAAD,CAAa7E,GAAG,qBAAhB,gBACAxB,EAAAC,EAAAC,cAACoG,EAAA,EAAD,KACEtG,EAAAC,EAAAC,cAACqG,GAAA,EAAD,CAAmB/E,GAAG,4BAAtB,yHAKFxB,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,KACE7G,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,CAAQ3F,QAAS,kBAAMsE,GAAQ,IAAQnD,MAAM,WAA7C,UAGAtC,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,CAAQ3F,QAAS6N,EAAY1M,MAAM,WAAnC,aCrBJvD,GAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCiQ,OAAQ,CACNjC,UAAWhO,EAAMyD,QAAQ,GACzByM,aAAclQ,EAAMyD,QAAQ,IAE9B0M,UAAW,CACTxL,WAAY3E,EAAMyD,QAAQ,GAC1BgH,YAAazK,EAAMyD,QAAQ,GAC3BI,MAAO,KAETuM,SAAU,CACRpC,UAAWhO,EAAMyD,QAAQ,IAE3B4M,SAAU,CACRtI,YAAa/H,EAAMyD,QAAQ,GAC3B6M,aAActQ,EAAMyD,QAAQ,OAI1B8M,GAAW,SAAAnQ,GAAe,IAAZoQ,EAAYpQ,EAAZoQ,MACZlQ,EAAUR,KAEV2Q,EAAW,SAAXA,EAAWvG,GAEf,OAA+B,IAA3BA,EAAQwG,QAAQ,MACXxG,EAAQxI,OAFE,IAGbwI,EADG,GAAAyG,OAEAzG,EAAQ0G,MAAM,EAJJ,KAEV,OAIFH,EAASvG,EAAQ2G,UAAU,EAAG3G,EAAQwG,QAAQ,SAgCvD,OAAIF,EAAMM,IAAIpP,OAAS,EACdX,EAAAC,EAAAC,cAAC2H,EAAA,EAAD,CAAMS,UAAU,OA7BvBmH,EAAMM,IAAIvH,IAAI,SAAA0D,GAAI,OAChBlM,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8F,QAAM,EACN6B,SAAU2H,EAAM/N,KAAKZ,MAAQoL,EAAK1K,GAClCL,QAAS,WACPsO,EAAM/N,KAAKkG,IAAIsE,EAAK1K,KAEtBmH,IAAKuD,EAAK1K,GACVwO,SAAO,GAEPhQ,EAAAC,EAAAC,cAACa,EAAA,EAAD,CACEkP,mBAAiB,EACjB3P,UAAWf,EAAQ+P,SACnBtO,QAAShB,EAAAC,EAAAC,cAAC0N,GAAA,EAAD,CAAYjH,QAAQ,aAAauF,EAAKhD,OAC/CgH,UACElQ,EAAAC,EAAAC,cAACkN,GAAA,EAAD,KACEpN,EAAAC,EAAAC,cAACkN,GAAA,EAAD,CAAK9K,MAAM,kBAAkBoN,EAASxD,EAAK/C,UAC3CnJ,EAAAC,EAAAC,cAACkN,GAAA,EAAD,CAAK9K,MAAM,YAAYhC,UAAWf,EAAQ8P,UACxCrP,EAAAC,EAAAC,cAAC0N,GAAA,EAAD,CAAYjH,QAAQ,WACjBwJ,gCAAqBjE,EAAK9C,KAAM,CAAEgH,WAAW,aAYvDpQ,EAAAC,EAAAC,cAACyK,GAAA,EAAD,OAmFM0F,GAhFM,SAAAC,GAA6C,IAA1C/P,EAA0C+P,EAA1C/P,KAAMkP,EAAoCa,EAApCb,MAAOc,EAA6BD,EAA7BC,KAAMpJ,EAAuBmJ,EAAvBnJ,UAAWqJ,EAAYF,EAAZE,MAC9CjR,EAAUR,KADgDwG,EAEhC7F,mBAAS,MAFuB8F,EAAA5F,OAAAC,EAAA,EAAAD,CAAA2F,EAAA,GAEzDzF,EAFyD0F,EAAA,GAE/CzF,EAF+CyF,EAAA,GAwDhE,OACExF,EAAAC,EAAAC,cAACkN,GAAA,EAAD,CAAKxB,MAAO,CAAEyB,UAAW,OAAQC,UAAW,SAC1CtN,EAAAC,EAAAC,cAACyK,GAAA,EAAD,KACE3K,EAAAC,EAAAC,cAAC0N,GAAA,EAAD,CAAYtN,UAAWf,EAAQ2P,OAAQvI,QAAQ,MAC5CpG,GAEHP,EAAAC,EAAAC,cAACqN,GAAA,EAAD,CAAMC,WAAS,EAACvJ,WAAW,UACzBjE,EAAAC,EAAAC,cAACqN,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb3N,EAAAC,EAAAC,cAACkN,GAAA,EAAD,CAAK9K,MAAM,kBACTtC,EAAAC,EAAAC,cAAC0N,GAAA,EAAD,CAAYjH,QAAQ,aACjB8I,EAAMM,IAAIpP,OADb,IAC2C,IAArB8O,EAAMM,IAAIpP,OAAe,OAAS,WAI5DX,EAAAC,EAAAC,cAACqN,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IAjEhB4C,GAAkB,aAATA,GAA4C,IAArBd,EAAMM,IAAIpP,OACtCX,EAAAC,EAAAC,cAAA,YAGLF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAYE,QAAS,SAAAC,GAAK,OAAIrB,EAAYqB,EAAMC,iBAC9CrB,EAAAC,EAAAC,cAACuQ,GAAAxQ,EAAD,OAEFD,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CACEC,GAAG,cACH1B,SAAUA,EACV2B,aAAW,EACXC,KAAMC,QAAQ7B,GACd8B,QAAS,kBAAM7B,EAAY,QAEjB,aAATwQ,EACCvQ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwQ,GAAD,CACElP,GAAI2F,EAAU3F,GACdjB,KAAMA,EACNuO,OAAQ3H,EAAU2H,OAClB/O,YAAa,kBAAMA,EAAY,SAEX,IAArB0P,EAAMM,IAAIpP,OACTX,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CACEV,QAAS,WACPpB,EAAY,MACZoH,EAAUwJ,OAAOxJ,EAAU3F,MAG7BxB,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,KACEhC,EAAAC,EAAAC,cAACwM,GAAAzM,EAAD,OAPJ,mBAYAD,EAAAC,EAAAC,cAAA,aAIJF,EAAAC,EAAAC,cAAC0Q,GAAD,CACE5B,WAAYwB,EAAMK,MAClBzE,UAAW,kBAAMrM,EAAY,cA4BvCC,EAAAC,EAAAC,cAAC4Q,GAAD,CAAUrB,MAAOA,MCxDRsB,GAxGA,SAAA1R,GAMT,IALJ6H,EAKI7H,EALJ6H,OACA8J,EAII3R,EAJJ2R,MACAR,EAGInR,EAHJmR,MACApJ,EAEI/H,EAFJ+H,KACA6J,EACI5R,EADJ4R,WAUA,GAAoB,WAAhB/J,EAAOS,KAET,OADAuJ,SAAShI,MAAQ,wBAEflJ,EAAAC,EAAAC,cAACiR,GAAD,CACE5Q,KACE0Q,EAAW1M,MAAM5D,OAAS,EAA1B,uBAAAiP,OAC2BqB,EAAW1M,MADtC,KAEI,kBAENkL,MAAO,CACLM,IAAKiB,EAAMvB,MAAMM,IAAIqB,OAlBd,SAAAlF,GACb,OACE+E,EAAW1M,MAAM5D,OAAS,IACzBuL,EAAKhD,MAAMmI,cAAcC,SAASL,EAAW1M,MAAM8M,gBAClDnF,EAAK/C,QAAQkI,cAAcC,SAASL,EAAW1M,MAAM8M,kBAenD3P,KAAM,CACJZ,IAAKkQ,EAAMvB,MAAM/N,KAAKZ,IACtB8G,IAAKoJ,EAAMvB,MAAM/N,KAAKkG,MAG1B2J,WAAYP,EAAMvB,MAAM/N,KAAKkG,MAInC,GAAoB,QAAhBV,EAAOS,KAET,OADAuJ,SAAShI,MAAQ,mBAEflJ,EAAAC,EAAAC,cAACiR,GAAD,CACE5Q,KAAK,YACLkP,MAAO,CACLM,IAAKiB,EAAMvB,MAAMM,IAAIqB,OAAO,SAAAlF,GAAI,OAAKA,EAAK1C,UAC1C9H,KAAM,CACJZ,IAAKkQ,EAAMvB,MAAM/N,KAAKZ,IACtB8G,IAAKoJ,EAAMvB,MAAM/N,KAAKkG,QAMhC,GAAoB,aAAhBV,EAAOS,KAAqB,CAC9B,IAAMpH,EAAOyQ,EAAM7J,UAAU4I,IAAIyB,KAAK,SAAA/I,GAAQ,OAAIA,EAASjH,KAAO0F,EAAO1F,KAAIjB,KAE7E,OADA2Q,SAAShI,MAAT,GAAA0G,OAAoBrP,EAApB,WAEEP,EAAAC,EAAAC,cAACiR,GAAD,CACE5Q,KAAMA,EACNkP,MAAO,CACLM,IAAKiB,EAAMvB,MAAMM,IAAIqB,OAAO,SAAAlF,GAAI,OAAIA,EAAKzD,SAASjH,KAAO0F,EAAO1F,KAAO0K,EAAK1C,UAC5E9H,KAAM,CACJZ,IAAKkQ,EAAMvB,MAAM/N,KAAKZ,IACtB8G,IAAKoJ,EAAMvB,MAAM/N,KAAKkG,MAG1B2I,KAAK,WACLpJ,UAASvH,OAAAwL,GAAA,EAAAxL,CAAA,GAAOoR,EAAM7J,UAAb,CAAwB3F,GAAI0F,EAAO1F,OAIlD,GAAoB,QAAhB0F,EAAOS,KAAgB,CACzB,IAAMoB,EAAM3B,EAAKoK,KAAK,SAAAzI,GAAG,OAAIA,EAAIvH,KAAO0F,EAAO1F,KAE/C,OADA0P,SAAShI,MAAT,GAAA0G,OAAoB7G,EAAIxI,KAAxB,WAEEP,EAAAC,EAAAC,cAACiR,GAAD,CACE5Q,KAAI,WAAAqP,OAAa7G,EAAIxI,KAAjB,KACJkP,MAAO,CACLM,IAAKiB,EAAMvB,MAAMM,IAAIqB,OAAO,SAAAlF,GAAI,OAAIA,EAAK9E,KAAKkK,SAASvI,KAASmD,EAAK1C,UACrE9H,KAAM,CACJZ,IAAKkQ,EAAMvB,MAAM/N,KAAKZ,IACtB8G,IAAKoJ,EAAMvB,MAAM/N,KAAKkG,QAMhC,MAAoB,UAAhBV,EAAOS,MACTuJ,SAAShI,MAAQ,eAEflJ,EAAAC,EAAAC,cAACiR,GAAD,CACE5Q,KAAK,QACLkP,MAAO,CACLM,IAAKiB,EAAMvB,MAAMM,IAAIqB,OAAO,SAAAlF,GAAI,OAAIA,EAAK1C,UACzC9H,KAAM,CACJZ,IAAKkQ,EAAMvB,MAAM/N,KAAKZ,IACtB8G,IAAKoJ,EAAMvB,MAAM/N,KAAKkG,MAG1B2I,KAAK,QACLC,MAAOA,KAINxQ,EAAAC,EAAAC,cAAA,+GCxGLsB,GAAK,EAEYiQ,GACnB,SAAAA,EAAYvM,EAAQ3E,GAAOX,OAAAuF,GAAA,EAAAvF,CAAAwF,KAAAqM,GACzBrM,KAAK5D,GAAKA,KACV4D,KAAKF,OAASA,EACdE,KAAK7E,KAAOA,uBCMVxB,GAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCyS,KAAM,CACJC,UAAW,SACXC,SAAU,IACVnP,QAASxD,EAAMyD,QAAQ,IAEzB8K,UAAW,CACTxJ,QAAS,OACT6N,SAAU,OACVC,SAAU,EACV5N,eAAgB,SAChB6N,WAAY9S,EAAMyD,QAAQ,IAE5B0M,UAAW,CACTjQ,OAAQF,EAAMyD,QAAQ,GACtBI,MAAO,KAETmD,OAAQ,CACNgH,UAAWhO,EAAMyD,QAAQ,GACzBI,MAAO,KAETkP,MAAO,CACLD,WAAY9S,EAAMyD,QAAQ,IAE5BuP,UAAW,CACT9C,aAAclQ,EAAMyD,QAAQ,OAmPjBwP,GA/OD,SAAA7S,GAAmB,IAAhBC,EAAgBD,EAAhBC,KAAM6S,EAAU9S,EAAV8S,IACf5S,EAAUR,KADewG,EAEH7F,mBAAS,CACnCa,KAAM,GACN6B,MAAO,GACPgQ,SAAU,GACVC,gBAAiB,KANY7M,EAAA5F,OAAAC,EAAA,EAAAD,CAAA2F,EAAA,GAExBiF,EAFwBhF,EAAA,GAEhBiF,EAFgBjF,EAAA,GAAAE,EAQWhG,oBAAS,GARpBiG,EAAA/F,OAAAC,EAAA,EAAAD,CAAA8F,EAAA,GAQxB4M,EARwB3M,EAAA,GAQT4M,EARS5M,EAAA,GAAAuE,EASLxK,mBAAS,gBATJyK,EAAAvK,OAAAC,EAAA,EAAAD,CAAAsK,EAAA,GASxBhB,EATwBiB,EAAA,GASjBqI,EATiBrI,EAAA,GAW/B+G,SAAShI,MAAQA,EAEjB,IAWMuJ,EAAe,SAAAlS,GAAI,OAAI,SAAAa,GAC3BqJ,EAAU7K,OAAAwL,GAAA,EAAAxL,CAAA,GAAK4K,EAAN5K,OAAA4C,EAAA,EAAA5C,CAAA,GAAeW,EAAOa,EAAMuD,OAAOJ,WAS9C,OACEvE,EAAAC,EAAAC,cAACyK,GAAA,EAAD,CAAWrK,UAAWf,EAAQiO,WAC5BxN,EAAAC,EAAAC,cAACwS,GAAA,EAAD,CAAMpS,UAAWf,EAAQmS,MACvB1R,EAAAC,EAAAC,cAACyS,GAAA,EAAD,KACE3S,EAAAC,EAAAC,cAACqN,GAAA,EAAD,CACEC,WAAS,EACTC,UAAU,SACVmF,QAAQ,SACR3O,WAAW,UAEXjE,EAAAC,EAAAC,cAACqN,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb3N,EAAAC,EAAAC,cAAC0N,GAAA,EAAD,CAAYjH,QAAQ,MAApB,SAEF3G,EAAAC,EAAAC,cAACqN,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb3N,EAAAC,EAAAC,cAAC0N,GAAA,EAAD,CACEtL,MAAM,gBACNqE,QAAQ,YACRrG,UAAWf,EAAQ0S,WAHrB,mCAQDK,EACCtS,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4S,SAAA,KACE7S,EAAAC,EAAAC,cAACqN,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb3N,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CACEsM,UAAQ,EACRlM,WAAS,EACTD,QAAQ,WACRnF,GAAG,OACHkF,MAAM,OACNpG,UAAWf,EAAQ6P,UACnB7K,MAAOiG,EAAOjK,KACdkE,SAAUgO,EAAa,QACvBtT,OAAO,YAGXa,EAAAC,EAAAC,cAACqN,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb3N,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CACEsM,UAAQ,EACRlM,WAAS,EACTD,QAAQ,WACRnF,GAAG,QACHkF,MAAM,QACNpG,UAAWf,EAAQ6P,UACnB7K,MAAOiG,EAAOpI,MACdqC,SAAUgO,EAAa,SACvBtT,OAAO,YAGXa,EAAAC,EAAAC,cAACqN,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb3N,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CACEsM,UAAQ,EACRlM,WAAS,EACTD,QAAQ,WACRnF,GAAG,WACHkF,MAAM,WACNpG,UAAWf,EAAQ6P,UACnB7K,MAAOiG,EAAO4H,SACd3N,SAAUgO,EAAa,YACvB9K,KAAK,WACLoL,aAAa,mBACb5T,OAAO,YAGXa,EAAAC,EAAAC,cAACqN,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb3N,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CACEsM,UAAQ,EACRlM,WAAS,EACTD,QAAQ,WACRnF,GAAG,mBACHkF,MAAM,mBACNpG,UAAWf,EAAQ6P,UACnB7K,MAAOiG,EAAO6H,gBACd5N,SAAUgO,EAAa,mBACvB9K,KAAK,WACLoL,aAAa,mBACb5T,OAAO,YAGXa,EAAAC,EAAAC,cAACqN,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb3N,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,CACEH,QAAQ,YACRrG,UAAWf,EAAQ0G,OACnB3D,MAAM,UACNnB,QAAS,SAAAC,GA3FL,IAAAgB,EA6FuB,IAAvBoI,EAAOjK,KAAKI,QACY,IAAxB6J,EAAOpI,MAAMzB,QACc,IAA3B6J,EAAO4H,SAASzR,QACkB,IAAlC6J,EAAO6H,gBAAgB1R,OAEvBwR,EAAI,+BAlGJ/P,EAmGwBoI,EAAOpI,MAjG1C,yJACC4Q,KAAKC,OAAO7Q,GAAOiP,eAkGA7G,EAAO4H,WAAa5H,EAAO6H,gBACpCF,EAAI,2BAEJ7S,EAAKuD,OAAO2H,EAAOjK,KAAMiK,EAAOpI,MAAOoI,EAAO4H,UAC9C3H,EAAU,CACRlK,KAAM,GACN6B,MAAO,GACPgQ,SAAU,GACVC,gBAAiB,KAEnBE,GAAiB,GACjBC,EAAS,iBAZTL,EAAI,4BAbV,aAgCFnS,EAAAC,EAAAC,cAACqN,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb3N,EAAAC,EAAAC,cAAC0N,GAAA,EAAD,CACEjH,QAAQ,YACRrE,MAAM,gBACNhC,UAAWf,EAAQyS,OAHrB,6BAQFhS,EAAAC,EAAAC,cAACqN,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb3N,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,CACE8C,KAAK,QACLzI,QAAS,SAAAC,GACPmR,GAAiB,GACjBC,EAAS,iBAEX5L,WAAS,EACTtE,MAAM,WAPR,aAcJtC,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4S,SAAA,KACE7S,EAAAC,EAAAC,cAACqN,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb3N,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CACEI,WAAS,EACTD,QAAQ,WACRnF,GAAG,QACHkF,MAAM,QACNpG,UAAWf,EAAQ6P,UACnB7K,MAAOiG,EAAOpI,MACdqC,SAAUgO,EAAa,SACvBtT,OAAO,YAGXa,EAAAC,EAAAC,cAACqN,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb3N,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CACEI,WAAS,EACTD,QAAQ,WACRnF,GAAG,WACHkF,MAAM,WACNpG,UAAWf,EAAQ6P,UACnB7K,MAAOiG,EAAO4H,SACd3N,SAAUgO,EAAa,YACvB9K,KAAK,WACLoL,aAAa,mBACb5T,OAAO,YAGXa,EAAAC,EAAAC,cAACqN,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb3N,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,CACEH,QAAQ,YACRrG,UAAWf,EAAQ0G,OACnB3D,MAAM,UACNnB,QA9LD,SAAAC,GACfA,EAAM2E,iBACN,IAAImN,EAAgB5T,EAAK6T,SAAS3I,EAAOpI,MAAOoI,EAAO4H,UACnDc,GACF5T,EAAK8T,MAAMF,GACXf,EAAI,2BAEJA,EAAI,oCAmLQ,aASFnS,EAAAC,EAAAC,cAACqN,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb3N,EAAAC,EAAAC,cAAC0N,GAAA,EAAD,CACEjH,QAAQ,YACRrE,MAAM,gBACNhC,UAAWf,EAAQyS,OAHrB,2BAQFhS,EAAAC,EAAAC,cAACqN,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb3N,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,CACE8C,KAAK,QACLzI,QAAS,SAAAC,GACPmR,GAAiB,GACjBC,EAAS,0BAEX5L,WAAS,EACTtE,MAAM,WAPR,yBCnQdd,GAAK,EAEY6R,GACnB,SAAAA,EAAY9S,EAAM6B,EAAOgQ,GAAWxS,OAAAuF,GAAA,EAAAvF,CAAAwF,KAAAiO,GAClCjO,KAAK5D,GAAKA,KACV4D,KAAK7E,KAAOA,EACZ6E,KAAKhD,MAAQA,EACbgD,KAAKgN,SAAWA,GCWdrT,GAAYC,YAAW,SAAAC,GAAK,MAAK,CACrC4F,KAAM,CACJb,QAAS,QAEXmF,QAAS,CACP2I,SAAU,GAEZwB,MAAO,CACL7Q,QAASxD,EAAMyD,QAAQ,QAIrB6Q,GAAYC,aAAe,CAC/BhQ,QAAS,CACPmE,KAAM,OACN3G,QAAS,CACPyS,KAAMC,KAAO,SAKbC,GAAaH,aAAe,CAChChQ,QAAS,CACPmE,KAAM,WAqRKiM,OAjRf,SAAaC,GACX,IAAMtU,EAAUR,KADEwG,EAGkB7F,mBAAS,IAH3B8F,EAAA5F,OAAAC,EAAA,EAAAD,CAAA2F,EAAA,GAGX0L,EAHWzL,EAAA,GAGCsO,EAHDtO,EAAA,GAAAE,EAMQhG,mBAASmU,EAAME,OANvBpO,EAAA/F,OAAAC,EAAA,EAAAD,CAAA8F,EAAA,GAMXqO,EANWpO,EAAA,GAMJqO,EANIrO,EAAA,GAAAuE,EAOQxK,mBAASmU,EAAMpE,OAPvBtF,EAAAvK,OAAAC,EAAA,EAAAD,CAAAsK,EAAA,GAOXuF,EAPWtF,EAAA,GAOJ8J,EAPI9J,EAAA,GAAAG,EAQgB5K,mBAASmU,EAAM1M,WAR/BoD,EAAA3K,OAAAC,EAAA,EAAAD,CAAA0K,EAAA,GAQXnD,EARWoD,EAAA,GAQA2J,EARA3J,EAAA,GAAA4J,EASMzU,mBAASmU,EAAMzM,MATrBgN,EAAAxU,OAAAC,EAAA,EAAAD,CAAAuU,EAAA,GASX/M,EATWgN,EAAA,GASLC,EATKD,EAAA,GAAAE,EAYM5U,oBAAS,GAZf6U,EAAA3U,OAAAC,EAAA,EAAAD,CAAA0U,EAAA,GAYXvS,EAZWwS,EAAA,GAYLC,EAZKD,EAAA,GAAAE,EAasB/U,oBAAS,GAb/BgV,EAAA9U,OAAAC,EAAA,EAAAD,CAAA6U,EAAA,GAaXE,EAbWD,EAAA,GAaGE,EAbHF,EAAA,GAAAG,EAc4BnV,mBAAS,IAdrCoV,EAAAlV,OAAAC,EAAA,EAAAD,CAAAiV,EAAA,GAcXE,EAdWD,EAAA,GAcME,EAdNF,EAAA,GAAAG,EAiBcvV,oBAAS,GAjBvBwV,EAAAtV,OAAAC,EAAA,EAAAD,CAAAqV,EAAA,GAiBXE,EAjBWD,EAAA,GAiBDE,EAjBCF,EAAA,GAAAG,EAkBM3V,mBAAS,IAlBf4V,EAAA1V,OAAAC,EAAA,EAAAD,CAAAyV,EAAA,GAkBX/V,EAlBWgW,EAAA,GAkBLC,EAlBKD,EAAA,GAAAE,EAqBkB9V,mBAAS,OArB3B+V,EAAA7V,OAAAC,EAAA,EAAAD,CAAA4V,EAAA,GAqBXE,EArBWD,EAAA,GAqBCE,EArBDF,EAAA,GAAAG,EAsBclW,mBAAS,GAtBvBmW,EAAAjW,OAAAC,EAAA,EAAAD,CAAAgW,EAAA,GAsBXE,EAtBWD,EAAA,GAsBDE,GAtBCF,EAAA,GAAAG,GAuBkBtW,mBAAS,GAvB3BuW,GAAArW,OAAAC,EAAA,EAAAD,CAAAoW,GAAA,GAuBXE,GAvBWD,GAAA,GAuBCE,GAvBDF,GAAA,GAyBZ5J,GAAc,SAACjL,EAAOgV,GACX,cAAXA,GAGJxB,GAAgB,IAiHZzC,GAAM,SAAAkE,GACVrB,EAAmBqB,GACnBzB,GAAgB,IAGlB,OACE5U,EAAAC,EAAAC,cAACoW,GAAA,EAAD,CAAerX,MAAO8C,EAAOwR,GAAYI,IACvC3T,EAAAC,EAAAC,cAACqW,GAAA,EAAD,MACAvW,EAAAC,EAAAC,cAAA,OAAKI,UAAWf,EAAQsF,MACrBsQ,EACCnV,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4S,SAAA,KACE7S,EAAAC,EAAAC,cAACsW,GAAD,CACElX,KAAM,CACJwB,IAAKxB,EACL4C,QAAS,kBAAMkT,GAAY,KAE7BrL,QA5HI,SAAAmC,GACd+H,EAASxE,EAAMG,OAAO1D,IACtBiG,GAAG,wBAAAvC,OAAyB1D,EAAKhD,SA2HvB5D,YAzFQ,SAAAmD,GAClByL,EAAa/M,EAAUyI,OAAOnH,IAC9B0J,GAAG,wBAAAvC,OAAyBnH,EAASlI,QAwF3B2G,OAAQ,CACN1F,GAAI,CACFV,IAAK,kBAAMgV,GACXlO,IAAK,SAAApG,GAAE,OAAIuU,GAAYvU,KAEzBmG,KAAM,CACJ7G,IAAK,kBAAM4U,GACX9N,IAAK,SAAAD,GAAI,OAAIgO,EAAchO,MAG/BR,UAAWA,EAAUiK,OACnB,SAAA3I,GAAQ,OAAIA,EAASvD,OAAO1D,KAAOlC,EAAKkC,KAE1C4F,KAAMA,EAAKgK,OAAO,SAAArI,GAAG,OAAIA,EAAI7D,OAAO1D,KAAOlC,EAAKkC,KAChDvC,MAAO,CAAE8C,KAAMA,EAAMD,aAAc,SAAAyC,GAAK,OAAIiQ,EAAQjQ,KACpDrB,OAAQ,CACNsB,KAAMyM,EACNvM,OAAQ,SAAAF,GAAI,OAAIsP,EAActP,OAGlCxE,EAAAC,EAAAC,cAAA,QAAMI,UAAWf,EAAQ4J,SACvBnJ,EAAAC,EAAAC,cAACuW,GAAD,CACEvP,OAAQ,CACN1F,GAAIsU,EACJnO,KAAM+N,GAER1E,MAAO,CACLvB,MAAO,CACLM,IAAKN,EAAM2B,OAAO,SAAAlF,GAAI,OAAIA,EAAKhH,OAAO1D,KAAOlC,EAAKkC,KAClDE,KAAM,CACJZ,IAAKoV,GACLtO,IAAK,SAAApG,GAAE,OAAI2U,GAAc3U,MAG7B2F,UAAW,CACT4I,IAAK5I,EAAUiK,OACb,SAAA3I,GAAQ,OAAIA,EAASvD,OAAO1D,KAAOlC,EAAKkC,KAE1CsN,OA3HK,SAACtN,EAAIjB,GAC1B,IAAImW,EAAI9W,OAAA+W,EAAA,EAAA/W,CAAOuH,GACAuP,EAAKA,EAAKE,UAAU,SAAAnO,GAAQ,OAAIA,EAASjH,KAAOA,KACtDjB,KAAOA,EAChB2T,EAAawC,GACbvE,GAAI,qBAuHYxB,OApHK,SAAAnP,GACrB,IAAIkV,EAAI9W,OAAA+W,EAAA,EAAA/W,CAAOuH,GACXsB,EAAWiO,EAAKlF,KAAK,SAAA/I,GAAQ,OAAIA,EAASjH,KAAOA,IACrDkV,EAAKG,OAAOH,EAAK/G,QAAQlH,GAAW,GACpCyL,EAAawC,GACbX,GAAY,GACZJ,EAAc,OACdxD,GAAG,WAAAvC,OAAYnH,EAASlI,UAgHZiQ,MAAO,CAAEK,MAzEJ,YACS,SAApBiG,EAAqB/G,EAAKS,GAC9B,GAAc,IAAVA,EAGF,OAFAyD,EAASlE,QACToC,GAAI,iBAGNpC,EAAI8G,OAAO9G,EAAI6G,UAAU,SAAA1K,GAAI,OAAIA,EAAK1C,UAAU,GAChDsN,EAAkB/G,EAAKS,EAAQ,GAEjCsG,CAAkBlX,OAAA+W,EAAA,EAAA/W,CAAI6P,GAAQA,EAAM2B,OAAO,SAAAlF,GAAI,OAAIA,EAAK1C,UAAS7I,UAgErDyG,KAAMA,EAAKgK,OAAO,SAAArI,GAAG,OAAIA,EAAI7D,OAAO1D,KAAOlC,EAAKkC,KAChDyP,WAAY,CACV1M,MAAO0M,EACPvM,OAAQ,SAAAH,GAAK,OAAIuP,EAAcvP,QAIrCvE,EAAAC,EAAAC,cAAC6W,GAAD,CACE7K,KAAMuD,EAAM+B,KACV,SAAAtF,GAAI,OAAIA,EAAKhH,OAAO1D,KAAOlC,EAAKkC,IAAM0K,EAAK1K,KAAO0U,KAEpD/J,SA/KK,SAAC3K,EAAI0H,EAAOC,EAASV,GACpC,IAAIiO,EAAI9W,OAAA+W,EAAA,EAAA/W,CAAO6P,GACXvD,EAAOwK,EAAKA,EAAKE,UAAU,SAAA1K,GAAI,OAAIA,EAAK1K,KAAOA,KACnD0K,EAAKhD,MAAQA,EACbgD,EAAK/C,QAAUA,EACf+C,EAAKzD,SAAWA,EAChByD,EAAK9C,KAAO,IAAIG,KAChB0K,EAASyC,GACTvE,GAAG,GAAAvC,OAAI1D,EAAKhD,MAAT,cAwKOuD,WArKO,SAAAuK,GACjB,IAAIN,EAAI9W,OAAA+W,EAAA,EAAA/W,CAAO6P,GACXvD,EAAOwK,EAAKA,EAAKE,UAAU,SAAA1K,GAAI,OAAIA,EAAK1K,KAAOwV,KACnD9K,EAAK1C,SAAU,EACfyK,EAASyC,GACTP,IAAe,GACfhE,GAAG,GAAAvC,OAAI1D,EAAKhD,MAAT,qBAgKOiE,YA7JQ,SAAA6J,GAClB,IAAIN,EAAI9W,OAAA+W,EAAA,EAAA/W,CAAO6P,GACXvD,EAAOwK,EAAKA,EAAKE,UAAU,SAAA1K,GAAI,OAAIA,EAAK1K,KAAOwV,KACnD9K,EAAK1C,SAAU,EACfyK,EAASyC,GACTP,IAAe,GACfhE,GAAG,GAAAvC,OAAI1D,EAAKhD,MAAT,iBAAA0G,OAA8B1D,EAAKzD,SAASlI,QAwJrC4G,UAAWA,EACXC,KAAM,CAAEsH,IA3HL,SAACsI,EAAQC,GACtB,IAAIC,EAAW9P,EAAKoK,KAAK,SAAAzI,GAAG,OAAIA,EAAIxI,OAAS0W,IACxCC,IACHA,EAAW,IAAIzF,GAAInS,EAAM2X,GACzB5C,EAAQjN,EAAKwI,OAAOsH,KAEtB,IAAIR,EAAI9W,OAAA+W,EAAA,EAAA/W,CAAO6P,GACXvD,EAAOwK,EAAKA,EAAKE,UAAU,SAAA1K,GAAI,OAAIA,EAAK1K,KAAOwV,KACnD9K,EAAK9E,KAAO8E,EAAK9E,KAAKwI,OAAOsH,GAC7BjD,EAASyC,IAkHsB9H,OA/Gf,SAACoI,EAAQC,GACzB,IAAIP,EAAI9W,OAAA+W,EAAA,EAAA/W,CAAO6P,GACXvD,EAAOwK,EAAKA,EAAKE,UAAU,SAAA1K,GAAI,OAAIA,EAAK1K,KAAOwV,KAC/CjO,EAAMmD,EAAK9E,KAAKoK,KAAK,SAAAzI,GAAG,OAAIA,EAAIxI,OAAS0W,IAG7C,GAFA/K,EAAK9E,KAAKyP,OAAO3K,EAAK9E,KAAKuI,QAAQ5G,GAAM,GACzCkL,EAASyC,IAENjH,EAAM0H,KACL,SAAAjL,GAAI,OAA0D,IAAtDA,EAAK9E,KAAKwP,UAAU,SAAA7N,GAAG,OAAIA,EAAIxI,OAAS0W,MAElD,CACA,IAAIG,EAAQxX,OAAA+W,EAAA,EAAA/W,CAAOwH,GACfiQ,EAAQtO,EAAIvH,GAChB4V,EAASP,OAAOO,EAASR,UAAU,SAAA7N,GAAG,OAAIA,EAAIxI,OAAS0W,IAAU,GACjE5C,EAAQ+C,GACW,QAAf1B,GAAwBI,IAAauB,IACvCtB,GAAY,GACZJ,EAAc,cAkGZ3V,EAAAC,EAAAC,cAACoX,GAAD,CACEhY,KAAM,CACJ6V,SAAUA,EACV/B,MAAO,SAAA9T,GACLiW,EAAQjW,GACRyW,GAAY,GACZJ,EAAc,OACdP,GAAY,IAEdvS,OAAQ,SAACtC,EAAM6B,EAAOgQ,GACpB,IAAImF,EAAa,IAAIlE,GAAQ9S,EAAM6B,EAAOgQ,GAC1C4B,EAASD,EAAMnE,OAAO2H,IACtBpF,GAAI,iCAENgB,SAAU,SAAC/Q,EAAOgQ,GAAR,OACR2B,EAAMvC,KACJ,SAAAlS,GAAI,OAAIA,EAAK8C,QAAUA,GAAS9C,EAAK8S,WAAaA,MAGxDD,IAAKA,KAGTnS,EAAAC,EAAAC,cAACsX,GAAA,EAAD,CACEC,aAAc,CACZC,SAAU,MACVC,WAAY,UAEdjW,KAAMiT,EACNiD,iBAAkB,IAClBhW,QAASyK,GACTwL,aAAc,CACZC,mBAAoB,cAEtBzB,QAASrW,EAAAC,EAAAC,cAAA,QAAMsB,GAAG,cAAcuT,GAChCgD,OAAQ,CACN/X,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACE0H,IAAI,QACJ3D,aAAW,QACX1C,MAAM,UACNhC,UAAWf,EAAQ+T,MACnBnS,QAASkL,IAETrM,EAAAC,EAAAC,cAAC8X,GAAA/X,EAAD,aCzSM0B,QACW,cAA7BsW,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCRN,IAAMrE,GAAQ,CACZ,IAAIV,GAAQ,cAAe,mBAAoB,OAC/C,IAAIA,GAAQ,WAAY,iBAAkB,QAGtClM,GAAY,CAAC,IAAIlC,GAAS8O,GAAM,GAAI,gBAEpC3M,GAAO,CAAC,IAAIqK,GAAIsC,GAAM,GAAI,QAAS,IAAItC,GAAIsC,GAAM,GAAI,QAErDtE,GAAQ,CACZ,IAAIxG,GACF8K,GAAM,GACN,+BACA,mLACA,IAAIxK,KAAK,KAAM,EAAG,IAClBpC,GAAU,GACV,CAACC,GAAK,KAER,IAAI6B,GACF8K,GAAM,GACN,oBACA,oYACA,IAAIxK,KAAK,KAAM,EAAG,GAClBpC,GAAU,GALZ,GAAAyI,OAMMxI,KAEN,IAAI6B,GACF8K,GAAM,GACN,4BACA,+KACA,IAAIxK,KAAK,KAAM,EAAG,GAClBpC,GAAU,GALZ,GAAAyI,OAMMxI,MAIRiR,IAASC,OACPtY,EAAAC,EAAAC,cAACqY,GAAD,CAAKxE,MAAOA,GAAOtE,MAAOA,GAAOtI,UAAWA,GAAWC,KAAMA,KAC7D8J,SAASsH,eAAe,SDiFpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.8111d020.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport {\r\n  ListItem,\r\n  ListItemText,\r\n  Avatar,\r\n  ListItemAvatar,\r\n  Menu,\r\n  MenuItem,\r\n  IconButton,\r\n  ListItemIcon\r\n} from \"@material-ui/core\";\r\nimport InvertColorsIcon from \"@material-ui/icons/InvertColors\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  avatar: {\r\n    margin: 10\r\n  }\r\n}));\r\n\r\nconst User = ({ user, theme }) => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const getInitials = name => {\r\n    let nameArray = name.split(\" \");\r\n    return (\r\n      name.charAt(0) +\r\n      (nameArray.length > 1 ? nameArray[nameArray.length - 1].charAt(0) : \"\")\r\n    ).toUpperCase();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n          <Avatar className={classes.avatar}>\r\n            {getInitials(user.get.name)}\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary={user.get.name} />\r\n        <IconButton\r\n          edge=\"end\"\r\n          onClick={event => setAnchorEl(event.currentTarget)}\r\n        >\r\n          <ExpandMoreIcon />\r\n        </IconButton>\r\n      </ListItem>\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={() => setAnchorEl(null)}\r\n      >\r\n        <MenuItem\r\n          onClick={() => {\r\n            theme.setDarkTheme(!theme.dark);\r\n            setAnchorEl(null);\r\n          }}\r\n        >\r\n          <ListItemIcon>\r\n            <InvertColorsIcon />\r\n          </ListItemIcon>\r\n          Enable {theme.dark ? \"Light\" : \"Dark\"} Mode\r\n        </MenuItem>\r\n        <MenuItem onClick={() => user.signOut()}>\r\n          <ListItemIcon>\r\n            <ExitToAppIcon />\r\n          </ListItemIcon>\r\n          Sign out {user.get.email}\r\n        </MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React from \"react\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { InputBase } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  inputRoot: {\r\n    color: \"inherit\"\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 7),\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: 120,\r\n      \"&:focus\": {\r\n        width: 120\r\n      }\r\n    }\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.black, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.black, 0.25)\r\n    },\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      margin: theme.spacing(2),\r\n      width: \"auto\"\r\n    }\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing(7),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  }\r\n}));\r\n\r\nconst SearchBar = ({ search, folderSetter }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        value={search.term}\r\n        onChange={event => search.update(event.target.value)}\r\n        onClick={() => folderSetter(\"search\")}\r\n        placeholder=\"Search all notes...\"\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput\r\n        }}\r\n        inputProps={{ \"aria-label\": \"search\" }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","let id = 0;\r\n\r\nexport default class Notebook {\r\n  constructor(author, name) {\r\n    this.id = id++;\r\n    this.author = author;\r\n    this.name = name;\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport AddCircle from \"@material-ui/icons/AddCircleOutline\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Notebook from \"../models/Notebook\";\r\nimport { ListItem, ListItemIcon, ListItemText, DialogContentText } from \"@material-ui/core\";\r\n\r\nconst NewNotebookDialog = ({ user, className, addNotebook }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [nameInput, setNameInput] = useState(\"\");\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n    const newNotebook = new Notebook(user, nameInput);\r\n    addNotebook(newNotebook);\r\n    setNameInput(\"\");\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ListItem button className={className} onClick={() => setOpen(true)}>\r\n        <ListItemIcon>\r\n          <AddCircle />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"New Notebook\" />\r\n      </ListItem>\r\n      <Dialog\r\n        open={open}\r\n        onClose={() => setOpen(false)}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        onSubmit={onSubmit}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Create new notebook</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Notebooks are useful for grouping notes around a common topic.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            value={nameInput}\r\n            onChange={event => setNameInput(event.target.value)}\r\n            label=\"Name\"\r\n            variant=\"outlined\"\r\n            name=\"name\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpen(false)} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={onSubmit} color=\"primary\">\r\n            Create\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewNotebookDialog;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Collapse\r\n} from \"@material-ui/core\";\r\nimport NoteIcon from \"@material-ui/icons/Note\";\r\nimport BookIcon from \"@material-ui/icons/Book\";\r\nimport BookIconOutlined from \"@material-ui/icons/BookOutlined\";\r\nimport LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport NewNotebookDialog from \"./NewNotebookDialog\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  nested: {\r\n    paddingLeft: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nconst Navigation = ({ user, addNotebook, folder, notebooks, tags }) => {\r\n  const classes = useStyles();\r\n  const [openNotebooks, setOpenNotebooks] = useState(false);\r\n  const [openTags, setOpenTags] = useState(false);\r\n\r\n  const getNotebooks = () => {\r\n    return notebooks.map((notebook, index) => {\r\n      return (\r\n        <ListItem\r\n          button\r\n          onClick={onClick(notebook.id, \"notebook\")}\r\n          selected={\r\n            folder.id.get() === notebook.id && folder.type.get() === \"notebook\"\r\n          }\r\n          key={index}\r\n          className={classes.nested}\r\n        >\r\n          <ListItemIcon>\r\n            <BookIconOutlined />\r\n          </ListItemIcon>\r\n          <ListItemText primary={notebook.name} />\r\n        </ListItem>\r\n      );\r\n    });\r\n  };\r\n\r\n  const getTags = () => {\r\n    return tags.map((tag, index) => {\r\n      return (\r\n        <ListItem\r\n          button\r\n          onClick={onClick(tag.id, \"tag\")}\r\n          selected={folder.id.get() === tag.id && folder.type.get() === \"tag\"}\r\n          key={index}\r\n          className={classes.nested}\r\n        >\r\n          <ListItemText primary={tag.name} />\r\n        </ListItem>\r\n      );\r\n    });\r\n  };\r\n\r\n  const onDropDownClick = (value, setter) => {\r\n    return () => {\r\n      setter(!value);\r\n    };\r\n  };\r\n\r\n  const onClick = (id, type) => {\r\n    return () => {\r\n      folder.id.set(id);\r\n      folder.type.set(type);\r\n    };\r\n  };\r\n\r\n  return (\r\n    <List>\r\n      <ListItem\r\n        button\r\n        onClick={onClick(0, \"all\")}\r\n        selected={folder.id.get() === 0 && folder.type.get() === \"all\"}\r\n      >\r\n        <ListItemIcon>\r\n          <NoteIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"All Notes\" />\r\n      </ListItem>\r\n      <ListItem\r\n        button\r\n        onClick={onDropDownClick(openNotebooks, setOpenNotebooks)}\r\n      >\r\n        <ListItemIcon>\r\n          <BookIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Notebooks\" />\r\n        {openNotebooks ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n      <Collapse in={openNotebooks} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          {getNotebooks()}\r\n          <NewNotebookDialog\r\n            user={user}\r\n            className={classes.nested}\r\n            addNotebook={addNotebook}\r\n          />\r\n        </List>\r\n      </Collapse>\r\n      <ListItem button onClick={onDropDownClick(openTags, setOpenTags)}>\r\n        <ListItemIcon>\r\n          <LocalOfferIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Tags\" />\r\n        {openTags ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n      <Collapse in={openTags} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          {getTags()}\r\n        </List>\r\n      </Collapse>\r\n      <ListItem\r\n        button\r\n        onClick={onClick(-1, \"trash\")}\r\n        selected={folder.id.get() === -1 && folder.type.get() === \"trash\"}\r\n      >\r\n        <ListItemIcon>\r\n          <DeleteIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Trash\" />\r\n      </ListItem>\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import Notebook from \"./Notebook\";\r\n\r\nlet id = 1;\r\n\r\nexport default class Note {\r\n  constructor(\r\n    author,\r\n    title,\r\n    content,\r\n    date = new Date(),\r\n    notebook = new Notebook('Default'),\r\n    tags = [],\r\n  ) {\r\n    this.author = author;\r\n    this.id = id++;\r\n    this.title = title;\r\n    this.content = content;\r\n    this.date = date;\r\n    this.notebook = notebook;\r\n    this.deleted = false;\r\n    this.tags = tags;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddCircle from \"@material-ui/icons/AddCircle\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst CreateButton = ({ onClick }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Button\r\n      onClick={onClick}\r\n      size=\"large\"\r\n      color=\"primary\"\r\n      className={classes.button}\r\n    >\r\n      <AddCircle className={classes.leftIcon} />\r\n      New Note\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default CreateButton;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport {\r\n  MenuItem,\r\n  Select,\r\n  FormControl,\r\n  InputLabel,\r\n  Container\r\n} from \"@material-ui/core\";\r\nimport Note from \"../models/Note\";\r\nimport CreateButton from \"./CreateButton\";\r\n\r\nconst NewNoteDialog = ({ user, addNote, notebooks }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [titleInput, setTitleInput] = useState(\"\");\r\n  const [contentInput, setContentInput] = useState(\"\");\r\n  const [values, setValues] = useState({\r\n    notebook: notebooks[0]\r\n  });\r\n\r\n  const getNotebooks = () =>\r\n    notebooks.map((notebook, index) => (\r\n      <MenuItem key={index} value={notebook}>\r\n        {notebook.name}\r\n      </MenuItem>\r\n    ));\r\n\r\n  const handleChange = event => {\r\n    setValues(oldValues => ({\r\n      ...oldValues,\r\n      [event.target.name]: event.target.value\r\n    }));\r\n  };\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n    const newNote = new Note(\r\n      user,\r\n      titleInput,\r\n      contentInput,\r\n      new Date(),\r\n      values.notebook\r\n    );\r\n    addNote(newNote);\r\n    setTitleInput(\"\");\r\n    setContentInput(\"\");\r\n    setValues(\"\");\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <CreateButton\r\n          onClick={() => {\r\n            setOpen(true);\r\n            setValues({ notebook: notebooks[0] });\r\n          }}\r\n        />\r\n      </Container>\r\n      <Dialog\r\n        open={open}\r\n        onClose={() => setOpen(false)}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        onSubmit={onSubmit}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">New Note</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            value={titleInput}\r\n            onChange={event => setTitleInput(event.target.value)}\r\n            label=\"Title\"\r\n            type=\"email\"\r\n            variant=\"outlined\"\r\n            name=\"title\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            id=\"outlined-multiline-static\"\r\n            value={contentInput}\r\n            onChange={event => setContentInput(event.target.value)}\r\n            label=\"Content\"\r\n            multiline\r\n            rows=\"8\"\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            name=\"content\"\r\n            fullWidth\r\n          />\r\n          <FormControl fullWidth>\r\n            <InputLabel htmlFor=\"notebook\">Notebook</InputLabel>\r\n            <Select\r\n              value={values.notebook}\r\n              onChange={handleChange}\r\n              inputProps={{\r\n                name: \"notebook\",\r\n                id: \"notebook\"\r\n              }}\r\n            >\r\n              {getNotebooks()}\r\n            </Select>\r\n          </FormControl>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpen(false)} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={onSubmit} color=\"primary\">\r\n            Create\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewNoteDialog;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport User from \"./User\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport Navigation from \"./Navigation\";\r\nimport { Drawer } from \"@material-ui/core\";\r\nimport NewNoteDialog from \"./NewNoteDialog\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  drawer: {\r\n    width: 280,\r\n    flexShrink: 0\r\n  },\r\n  drawerPaper: {\r\n    width: 280\r\n  }\r\n}));\r\n\r\nconst Sidebar = ({\r\n  user,\r\n  addNote,\r\n  addNotebook,\r\n  folder,\r\n  notebooks,\r\n  tags,\r\n  theme,\r\n  search\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Drawer\r\n      variant=\"permanent\"\r\n      className={classes.drawer}\r\n      classes={{\r\n        paper: classes.drawerPaper\r\n      }}\r\n      anchor=\"left\"\r\n      style={{ backgroundColor: \"red\" }}\r\n    >\r\n      <User user={user} theme={theme} />\r\n      <SearchBar search={search} folderSetter={folder.type.set} />\r\n      <NewNoteDialog user={user.get} addNote={addNote} notebooks={notebooks} />\r\n      <Navigation\r\n        user={user.get}\r\n        addNotebook={addNotebook}\r\n        folder={folder}\r\n        notebooks={notebooks}\r\n        tags={tags}\r\n      />\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\r\nimport {\r\n  MenuItem,\r\n  Select,\r\n  FormControl,\r\n  InputLabel,\r\n  ListItemIcon\r\n} from \"@material-ui/core\";\r\n\r\nconst EditNoteDialog = ({ note, editNote, notebooks, closeMenu }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [titleInput, setTitleInput] = useState(note.title);\r\n  const [contentInput, setContentInput] = useState(note.content);\r\n  const [values, setValues] = useState({\r\n    notebook: note.notebook\r\n  });\r\n\r\n  const getNotebooks = () =>\r\n    notebooks.map(notebook => (\r\n      <MenuItem key={notebook.id} value={notebook}>\r\n        {notebook.name}\r\n      </MenuItem>\r\n    ));\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n    setTitleInput(note.title);\r\n    setContentInput(note.content);\r\n    setValues({\r\n      notebook: note.notebook\r\n    });\r\n    closeMenu();\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleChange = event => {\r\n    setValues({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n    editNote(note.id, titleInput, contentInput, values.notebook);\r\n    setTitleInput(\"\");\r\n    setContentInput(\"\");\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MenuItem onClick={handleOpen}>\r\n        <ListItemIcon>\r\n          <EditIcon />\r\n        </ListItemIcon>\r\n        Edit note\r\n      </MenuItem>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        onSubmit={onSubmit}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Edit Note</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            value={titleInput}\r\n            onChange={event => setTitleInput(event.target.value)}\r\n            label=\"Title\"\r\n            variant=\"outlined\"\r\n            name=\"title\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            id=\"outlined-multiline-static\"\r\n            value={contentInput}\r\n            onChange={event => setContentInput(event.target.value)}\r\n            label=\"Content\"\r\n            multiline\r\n            rows=\"8\"\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            name=\"content\"\r\n            fullWidth\r\n          />\r\n          <FormControl fullWidth>\r\n            <InputLabel htmlFor=\"notebook\">Notebook</InputLabel>\r\n            <Select\r\n              value={values.notebook}\r\n              onChange={handleChange}\r\n              inputProps={{\r\n                name: \"notebook\",\r\n                id: \"notebook\"\r\n              }}\r\n            >\r\n              {getNotebooks()}\r\n            </Select>\r\n          </FormControl>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={onSubmit} color=\"primary\">\r\n            Update\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditNoteDialog;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { MenuItem, ListItemIcon, DialogContentText } from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/DeleteOutlined\";\r\n\r\nconst DeleteNoteDialog = ({ noteTitle, deleteNote, closeMenu }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <MenuItem\r\n        onClick={() => {\r\n          setOpen(true);\r\n          closeMenu();\r\n        }}\r\n      >\r\n        <ListItemIcon>\r\n          <DeleteIcon />\r\n        </ListItemIcon>\r\n        Delete note\r\n      </MenuItem>\r\n      <Dialog\r\n        open={open}\r\n        onClose={() => setOpen(false)}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        onSubmit={deleteNote}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Delete note</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {noteTitle} will be moved to trash.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpen(false)} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={deleteNote} color=\"primary\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteNoteDialog;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Divider,\r\n  Box,\r\n  Drawer,\r\n  IconButton,\r\n  Menu,\r\n  Grid,\r\n  MenuItem,\r\n  ListItemIcon,\r\n  AppBar,\r\n  Toolbar\r\n} from \"@material-ui/core\";\r\nimport BookIcon from \"@material-ui/icons/BookOutlined\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreVert\";\r\nimport UndoIcon from \"@material-ui/icons/UndoOutlined\";\r\nimport EditNoteDialog from \"./EditNoteDialog\";\r\nimport DeleteNoteDialog from \"./DeleteNoteDialog\";\r\nimport ChipInput from \"material-ui-chip-input\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appBar: {\r\n    top: \"auto\",\r\n    bottom: 0\r\n  },\r\n  view: {\r\n    padding: theme.spacing(3)\r\n  },\r\n  iconLeft: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  drawer: {\r\n    width: 740,\r\n    flexShrink: 0\r\n  },\r\n  drawerPaper: {\r\n    width: 740\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5)\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst NoteView = ({\r\n  note,\r\n  editNote,\r\n  deleteNote,\r\n  restoreNote,\r\n  notebooks,\r\n  tags\r\n}) => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  if (!note) {\r\n    return (\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={classes.drawer}\r\n        classes={{\r\n          paper: classes.drawerPaper\r\n        }}\r\n        anchor=\"right\"\r\n      >\r\n        <Container />\r\n      </Drawer>\r\n    );\r\n  }\r\n  return (\r\n    <Drawer\r\n      variant=\"permanent\"\r\n      className={classes.drawer}\r\n      classes={{\r\n        paper: classes.drawerPaper\r\n      }}\r\n      anchor=\"right\"\r\n    >\r\n      <Box\r\n        className={classes.view}\r\n        style={{ maxHeight: \"100%\", overflowY: \"auto\" }}\r\n      >\r\n        <Grid container spacing={0} direction=\"row\" alignItems=\"center\">\r\n          <Grid item xs={11}>\r\n            <Box\r\n              color=\"text.secondary\"\r\n              justifyContent=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Typography variant=\"subtitle2\" gutterBottom>\r\n                {!note.deleted ? (\r\n                  <div>\r\n                    <BookIcon fontSize=\"inherit\" className={classes.iconLeft} />\r\n                    {note.notebook.name}\r\n                  </div>\r\n                ) : (\r\n                  <div />\r\n                )}\r\n              </Typography>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={1}>\r\n            <Box justifyContent=\"center\" alignContent=\"right\">\r\n              <IconButton\r\n                onClick={event => setAnchorEl(event.currentTarget)}\r\n                edge=\"end\"\r\n                aria-label=\"more\"\r\n              >\r\n                <MoreHorizIcon />\r\n              </IconButton>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n        <Menu\r\n          id=\"simple-menu\"\r\n          anchorEl={anchorEl}\r\n          keepMounted\r\n          open={Boolean(anchorEl)}\r\n          onClose={() => setAnchorEl(null)}\r\n        >\r\n          {!note.deleted ? (\r\n            <div>\r\n              <EditNoteDialog\r\n                note={note}\r\n                editNote={editNote}\r\n                notebooks={notebooks}\r\n                closeMenu={() => setAnchorEl(null)}\r\n              />\r\n              <DeleteNoteDialog\r\n                noteTitle={note.title}\r\n                deleteNote={event => deleteNote(note.id)}\r\n                closeMenu={() => setAnchorEl(null)}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <MenuItem\r\n              onClick={() => {\r\n                restoreNote(note.id);\r\n                setAnchorEl(null);\r\n              }}\r\n            >\r\n              <ListItemIcon>\r\n                <UndoIcon />\r\n              </ListItemIcon>\r\n              Restore\r\n            </MenuItem>\r\n          )}\r\n        </Menu>\r\n        <Divider />\r\n        <Container className={classes.view}>\r\n          <Typography variant=\"h4\" className={classes.title} gutterBottom>\r\n            {note.title}\r\n          </Typography>\r\n          <Typography\r\n            style={{ whiteSpace: \"pre-wrap\" }}\r\n            variant=\"body1\"\r\n            gutterBottom\r\n          >\r\n            {note.content}\r\n          </Typography>\r\n        </Container>\r\n      </Box>\r\n      {!note.deleted ? (\r\n        <AppBar position=\"absolute\" color=\"inherit\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <ChipInput\r\n              value={note.tags.map(tag => tag.name)}\r\n              onAdd={chip => tags.add(note.id, chip)}\r\n              onDelete={chip => tags.remove(note.id, chip)}\r\n              placeholder=\"Add tag\"\r\n              fullWidth\r\n            />\r\n          </Toolbar>\r\n        </AppBar>\r\n      ) : (\r\n        <div />\r\n      )}\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default NoteView;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\r\nimport {\r\n  ListItemIcon,\r\n  MenuItem\r\n} from \"@material-ui/core\";\r\n\r\nconst RenameNotebookDialog = ({ id, name, rename, setAnchorEl }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [nameInput, setNameInput] = useState(name);\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n    rename(id, nameInput);\r\n    setNameInput(\"\");\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MenuItem\r\n        onClick={() => {\r\n          setOpen(true);\r\n          setNameInput(name)\r\n          setAnchorEl();\r\n        }}\r\n      >\r\n        <ListItemIcon>\r\n          <EditIcon />\r\n        </ListItemIcon>\r\n        Rename notebook\r\n      </MenuItem>\r\n      <Dialog\r\n        open={open}\r\n        onClose={() => setOpen(false)}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        onSubmit={onSubmit}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Rename notebook</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            value={nameInput}\r\n            onChange={event => setNameInput(event.target.value)}\r\n            label=\"Name\"\r\n            variant=\"outlined\"\r\n            name=\"name\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpen(false)} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={onSubmit} color=\"primary\">\r\n            Continue\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RenameNotebookDialog;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { MenuItem, ListItemIcon, DialogContentText } from \"@material-ui/core\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForeverOutlined\";\r\n\r\nconst EmptyTrashDialog = ({ emptyTrash, closeMenu }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <MenuItem\r\n        onClick={() => {\r\n          setOpen(true);\r\n          closeMenu();\r\n        }}\r\n      >\r\n        <ListItemIcon>\r\n          <DeleteForeverIcon />\r\n        </ListItemIcon>\r\n        Empty Trash\r\n      </MenuItem>\r\n      <Dialog\r\n        open={open}\r\n        onClose={() => setOpen(false)}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        onSubmit={emptyTrash}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Empty Trash?</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Are you sure you want to empty the trash? All items in the trash\r\n            will be permanently deleted and cannot be restored.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpen(false)} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={emptyTrash} color=\"primary\">\r\n            Empty\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmptyTrashDialog;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  ListItem,\r\n  ListItemText,\r\n  List,\r\n  Container,\r\n  Typography,\r\n  Box,\r\n  IconButton,\r\n  Grid,\r\n  Menu,\r\n  MenuItem,\r\n  ListItemIcon\r\n} from \"@material-ui/core\";\r\nimport { distanceInWordsToNow } from \"date-fns\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport DeleteIcon from \"@material-ui/icons/DeleteOutlined\";\r\nimport RenameNotebookDialog from \"./RenameNotebookDialog copy\";\r\nimport EmptyTrashDialog from \"./EmptyTrashDialog\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  header: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(6)\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200\r\n  },\r\n  tertiary: {\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  textItem: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst NoteList = ({ notes }) => {\r\n  const classes = useStyles();\r\n\r\n  const truncate = content => {\r\n    const charLength = 100;\r\n    if (content.indexOf(\"\\n\") === -1) {\r\n      return content.length < charLength\r\n        ? content\r\n        : `${content.slice(0, charLength)}...`;\r\n    }\r\n    return truncate(content.substring(0, content.indexOf(\"\\n\")));\r\n  };\r\n\r\n  const getItems = () =>\r\n    notes.all.map(note => (\r\n      <ListItem\r\n        button\r\n        selected={notes.open.get === note.id}\r\n        onClick={() => {\r\n          notes.open.set(note.id);\r\n        }}\r\n        key={note.id}\r\n        divider\r\n      >\r\n        <ListItemText\r\n          disableTypography\r\n          className={classes.textItem}\r\n          primary={<Typography variant=\"subtitle1\">{note.title}</Typography>}\r\n          secondary={\r\n            <Box>\r\n              <Box color=\"text.secondary\">{truncate(note.content)}</Box>\r\n              <Box color=\"text.hint\" className={classes.tertiary}>\r\n                <Typography variant=\"caption\">\r\n                  {distanceInWordsToNow(note.date, { addSuffix: true })}\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n          }\r\n        />\r\n      </ListItem>\r\n    ));\r\n\r\n  if (notes.all.length > 0) {\r\n    return <List component=\"nav\">{getItems()}</List>;\r\n  }\r\n  return <Container />;\r\n};\r\n\r\nconst NoteListView = ({ name, notes, menu, notebooks, trash }) => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const getMenu = () => {\r\n    if (!menu || (menu !== \"notebook\" && notes.all.length === 0)) {\r\n      return <div />;\r\n    } else {\r\n      return (\r\n        <div>\r\n          <IconButton onClick={event => setAnchorEl(event.currentTarget)}>\r\n            <MoreHorizIcon />\r\n          </IconButton>\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={() => setAnchorEl(null)}\r\n          >\r\n            {menu === \"notebook\" ? (\r\n              <div>\r\n                <RenameNotebookDialog\r\n                  id={notebooks.id}\r\n                  name={name}\r\n                  rename={notebooks.rename}\r\n                  setAnchorEl={() => setAnchorEl(null)}\r\n                />\r\n                {notes.all.length === 0 ? (\r\n                  <MenuItem\r\n                    onClick={() => {\r\n                      setAnchorEl(null);\r\n                      notebooks.delete(notebooks.id);\r\n                    }}\r\n                  >\r\n                    <ListItemIcon>\r\n                      <DeleteIcon />\r\n                    </ListItemIcon>\r\n                    Delete notebook\r\n                  </MenuItem>\r\n                ) : (\r\n                  <div />\r\n                )}\r\n              </div>\r\n            ) : (\r\n              <EmptyTrashDialog\r\n                emptyTrash={trash.empty}\r\n                closeMenu={() => setAnchorEl(null)}\r\n              />\r\n            )}\r\n          </Menu>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box style={{ maxHeight: \"100%\", overflowY: \"auto\" }}>\r\n      <Container>\r\n        <Typography className={classes.header} variant=\"h6\">\r\n          {name}\r\n        </Typography>\r\n        <Grid container alignItems=\"center\">\r\n          <Grid item xs={11}>\r\n            <Box color=\"text.secondary\">\r\n              <Typography variant=\"subtitle2\">\r\n                {notes.all.length} {notes.all.length === 1 ? \"note\" : \"notes\"}\r\n              </Typography>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={1}>\r\n            {getMenu()}\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      <NoteList notes={notes} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default NoteListView;\r\n","import React from \"react\";\r\nimport NoteListView from \"./NoteListView\";\r\n\r\nconst Bridge = ({\r\n  folder,\r\n  items,\r\n  trash,\r\n  tags,\r\n  searchTerm\r\n}) => {\r\n  const search = note => {\r\n    return (\r\n      searchTerm.value.length > 0 &&\r\n      (note.title.toLowerCase().includes(searchTerm.value.toLowerCase()) ||\r\n        note.content.toLowerCase().includes(searchTerm.value.toLowerCase()))\r\n    );\r\n  };\r\n\r\n  if (folder.type === \"search\") {\r\n    document.title = \"Search Results - Noto\";\r\n    return (\r\n      <NoteListView\r\n        name={\r\n          searchTerm.value.length > 0\r\n            ? `Search results for '${searchTerm.value}'`\r\n            : \"Start typing...\"\r\n        }\r\n        notes={{\r\n          all: items.notes.all.filter(search),\r\n          open: {\r\n            get: items.notes.open.get,\r\n            set: items.notes.open.set\r\n          }\r\n        }}\r\n        noteSetter={items.notes.open.set}\r\n      />\r\n    );\r\n  }\r\n  if (folder.type === \"all\") {\r\n    document.title = \"All Notes - Noto\";\r\n    return (\r\n      <NoteListView\r\n        name=\"All Notes\"\r\n        notes={{\r\n          all: items.notes.all.filter(note => !note.deleted),\r\n          open: {\r\n            get: items.notes.open.get,\r\n            set: items.notes.open.set\r\n          }\r\n        }}\r\n      />\r\n    );\r\n  }\r\n  if (folder.type === \"notebook\") {\r\n    const name = items.notebooks.all.find(notebook => notebook.id === folder.id).name;\r\n    document.title = `${name} - Noto`;\r\n    return (\r\n      <NoteListView\r\n        name={name}\r\n        notes={{\r\n          all: items.notes.all.filter(note => note.notebook.id === folder.id && !note.deleted),\r\n          open: {\r\n            get: items.notes.open.get,\r\n            set: items.notes.open.set\r\n          }\r\n        }}\r\n        menu=\"notebook\"\r\n        notebooks={{ ...items.notebooks, id: folder.id }}\r\n      />\r\n    );\r\n  }\r\n  if (folder.type === \"tag\") {\r\n    const tag = tags.find(tag => tag.id === folder.id);\r\n    document.title = `${tag.name} - Noto`;\r\n    return (\r\n      <NoteListView\r\n        name={`Tagged '${tag.name}'`}\r\n        notes={{\r\n          all: items.notes.all.filter(note => note.tags.includes(tag) && !note.deleted),\r\n          open: {\r\n            get: items.notes.open.get,\r\n            set: items.notes.open.set\r\n          }\r\n        }}\r\n      />\r\n    );\r\n  }\r\n  if (folder.type === \"trash\") {\r\n    document.title = \"Trash - Noto\";\r\n    return (\r\n      <NoteListView\r\n        name=\"Trash\"\r\n        notes={{\r\n          all: items.notes.all.filter(note => note.deleted),\r\n          open: {\r\n            get: items.notes.open.get,\r\n            set: items.notes.open.set\r\n          }\r\n        }}\r\n        menu=\"trash\"\r\n        trash={trash}\r\n      />\r\n    );\r\n  }\r\n  return <h1>Invalid Folder</h1>;\r\n};\r\n\r\nexport default Bridge;\r\n","let id = 0;\r\n\r\nexport default class Tag {\r\n  constructor(author, name) {\r\n    this.id = id++;\r\n    this.author = author;\r\n    this.name = name;\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  TextField,\r\n  Container,\r\n  Typography,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Grid\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    alignSelf: \"center\",\r\n    maxWidth: 445,\r\n    padding: theme.spacing(4)\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    flexGrow: 1,\r\n    justifyContent: \"center\",\r\n    paddingTop: theme.spacing(4)\r\n  },\r\n  textField: {\r\n    margin: theme.spacing(1),\r\n    width: 250\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(1),\r\n    width: 250\r\n  },\r\n  dense: {\r\n    paddingTop: theme.spacing(4)\r\n  },\r\n  subheader: {\r\n    marginBottom: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nconst Login = ({ user, say }) => {\r\n  const classes = useStyles();\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\"\r\n  });\r\n  const [createAccount, setCreateAccount] = useState(false);\r\n  const [title, setTitle] = useState(\"Welcome Back\");\r\n\r\n  document.title = title;\r\n\r\n  const validate = event => {\r\n    event.preventDefault();\r\n    let validatedUser = user.validate(values.email, values.password);\r\n    if (validatedUser) {\r\n      user.logIn(validatedUser);\r\n      say(\"Successfully signed in\");\r\n    } else {\r\n      say(\"Email or password is incorrect\");\r\n    }\r\n  };\r\n\r\n  const handleChange = name => event => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  const validateEmail = email => {\r\n    // eslint-disable-next-line\r\n    let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.container}>\r\n      <Card className={classes.card}>\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h3\">Noto</Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Typography\r\n                color=\"textSecondary\"\r\n                variant=\"subtitle1\"\r\n                className={classes.subheader}\r\n              >\r\n                Remember everything important.\r\n              </Typography>\r\n            </Grid>\r\n            {createAccount ? (\r\n              <>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    required\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    id=\"name\"\r\n                    label=\"Name\"\r\n                    className={classes.textField}\r\n                    value={values.name}\r\n                    onChange={handleChange(\"name\")}\r\n                    margin=\"normal\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    required\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    id=\"email\"\r\n                    label=\"Email\"\r\n                    className={classes.textField}\r\n                    value={values.email}\r\n                    onChange={handleChange(\"email\")}\r\n                    margin=\"normal\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    required\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    id=\"password\"\r\n                    label=\"Password\"\r\n                    className={classes.textField}\r\n                    value={values.password}\r\n                    onChange={handleChange(\"password\")}\r\n                    type=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    margin=\"normal\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    required\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    id=\"confirm-password\"\r\n                    label=\"Confirm Password\"\r\n                    className={classes.textField}\r\n                    value={values.confirmPassword}\r\n                    onChange={handleChange(\"confirmPassword\")}\r\n                    type=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    margin=\"normal\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    className={classes.button}\r\n                    color=\"primary\"\r\n                    onClick={event => {\r\n                      if (\r\n                        values.name.length === 0 ||\r\n                        values.email.length === 0 ||\r\n                        values.password.length === 0 ||\r\n                        values.confirmPassword.length === 0\r\n                      ) {\r\n                        say(\"Please fill out all fields\");\r\n                      } else if (!validateEmail(values.email)) {\r\n                        say(\"Invalid email entered\");\r\n                      } else if (values.password !== values.confirmPassword) {\r\n                        say(\"Passwords do not match\");\r\n                      } else {\r\n                        user.create(values.name, values.email, values.password);\r\n                        setValues({\r\n                          name: \"\",\r\n                          email: \"\",\r\n                          password: \"\",\r\n                          confirmPassword: \"\"\r\n                        });\r\n                        setCreateAccount(false);\r\n                        setTitle(\"Welcome Back\");\r\n                      }\r\n                    }}\r\n                  >\r\n                    Continue\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    color=\"textSecondary\"\r\n                    className={classes.dense}\r\n                  >\r\n                    Already have an account?\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Button\r\n                    size=\"small\"\r\n                    onClick={event => {\r\n                      setCreateAccount(false);\r\n                      setTitle(\"Welcome Back\");\r\n                    }}\r\n                    fullWidth\r\n                    color=\"primary\"\r\n                  >\r\n                    Sign in\r\n                  </Button>\r\n                </Grid>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    id=\"email\"\r\n                    label=\"Email\"\r\n                    className={classes.textField}\r\n                    value={values.email}\r\n                    onChange={handleChange(\"email\")}\r\n                    margin=\"normal\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    id=\"password\"\r\n                    label=\"Password\"\r\n                    className={classes.textField}\r\n                    value={values.password}\r\n                    onChange={handleChange(\"password\")}\r\n                    type=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    margin=\"normal\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    className={classes.button}\r\n                    color=\"primary\"\r\n                    onClick={validate}\r\n                  >\r\n                    Continue\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    color=\"textSecondary\"\r\n                    className={classes.dense}\r\n                  >\r\n                    Don't have an account?\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Button\r\n                    size=\"small\"\r\n                    onClick={event => {\r\n                      setCreateAccount(true);\r\n                      setTitle(\"Create a Noto Account\");\r\n                    }}\r\n                    fullWidth\r\n                    color=\"primary\"\r\n                  >\r\n                    Create account\r\n                  </Button>\r\n                </Grid>\r\n              </>\r\n            )}\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","let id = 0;\r\n\r\nexport default class Account {\r\n  constructor(name, email, password) {\r\n    this.id = id++;\r\n    this.name = name;\r\n    this.email = email;\r\n    this.password = password;\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Sidebar from \"./components/Sidebar\";\nimport NoteView from \"./components/NoteView\";\nimport Bridge from \"./components/Bridge\";\nimport {\n  createMuiTheme,\n  CssBaseline,\n  Snackbar,\n  IconButton\n} from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport purple from \"@material-ui/core/colors/purple\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Tag from \"./models/Tag\";\nimport Login from \"./components/Login\";\nimport Account from \"./models/Account\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  content: {\n    flexGrow: 1\n  },\n  close: {\n    padding: theme.spacing(0.5)\n  }\n}));\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    primary: {\n      main: purple[\"200\"]\n    }\n  }\n});\n\nconst lightTheme = createMuiTheme({\n  palette: {\n    type: \"light\"\n  }\n});\n\nfunction App(props) {\n  const classes = useStyles();\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  // Data states\n  const [users, setUsers] = useState(props.users);\n  const [notes, setNotes] = useState(props.notes);\n  const [notebooks, setNotebooks] = useState(props.notebooks);\n  const [tags, setTags] = useState(props.tags);\n\n  // UI states\n  const [dark, setDark] = useState(true);\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n\n  // Account states\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [user, setUser] = useState({});\n\n  // Navigation states\n  const [folderType, setFolderType] = useState(\"all\");\n  const [folderId, setFolderId] = useState(0);\n  const [openNoteId, setOpenNoteId] = useState(1);\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenSnackbar(false);\n  };\n\n  // Note handlers\n\n  const addNote = note => {\n    setNotes(notes.concat(note));\n    say(`Successfully created ${note.title}`);\n  };\n\n  const editNote = (id, title, content, notebook) => {\n    let copy = [...notes];\n    let note = copy[copy.findIndex(note => note.id === id)];\n    note.title = title;\n    note.content = content;\n    note.notebook = notebook;\n    note.date = new Date();\n    setNotes(copy);\n    say(`${note.title} updated`);\n  };\n\n  const deleteNote = noteId => {\n    let copy = [...notes];\n    let note = copy[copy.findIndex(note => note.id === noteId)];\n    note.deleted = true;\n    setNotes(copy);\n    setOpenNoteId(-1);\n    say(`${note.title} moved to Trash`);\n  };\n\n  const restoreNote = noteId => {\n    let copy = [...notes];\n    let note = copy[copy.findIndex(note => note.id === noteId)];\n    note.deleted = false;\n    setNotes(copy);\n    setOpenNoteId(-1);\n    say(`${note.title} restored to ${note.notebook.name}`);\n  };\n\n  // Notebook handlers\n\n  const addNotebook = notebook => {\n    setNotebooks(notebooks.concat(notebook));\n    say(`Successfully created ${notebook.name}`);\n  };\n\n  const renameNotebook = (id, name) => {\n    let copy = [...notebooks];\n    let notebook = copy[copy.findIndex(notebook => notebook.id === id)];\n    notebook.name = name;\n    setNotebooks(copy);\n    say(\"Notebook renamed\");\n  };\n\n  const deleteNotebook = id => {\n    let copy = [...notebooks];\n    let notebook = copy.find(notebook => notebook.id === id);\n    copy.splice(copy.indexOf(notebook), 1);\n    setNotebooks(copy);\n    setFolderId(0);\n    setFolderType(\"all\");\n    say(`Deleted ${notebook.name}`);\n  };\n\n  // Tag handlers\n\n  const addTag = (noteId, tagName) => {\n    let tagFound = tags.find(tag => tag.name === tagName);\n    if (!tagFound) {\n      tagFound = new Tag(user, tagName);\n      setTags(tags.concat(tagFound));\n    }\n    let copy = [...notes];\n    let note = copy[copy.findIndex(note => note.id === noteId)];\n    note.tags = note.tags.concat(tagFound);\n    setNotes(copy);\n  };\n\n  const removeTag = (noteId, tagName) => {\n    let copy = [...notes];\n    let note = copy[copy.findIndex(note => note.id === noteId)];\n    let tag = note.tags.find(tag => tag.name === tagName);\n    note.tags.splice(note.tags.indexOf(tag), 1);\n    setNotes(copy);\n    if (\n      !notes.some(\n        note => note.tags.findIndex(tag => tag.name === tagName) !== -1\n      )\n    ) {\n      let copyTags = [...tags];\n      let tagId = tag.id;\n      copyTags.splice(copyTags.findIndex(tag => tag.name === tagName), 1);\n      setTags(copyTags);\n      if (folderType === \"tag\" && folderId === tagId) {\n        setFolderId(0);\n        setFolderType(\"all\");\n      }\n    }\n  };\n\n  const emptyTrash = () => {\n    const recursiveDeletion = (all, trash) => {\n      if (trash === 0) {\n        setNotes(all);\n        say(\"Trash emptied\");\n        return;\n      }\n      all.splice(all.findIndex(note => note.deleted), 1);\n      recursiveDeletion(all, trash - 1);\n    };\n    recursiveDeletion([...notes], notes.filter(note => note.deleted).length);\n  };\n\n  const say = message => {\n    setSnackbarMessage(message);\n    setOpenSnackbar(true);\n  };\n\n  return (\n    <ThemeProvider theme={dark ? darkTheme : lightTheme}>\n      <CssBaseline />\n      <div className={classes.root}>\n        {loggedIn ? (\n          <>\n            <Sidebar\n              user={{\n                get: user,\n                signOut: () => setLoggedIn(false)\n              }}\n              addNote={addNote}\n              addNotebook={addNotebook}\n              folder={{\n                id: {\n                  get: () => folderId,\n                  set: id => setFolderId(id)\n                },\n                type: {\n                  get: () => folderType,\n                  set: type => setFolderType(type)\n                }\n              }}\n              notebooks={notebooks.filter(\n                notebook => notebook.author.id === user.id\n              )}\n              tags={tags.filter(tag => tag.author.id === user.id)}\n              theme={{ dark: dark, setDarkTheme: value => setDark(value) }}\n              search={{\n                term: searchTerm,\n                update: term => setSearchTerm(term)\n              }}\n            />\n            <main className={classes.content}>\n              <Bridge\n                folder={{\n                  id: folderId,\n                  type: folderType\n                }}\n                items={{\n                  notes: {\n                    all: notes.filter(note => note.author.id === user.id),\n                    open: {\n                      get: openNoteId,\n                      set: id => setOpenNoteId(id)\n                    }\n                  },\n                  notebooks: {\n                    all: notebooks.filter(\n                      notebook => notebook.author.id === user.id\n                    ),\n                    rename: renameNotebook,\n                    delete: deleteNotebook\n                  }\n                }}\n                trash={{ empty: emptyTrash }}\n                tags={tags.filter(tag => tag.author.id === user.id)}\n                searchTerm={{\n                  value: searchTerm,\n                  update: value => setSearchTerm(value)\n                }}\n              />\n            </main>\n            <NoteView\n              note={notes.find(\n                note => note.author.id === user.id && note.id === openNoteId\n              )}\n              editNote={editNote}\n              deleteNote={deleteNote}\n              restoreNote={restoreNote}\n              notebooks={notebooks}\n              tags={{ add: addTag, remove: removeTag }}\n            />\n          </>\n        ) : (\n          <Login\n            user={{\n              loggedIn: loggedIn,\n              logIn: user => {\n                setUser(user);\n                setFolderId(0);\n                setFolderType(\"all\");\n                setLoggedIn(true);\n              },\n              create: (name, email, password) => {\n                let newAccount = new Account(name, email, password);\n                setUsers(users.concat(newAccount));\n                say(\"Successfully created account\");\n              },\n              validate: (email, password) =>\n                users.find(\n                  user => user.email === email && user.password === password\n                )\n            }}\n            say={say}\n          />\n        )}\n        <Snackbar\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\"\n          }}\n          open={openSnackbar}\n          autoHideDuration={3000}\n          onClose={handleClose}\n          ContentProps={{\n            \"aria-describedby\": \"message-id\"\n          }}\n          message={<span id=\"message-id\">{snackbarMessage}</span>}\n          action={[\n            <IconButton\n              key=\"close\"\n              aria-label=\"close\"\n              color=\"inherit\"\n              className={classes.close}\n              onClick={handleClose}\n            >\n              <CloseIcon />\n            </IconButton>\n          ]}\n        />\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Note from \"./models/Note\";\nimport Notebook from \"./models/Notebook\";\nimport Tag from \"./models/Tag\";\nimport Account from \"./models/Account\";\n\nconst users = [\n  new Account(\"Joshua Abad\", \"yeyoan@gmail.com\", \"123\"),\n  new Account(\"John Doe\", \"test@gmail.com\", \"123\")\n];\n\nconst notebooks = [new Notebook(users[0], \"My Notebook\")];\n\nconst tags = [new Tag(users[0], \"Noto\"), new Tag(users[0], \"WIP\")];\n\nconst notes = [\n  new Note(\n    users[0],\n    \"Welcome to Noto 📝\",\n    \"To get started, click the 'New Note' button on the sidebar.\\n\\nCreate notebooks to organize notes with a common topic. Add tags at the top each note to further categorize them.\",\n    new Date(2019, 6, 29),\n    notebooks[0],\n    [tags[0]]\n  ),\n  new Note(\n    users[0],\n    \"TODO 📃\",\n    \"✅ Add dark mode 🌙\\n✅ Add login/logout 👤\\n✅ Implement search 🔍\\n✅ Tag creation/removal in note view\\n✅ CRUD notes\\n✅ Rename and delete notebooks 📓\\n✅ Empty the trash 🗑\\n❌ Order notes displayed (alphabetical, date created, ascending/descending)\\n❌ Use a rich text editor (maybe Draft.js)\",\n    new Date(2019, 7, 1),\n    notebooks[0],\n    [...tags]\n  ),\n  new Note(\n    users[0],\n    \"Known Issues 🐛\",\n    \"- NOT responsive on mobile.\\n- Cannot move arrow keys up or down in edit note dialog.\\n- React complains about something in edit note dialog (most likely related to above).\",\n    new Date(2019, 7, 1),\n    notebooks[0],\n    [...tags]\n  )\n];\n\nReactDOM.render(\n  <App users={users} notes={notes} notebooks={notebooks} tags={tags} />,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}