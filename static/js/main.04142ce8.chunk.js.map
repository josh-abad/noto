{"version":3,"sources":["components/User.js","components/SearchBar.js","models/Notebook.js","components/NewNotebookDialog.js","components/Navigation.js","models/Note.js","components/CreateButton.js","components/NewNoteDialog.js","components/Sidebar.js","components/EditNoteDialog.js","components/DeleteNoteDialog.js","components/NoteView.js","components/RenameNotebookDialog copy.js","components/EmptyTrashDialog.js","components/NoteListView.js","components/Bridge.js","models/Tag.js","components/Login.js","models/Account.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","avatar","margin","User","_ref","user","classes","_React$useState","React","useState","_React$useState2","Object","slicedToArray","anchorEl","setAnchorEl","react_default","a","createElement","ListItem","ListItemAvatar","Avatar","className","name","nameArray","split","charAt","length","toUpperCase","getInitials","get","ListItemText","primary","IconButton","edge","onClick","event","currentTarget","ExpandMore_default","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","setDarkTheme","dark","ListItemIcon","InvertColors_default","signOut","ExitToApp_default","email","inputRoot","color","inputInput","defineProperty","padding","spacing","transition","transitions","create","width","breakpoints","up","&:focus","search","position","borderRadius","shape","backgroundColor","fade","palette","common","black","&:hover","marginLeft","searchIcon","height","pointerEvents","display","alignItems","justifyContent","SearchBar","folderSetter","Search_default","InputBase","value","term","onChange","update","target","placeholder","root","input","inputProps","aria-label","Notebook","author","classCallCheck","this","NewNotebookDialog","addNotebook","_useState","_useState2","setOpen","_useState3","_useState4","nameInput","setNameInput","onSubmit","preventDefault","newNotebook","button","AddCircleOutline_default","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","label","variant","fullWidth","DialogActions","Button","nested","paddingLeft","Navigation","pageSetter","notebooks","tags","folder","selected","setSelected","openNotebooks","setOpenNotebooks","_useState5","_useState6","openTags","setOpenTags","onDropDownClick","setter","page","List","Note_default","Book_default","ExpandLess_default","Collapse","in","timeout","unmountOnExit","component","disablePadding","map","notebook","index","key","BookOutlined_default","components_NewNotebookDialog","LocalOffer_default","tag","Delete_default","Note","title","content","date","arguments","undefined","Date","deleted","leftIcon","marginRight","CreateButton","size","AddCircle_default","NewNoteDialog","addNote","titleInput","setTitleInput","contentInput","setContentInput","_useState7","_useState8","values","setValues","newNote","Container","components_CreateButton","type","multiline","rows","FormControl","InputLabel","htmlFor","Select","oldValues","objectSpread","drawer","flexShrink","drawerPaper","Sidebar","Drawer","paper","anchor","style","components_User","components_SearchBar","components_NewNoteDialog","components_Navigation","EditNoteDialog","note","editNote","closeMenu","handleClose","EditOutlined_default","DeleteNoteDialog","noteTitle","deleteNote","DeleteOutlined_default","appBar","top","bottom","view","iconLeft","chip","marginTop","NoteView","restoreNote","Box","maxHeight","overflowY","Grid","container","direction","item","xs","Typography","gutterBottom","fontSize","alignContent","MoreVert_default","UndoOutlined_default","components_EditNoteDialog","components_DeleteNoteDialog","Divider","whiteSpace","AppBar","Toolbar","ChipInput_default","onAdd","add","onDelete","remove","RenameNotebookDialog","rename","EmptyTrashDialog","emptyTrash","DeleteForeverOutlined_default","header","marginBottom","textField","tertiary","textItem","paddingRight","NoteList","notes","noteSetter","selectedNote","setSelectedNote","truncate","indexOf","concat","slice","substring","divider","disableTypography","secondary","distanceInWordsToNow","addSuffix","NoteListView","_ref2","menu","trash","MoreHoriz_default","RenameNotebookDialog_copy","delete","components_EmptyTrashDialog","empty","NoteListView_NoteList","Bridge","openFolder","searchTerm","document","components_NoteListView","filter","toLowerCase","includes","notebookName","all","find","Tag","card","alignSelf","maxWidth","flexWrap","flexGrow","paddingTop","dense","subheader","Login","say","password","confirmPassword","createAccount","setCreateAccount","setTitle","handleChange","Card","CardContent","justify","Fragment","required","autoComplete","test","String","validatedUser","validate","logIn","Account","close","darkTheme","createMuiTheme","main","purple","lightTheme","App","props","setPage","users","setUsers","setNotes","setNotebooks","_useState9","_useState10","setTags","_useState11","_useState12","openNote","setOpenNote","_useState13","_useState14","setDark","_useState15","_useState16","openSnackbar","setOpenSnackbar","_useState17","_useState18","snackbarMessage","setSnackbarMessage","_useState19","_useState20","setSearchTerm","_useState21","_useState22","loggedIn","setLoggedIn","_useState23","_useState24","setUser","_useState25","_useState26","setOpenFolder","reason","ThemeProvider","CssBaseline","components_Sidebar","pageNumber","components_Bridge","copy","toConsumableArray","findIndex","splice","recursiveDeletion","noteId","components_NoteView","tagName","tagFound","some","copyTags","tagId","components_Login","newAccount","username","message","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","aria-describedby","action","Close_default","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.04142ce8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport {\r\n  ListItem,\r\n  ListItemText,\r\n  Avatar,\r\n  ListItemAvatar,\r\n  Menu,\r\n  MenuItem,\r\n  IconButton,\r\n  ListItemIcon\r\n} from \"@material-ui/core\";\r\nimport InvertColorsIcon from \"@material-ui/icons/InvertColors\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  avatar: {\r\n    margin: 10\r\n  }\r\n}));\r\n\r\nconst User = ({ user, theme }) => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const getInitials = name => {\r\n    let nameArray = name.split(\" \");\r\n    return (\r\n      name.charAt(0) +\r\n      (nameArray.length > 1 ? nameArray[nameArray.length - 1].charAt(0) : \"\")\r\n    ).toUpperCase();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n          <Avatar className={classes.avatar}>\r\n            {getInitials(user.get.name)}\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary={user.get.name} />\r\n        <IconButton\r\n          edge=\"end\"\r\n          onClick={event => setAnchorEl(event.currentTarget)}\r\n        >\r\n          <ExpandMoreIcon />\r\n        </IconButton>\r\n      </ListItem>\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={() => setAnchorEl(null)}\r\n      >\r\n        <MenuItem\r\n          onClick={() => {\r\n            theme.setDarkTheme(!theme.dark);\r\n            setAnchorEl(null);\r\n          }}\r\n        >\r\n          <ListItemIcon>\r\n            <InvertColorsIcon />\r\n          </ListItemIcon>\r\n          Enable {theme.dark ? \"Light\" : \"Dark\"} Mode\r\n        </MenuItem>\r\n        <MenuItem onClick={() => user.signOut()}>\r\n          <ListItemIcon>\r\n            <ExitToAppIcon />\r\n          </ListItemIcon>\r\n          Sign out {user.get.email}\r\n        </MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React from \"react\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { InputBase } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  inputRoot: {\r\n    color: \"inherit\"\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 7),\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: 120,\r\n      \"&:focus\": {\r\n        width: 120\r\n      }\r\n    }\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.black, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.black, 0.25)\r\n    },\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      margin: theme.spacing(2),\r\n      width: \"auto\"\r\n    }\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing(7),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  }\r\n}));\r\n\r\nconst SearchBar = ({ search, folderSetter }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        value={search.term}\r\n        onChange={event => search.update(event.target.value)}\r\n        onClick={() => folderSetter(\"search\")}\r\n        placeholder=\"Search all notes...\"\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput\r\n        }}\r\n        inputProps={{ \"aria-label\": \"search\" }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","let id = 0;\r\n\r\nexport default class Notebook {\r\n  constructor(author, name) {\r\n    this.id = id++;\r\n    this.author = author;\r\n    this.name = name;\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport AddCircle from \"@material-ui/icons/AddCircleOutline\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Notebook from \"../models/Notebook\";\r\nimport { ListItem, ListItemIcon, ListItemText, DialogContentText } from \"@material-ui/core\";\r\n\r\nconst NewNotebookDialog = ({ user, className, addNotebook }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [nameInput, setNameInput] = useState(\"\");\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n    const newNotebook = new Notebook(user, nameInput);\r\n    addNotebook(newNotebook);\r\n    setNameInput(\"\");\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ListItem button className={className} onClick={() => setOpen(true)}>\r\n        <ListItemIcon>\r\n          <AddCircle />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"New Notebook\" />\r\n      </ListItem>\r\n      <Dialog\r\n        open={open}\r\n        onClose={() => setOpen(false)}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        onSubmit={onSubmit}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Create new notebook</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Notebooks are useful for grouping notes around a common topic.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            value={nameInput}\r\n            onChange={event => setNameInput(event.target.value)}\r\n            label=\"Name\"\r\n            variant=\"outlined\"\r\n            name=\"name\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpen(false)} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={onSubmit} color=\"primary\">\r\n            Create\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewNotebookDialog;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Collapse\r\n} from \"@material-ui/core\";\r\nimport NoteIcon from \"@material-ui/icons/Note\";\r\nimport BookIcon from \"@material-ui/icons/Book\";\r\nimport BookIconOutlined from \"@material-ui/icons/BookOutlined\";\r\nimport LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport NewNotebookDialog from \"./NewNotebookDialog\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  nested: {\r\n    paddingLeft: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nconst Navigation = ({\r\n  user,\r\n  addNotebook,\r\n  pageSetter,\r\n  folderSetter,\r\n  notebooks,\r\n  tags\r\n}) => {\r\n  const classes = useStyles();\r\n  const [selected, setSelected] = useState({ id: 0, folder: \"all\" });\r\n  const [openNotebooks, setOpenNotebooks] = useState(false);\r\n  const [openTags, setOpenTags] = useState(false);\r\n\r\n  const getNotebooks = () => {\r\n    return notebooks.map((notebook, index) => {\r\n      return (\r\n        <ListItem\r\n          button\r\n          onClick={onClick(notebook.id, \"notebook\")}\r\n          selected={\r\n            selected.id === notebook.id && selected.folder === \"notebook\"\r\n          }\r\n          key={index}\r\n          className={classes.nested}\r\n        >\r\n          <ListItemIcon>\r\n            <BookIconOutlined />\r\n          </ListItemIcon>\r\n          <ListItemText primary={notebook.name} />\r\n        </ListItem>\r\n      );\r\n    });\r\n  };\r\n\r\n  const getTags = () => {\r\n    return tags.map((tag, index) => {\r\n      return (\r\n        <ListItem\r\n          button\r\n          onClick={onClick(tag.id, \"tag\")}\r\n          selected={selected.id === tag.id && selected.folder === \"tag\"}\r\n          key={index}\r\n          className={classes.nested}\r\n        >\r\n          <ListItemText primary={tag.name} />\r\n        </ListItem>\r\n      );\r\n    });\r\n  };\r\n\r\n  const onDropDownClick = (value, setter) => {\r\n    return () => {\r\n      setter(!value);\r\n    };\r\n  };\r\n\r\n  const onClick = (page, folder) => {\r\n    return () => {\r\n      pageSetter(page);\r\n      folderSetter(folder);\r\n      setSelected({ id: page, folder: folder });\r\n    };\r\n  };\r\n\r\n  return (\r\n    <List>\r\n      <ListItem\r\n        button\r\n        onClick={onClick(0, \"all\")}\r\n        selected={selected.id === 0 && selected.folder === \"all\"}\r\n      >\r\n        <ListItemIcon>\r\n          <NoteIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"All Notes\" />\r\n      </ListItem>\r\n      <ListItem\r\n        button\r\n        onClick={onDropDownClick(openNotebooks, setOpenNotebooks)}\r\n      >\r\n        <ListItemIcon>\r\n          <BookIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Notebooks\" />\r\n        {openNotebooks ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n      <Collapse in={openNotebooks} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          {getNotebooks()}\r\n          <NewNotebookDialog\r\n            user={user}\r\n            className={classes.nested}\r\n            addNotebook={addNotebook}\r\n          />\r\n        </List>\r\n      </Collapse>\r\n      <ListItem button onClick={onDropDownClick(openTags, setOpenTags)}>\r\n        <ListItemIcon>\r\n          <LocalOfferIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Tags\" />\r\n        {openTags ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n      <Collapse in={openTags} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          {getTags()}\r\n        </List>\r\n      </Collapse>\r\n      <ListItem\r\n        button\r\n        onClick={onClick(-1, \"trash\")}\r\n        selected={selected.id === -1 && selected.folder === \"trash\"}\r\n      >\r\n        <ListItemIcon>\r\n          <DeleteIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Trash\" />\r\n      </ListItem>\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import Notebook from \"./Notebook\";\r\n\r\nlet id = 1;\r\n\r\nexport default class Note {\r\n  constructor(\r\n    author,\r\n    title,\r\n    content,\r\n    date = new Date(),\r\n    notebook = new Notebook('Default'),\r\n    tags = [],\r\n  ) {\r\n    this.author = author;\r\n    this.id = id++;\r\n    this.title = title;\r\n    this.content = content;\r\n    this.date = date;\r\n    this.notebook = notebook;\r\n    this.deleted = false;\r\n    this.tags = tags;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddCircle from \"@material-ui/icons/AddCircle\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst CreateButton = ({ onClick }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Button\r\n      onClick={onClick}\r\n      size=\"large\"\r\n      color=\"primary\"\r\n      className={classes.button}\r\n    >\r\n      <AddCircle className={classes.leftIcon} />\r\n      New Note\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default CreateButton;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport {\r\n  MenuItem,\r\n  Select,\r\n  FormControl,\r\n  InputLabel,\r\n  Container\r\n} from \"@material-ui/core\";\r\nimport Note from \"../models/Note\";\r\nimport CreateButton from \"./CreateButton\";\r\n\r\nconst NewNoteDialog = ({ user, addNote, notebooks }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [titleInput, setTitleInput] = useState(\"\");\r\n  const [contentInput, setContentInput] = useState(\"\");\r\n  const [values, setValues] = useState({\r\n    notebook: notebooks[0]\r\n  });\r\n\r\n  const getNotebooks = () =>\r\n    notebooks.map((notebook, index) => (\r\n      <MenuItem key={index} value={notebook}>\r\n        {notebook.name}\r\n      </MenuItem>\r\n    ));\r\n\r\n  const handleChange = event => {\r\n    setValues(oldValues => ({\r\n      ...oldValues,\r\n      [event.target.name]: event.target.value\r\n    }));\r\n  };\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n    const newNote = new Note(\r\n      user,\r\n      titleInput,\r\n      contentInput,\r\n      new Date(),\r\n      values.notebook\r\n    );\r\n    addNote(newNote);\r\n    setTitleInput(\"\");\r\n    setContentInput(\"\");\r\n    setValues(\"\");\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <CreateButton\r\n          onClick={() => {\r\n            setOpen(true);\r\n            setValues({ notebook: notebooks[0] });\r\n          }}\r\n        />\r\n      </Container>\r\n      <Dialog\r\n        open={open}\r\n        onClose={() => setOpen(false)}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        onSubmit={onSubmit}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">New Note</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            value={titleInput}\r\n            onChange={event => setTitleInput(event.target.value)}\r\n            label=\"Title\"\r\n            type=\"email\"\r\n            variant=\"outlined\"\r\n            name=\"title\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            id=\"outlined-multiline-static\"\r\n            value={contentInput}\r\n            onChange={event => setContentInput(event.target.value)}\r\n            label=\"Content\"\r\n            multiline\r\n            rows=\"8\"\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            name=\"content\"\r\n            fullWidth\r\n          />\r\n          <FormControl fullWidth>\r\n            <InputLabel htmlFor=\"notebook\">Notebook</InputLabel>\r\n            <Select\r\n              value={values.notebook}\r\n              onChange={handleChange}\r\n              inputProps={{\r\n                name: \"notebook\",\r\n                id: \"notebook\"\r\n              }}\r\n            >\r\n              {getNotebooks()}\r\n            </Select>\r\n          </FormControl>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpen(false)} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={onSubmit} color=\"primary\">\r\n            Create\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewNoteDialog;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport User from \"./User\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport Navigation from \"./Navigation\";\r\nimport { Drawer } from \"@material-ui/core\";\r\nimport NewNoteDialog from \"./NewNoteDialog\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  drawer: {\r\n    width: 280,\r\n    flexShrink: 0\r\n  },\r\n  drawerPaper: {\r\n    width: 280\r\n  }\r\n}));\r\n\r\nconst Sidebar = ({\r\n  user,\r\n  addNote,\r\n  addNotebook,\r\n  pageSetter,\r\n  folderSetter,\r\n  notebooks,\r\n  tags,\r\n  theme,\r\n  search\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Drawer\r\n      variant=\"permanent\"\r\n      className={classes.drawer}\r\n      classes={{\r\n        paper: classes.drawerPaper\r\n      }}\r\n      anchor=\"left\"\r\n      style={{ backgroundColor: \"red\" }}\r\n    >\r\n      <User user={user} theme={theme} />\r\n      <SearchBar search={search} folderSetter={folderSetter} />\r\n      <NewNoteDialog user={user.get} addNote={addNote} notebooks={notebooks} />\r\n      <Navigation\r\n        user={user.get}\r\n        addNotebook={addNotebook}\r\n        pageSetter={pageSetter}\r\n        folderSetter={folderSetter}\r\n        notebooks={notebooks}\r\n        tags={tags}\r\n      />\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\r\nimport {\r\n  MenuItem,\r\n  Select,\r\n  FormControl,\r\n  InputLabel,\r\n  ListItemIcon\r\n} from \"@material-ui/core\";\r\n\r\nconst EditNoteDialog = ({ note, editNote, notebooks, closeMenu }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [titleInput, setTitleInput] = useState(note.title);\r\n  const [contentInput, setContentInput] = useState(note.content);\r\n  const [values, setValues] = useState({\r\n    notebook: note.notebook\r\n  });\r\n\r\n  const getNotebooks = () =>\r\n    notebooks.map(notebook => (\r\n      <MenuItem key={notebook.id} value={notebook}>\r\n        {notebook.name}\r\n      </MenuItem>\r\n    ));\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n    setTitleInput(note.title);\r\n    setContentInput(note.content);\r\n    setValues({\r\n      notebook: note.notebook\r\n    });\r\n    closeMenu();\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleChange = event => {\r\n    setValues({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n    editNote(note.id, titleInput, contentInput, values.notebook);\r\n    setTitleInput(\"\");\r\n    setContentInput(\"\");\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MenuItem onClick={handleOpen}>\r\n        <ListItemIcon>\r\n          <EditIcon />\r\n        </ListItemIcon>\r\n        Edit note\r\n      </MenuItem>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        onSubmit={onSubmit}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Edit Note</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            value={titleInput}\r\n            onChange={event => setTitleInput(event.target.value)}\r\n            label=\"Title\"\r\n            variant=\"outlined\"\r\n            name=\"title\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            id=\"outlined-multiline-static\"\r\n            value={contentInput}\r\n            onChange={event => setContentInput(event.target.value)}\r\n            label=\"Content\"\r\n            multiline\r\n            rows=\"8\"\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            name=\"content\"\r\n            fullWidth\r\n          />\r\n          <FormControl fullWidth>\r\n            <InputLabel htmlFor=\"notebook\">Notebook</InputLabel>\r\n            <Select\r\n              value={values.notebook}\r\n              onChange={handleChange}\r\n              inputProps={{\r\n                name: \"notebook\",\r\n                id: \"notebook\"\r\n              }}\r\n            >\r\n              {getNotebooks()}\r\n            </Select>\r\n          </FormControl>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={onSubmit} color=\"primary\">\r\n            Update\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditNoteDialog;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { MenuItem, ListItemIcon, DialogContentText } from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/DeleteOutlined\";\r\n\r\nconst DeleteNoteDialog = ({ noteTitle, deleteNote, closeMenu }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <MenuItem\r\n        onClick={() => {\r\n          setOpen(true);\r\n          closeMenu();\r\n        }}\r\n      >\r\n        <ListItemIcon>\r\n          <DeleteIcon />\r\n        </ListItemIcon>\r\n        Delete note\r\n      </MenuItem>\r\n      <Dialog\r\n        open={open}\r\n        onClose={() => setOpen(false)}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        onSubmit={deleteNote}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Delete note</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {noteTitle} will be moved to trash.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpen(false)} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={deleteNote} color=\"primary\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteNoteDialog;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Divider,\r\n  Box,\r\n  Drawer,\r\n  IconButton,\r\n  Menu,\r\n  Grid,\r\n  MenuItem,\r\n  ListItemIcon,\r\n  AppBar,\r\n  Toolbar\r\n} from \"@material-ui/core\";\r\nimport BookIcon from \"@material-ui/icons/BookOutlined\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreVert\";\r\nimport UndoIcon from \"@material-ui/icons/UndoOutlined\";\r\nimport EditNoteDialog from \"./EditNoteDialog\";\r\nimport DeleteNoteDialog from \"./DeleteNoteDialog\";\r\nimport ChipInput from \"material-ui-chip-input\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appBar: {\r\n    top: \"auto\",\r\n    bottom: 0\r\n  },\r\n  view: {\r\n    padding: theme.spacing(3)\r\n  },\r\n  iconLeft: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  drawer: {\r\n    width: 740,\r\n    flexShrink: 0\r\n  },\r\n  drawerPaper: {\r\n    width: 740\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5)\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst NoteView = ({\r\n  note,\r\n  editNote,\r\n  deleteNote,\r\n  restoreNote,\r\n  notebooks,\r\n  tags\r\n}) => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  if (!note) {\r\n    return (\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={classes.drawer}\r\n        classes={{\r\n          paper: classes.drawerPaper\r\n        }}\r\n        anchor=\"right\"\r\n      >\r\n        <Container />\r\n      </Drawer>\r\n    );\r\n  }\r\n  return (\r\n    <Drawer\r\n      variant=\"permanent\"\r\n      className={classes.drawer}\r\n      classes={{\r\n        paper: classes.drawerPaper\r\n      }}\r\n      anchor=\"right\"\r\n    >\r\n      <Box\r\n        className={classes.view}\r\n        style={{ maxHeight: \"100%\", overflowY: \"auto\" }}\r\n      >\r\n        <Grid container spacing={0} direction=\"row\" alignItems=\"center\">\r\n          <Grid item xs={11}>\r\n            <Box\r\n              color=\"text.secondary\"\r\n              justifyContent=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Typography variant=\"subtitle2\" gutterBottom>\r\n                {!note.deleted ? (\r\n                  <div>\r\n                    <BookIcon fontSize=\"inherit\" className={classes.iconLeft} />\r\n                    {note.notebook.name}\r\n                  </div>\r\n                ) : (\r\n                  <div />\r\n                )}\r\n              </Typography>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={1}>\r\n            <Box justifyContent=\"center\" alignContent=\"right\">\r\n              <IconButton\r\n                onClick={event => setAnchorEl(event.currentTarget)}\r\n                edge=\"end\"\r\n                aria-label=\"more\"\r\n              >\r\n                <MoreHorizIcon />\r\n              </IconButton>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n        <Menu\r\n          id=\"simple-menu\"\r\n          anchorEl={anchorEl}\r\n          keepMounted\r\n          open={Boolean(anchorEl)}\r\n          onClose={() => setAnchorEl(null)}\r\n        >\r\n          {!note.deleted ? (\r\n            <div>\r\n              <EditNoteDialog\r\n                note={note}\r\n                editNote={editNote}\r\n                notebooks={notebooks}\r\n                closeMenu={() => setAnchorEl(null)}\r\n              />\r\n              <DeleteNoteDialog\r\n                noteTitle={note.title}\r\n                deleteNote={event => deleteNote(note.id)}\r\n                closeMenu={() => setAnchorEl(null)}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <MenuItem\r\n              onClick={() => {\r\n                restoreNote(note.id);\r\n                setAnchorEl(null);\r\n              }}\r\n            >\r\n              <ListItemIcon>\r\n                <UndoIcon />\r\n              </ListItemIcon>\r\n              Restore\r\n            </MenuItem>\r\n          )}\r\n        </Menu>\r\n        <Divider />\r\n        <Container className={classes.view}>\r\n          <Typography variant=\"h4\" className={classes.title} gutterBottom>\r\n            {note.title}\r\n          </Typography>\r\n          <Typography\r\n            style={{ whiteSpace: \"pre-wrap\" }}\r\n            variant=\"body1\"\r\n            gutterBottom\r\n          >\r\n            {note.content}\r\n          </Typography>\r\n        </Container>\r\n      </Box>\r\n      {!note.deleted ? (\r\n        <AppBar position=\"absolute\" color=\"inherit\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <ChipInput\r\n              value={note.tags.map(tag => tag.name)}\r\n              onAdd={chip => tags.add(note.id, chip)}\r\n              onDelete={chip => tags.remove(note.id, chip)}\r\n              placeholder=\"Add tag\"\r\n              fullWidth\r\n            />\r\n          </Toolbar>\r\n        </AppBar>\r\n      ) : (\r\n        <div />\r\n      )}\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default NoteView;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\r\nimport {\r\n  ListItemIcon,\r\n  MenuItem\r\n} from \"@material-ui/core\";\r\n\r\nconst RenameNotebookDialog = ({ id, name, rename, setAnchorEl }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [nameInput, setNameInput] = useState(name);\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n    rename(id, nameInput);\r\n    setNameInput(\"\");\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MenuItem\r\n        onClick={() => {\r\n          setOpen(true);\r\n          setNameInput(name)\r\n          setAnchorEl();\r\n        }}\r\n      >\r\n        <ListItemIcon>\r\n          <EditIcon />\r\n        </ListItemIcon>\r\n        Rename notebook\r\n      </MenuItem>\r\n      <Dialog\r\n        open={open}\r\n        onClose={() => setOpen(false)}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        onSubmit={onSubmit}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Rename notebook</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            value={nameInput}\r\n            onChange={event => setNameInput(event.target.value)}\r\n            label=\"Name\"\r\n            variant=\"outlined\"\r\n            name=\"name\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpen(false)} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={onSubmit} color=\"primary\">\r\n            Continue\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RenameNotebookDialog;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { MenuItem, ListItemIcon, DialogContentText } from \"@material-ui/core\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForeverOutlined\";\r\n\r\nconst EmptyTrashDialog = ({ emptyTrash, closeMenu }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <MenuItem\r\n        onClick={() => {\r\n          setOpen(true);\r\n          closeMenu();\r\n        }}\r\n      >\r\n        <ListItemIcon>\r\n          <DeleteForeverIcon />\r\n        </ListItemIcon>\r\n        Empty Trash\r\n      </MenuItem>\r\n      <Dialog\r\n        open={open}\r\n        onClose={() => setOpen(false)}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        onSubmit={emptyTrash}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Empty Trash?</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Are you sure you want to empty the trash? All items in the trash\r\n            will be permanently deleted and cannot be restored.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpen(false)} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={emptyTrash} color=\"primary\">\r\n            Empty\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmptyTrashDialog;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  ListItem,\r\n  ListItemText,\r\n  List,\r\n  Container,\r\n  Typography,\r\n  Box,\r\n  IconButton,\r\n  Grid,\r\n  Menu,\r\n  MenuItem,\r\n  ListItemIcon\r\n} from \"@material-ui/core\";\r\nimport { distanceInWordsToNow } from \"date-fns\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport DeleteIcon from \"@material-ui/icons/DeleteOutlined\";\r\nimport RenameNotebookDialog from \"./RenameNotebookDialog copy\";\r\nimport EmptyTrashDialog from \"./EmptyTrashDialog\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  header: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(6)\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200\r\n  },\r\n  tertiary: {\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  textItem: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst NoteList = ({ notes, noteSetter }) => {\r\n  const [selectedNote, setSelectedNote] = useState(1);\r\n  const classes = useStyles();\r\n\r\n  const truncate = content => {\r\n    const charLength = 100;\r\n    if (content.indexOf(\"\\n\") === -1) {\r\n      return content.length < charLength\r\n        ? content\r\n        : `${content.slice(0, charLength)}...`;\r\n    }\r\n    return truncate(content.substring(0, content.indexOf(\"\\n\")));\r\n  };\r\n\r\n  const getItems = () =>\r\n    notes.map((note, index) => (\r\n      <ListItem\r\n        button\r\n        selected={selectedNote === note.id}\r\n        onClick={() => {\r\n          noteSetter(note.id);\r\n          setSelectedNote(note.id);\r\n        }}\r\n        key={index}\r\n        divider\r\n      >\r\n        <ListItemText\r\n          disableTypography\r\n          className={classes.textItem}\r\n          primary={<Typography variant=\"subtitle1\">{note.title}</Typography>}\r\n          secondary={\r\n            <Box>\r\n              <Box color=\"text.secondary\">{truncate(note.content)}</Box>\r\n              <Box color=\"text.hint\" className={classes.tertiary}>\r\n                <Typography variant=\"caption\">\r\n                  {distanceInWordsToNow(note.date, { addSuffix: true })}\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n          }\r\n        />\r\n      </ListItem>\r\n    ));\r\n\r\n  if (notes.length > 0) {\r\n    return <List component=\"nav\">{getItems()}</List>;\r\n  }\r\n  return <Container />;\r\n};\r\n\r\nconst NoteListView = ({ name, notes, noteSetter, menu, notebooks, trash }) => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const getMenu = () => {\r\n    if (!menu || (menu !== \"notebook\" && notes.length === 0)) {\r\n      return <div />;\r\n    } else {\r\n      return (\r\n        <div>\r\n          <IconButton onClick={event => setAnchorEl(event.currentTarget)}>\r\n            <MoreHorizIcon />\r\n          </IconButton>\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={() => setAnchorEl(null)}\r\n          >\r\n            {menu === \"notebook\" ? (\r\n              <div>\r\n                <RenameNotebookDialog\r\n                  id={notebooks.id}\r\n                  name={name}\r\n                  rename={notebooks.rename}\r\n                  setAnchorEl={() => setAnchorEl(null)}\r\n                />\r\n                {notes.length === 0 ? (\r\n                  <MenuItem\r\n                    onClick={() => {\r\n                      setAnchorEl(null);\r\n                      notebooks.delete(notebooks.id);\r\n                    }}\r\n                  >\r\n                    <ListItemIcon>\r\n                      <DeleteIcon />\r\n                    </ListItemIcon>\r\n                    Delete notebook\r\n                  </MenuItem>\r\n                ) : (\r\n                  <div />\r\n                )}\r\n              </div>\r\n            ) : (\r\n              <EmptyTrashDialog\r\n                emptyTrash={trash.empty}\r\n                closeMenu={() => setAnchorEl(null)}\r\n              />\r\n            )}\r\n          </Menu>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box style={{ maxHeight: \"100%\", overflowY: \"auto\" }}>\r\n      <Container>\r\n        <Typography className={classes.header} variant=\"h6\">\r\n          {name}\r\n        </Typography>\r\n        <Grid container alignItems=\"center\">\r\n          <Grid item xs={11}>\r\n            <Box color=\"text.secondary\">\r\n              <Typography variant=\"subtitle2\">\r\n                {notes.length} {notes.length === 1 ? \"note\" : \"notes\"}\r\n              </Typography>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={1}>\r\n            {getMenu()}\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      <NoteList notes={notes} noteSetter={noteSetter} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default NoteListView;\r\n","import React from \"react\";\r\nimport NoteListView from \"./NoteListView\";\r\n\r\nconst Bridge = ({\r\n  page,\r\n  openFolder,\r\n  notes,\r\n  notebooks,\r\n  trash,\r\n  tags,\r\n  noteSetter,\r\n  searchTerm\r\n}) => {\r\n  const search = note => {\r\n    return (\r\n      searchTerm.value.length > 0 &&\r\n      (note.title.toLowerCase().includes(searchTerm.value.toLowerCase()) ||\r\n        note.content.toLowerCase().includes(searchTerm.value.toLowerCase()))\r\n    );\r\n  };\r\n\r\n  if (openFolder === \"search\") {\r\n    document.title = \"Search Results - Noto\";\r\n    return (\r\n      <NoteListView\r\n        name={\r\n          searchTerm.value.length > 0\r\n            ? `Search results for '${searchTerm.value}'`\r\n            : \"Start typing...\"\r\n        }\r\n        notes={notes.filter(search)}\r\n        noteSetter={noteSetter}\r\n      />\r\n    );\r\n  }\r\n  if (openFolder === \"all\") {\r\n    document.title = \"All Notes - Noto\";\r\n    return (\r\n      <NoteListView\r\n        name=\"All Notes\"\r\n        notes={notes.filter(note => !note.deleted)}\r\n        noteSetter={noteSetter}\r\n      />\r\n    );\r\n  }\r\n  if (openFolder === \"notebook\") {\r\n    const notebookName = notebooks.all.find(notebook => notebook.id === page)\r\n      .name;\r\n    document.title = `${notebookName} - Noto`;\r\n    return (\r\n      <NoteListView\r\n        name={notebookName}\r\n        notes={notes.filter(note => note.notebook.id === page && !note.deleted)}\r\n        noteSetter={noteSetter}\r\n        menu=\"notebook\"\r\n        notebooks={{ ...notebooks, id: page }}\r\n      />\r\n    );\r\n  }\r\n  if (openFolder === \"tag\") {\r\n    const tag = tags.find(tag => tag.id === page);\r\n    document.title = `${tag.name} - Noto`;\r\n    return (\r\n      <NoteListView\r\n        name={`Tagged '${tag.name}'`}\r\n        notes={notes.filter(note => note.tags.includes(tag) && !note.deleted)}\r\n        noteSetter={noteSetter}\r\n      />\r\n    );\r\n  }\r\n  if (openFolder === \"trash\") {\r\n    document.title = \"Trash - Noto\";\r\n    return (\r\n      <NoteListView\r\n        name=\"Trash\"\r\n        notes={notes.filter(note => note.deleted)}\r\n        noteSetter={noteSetter}\r\n        menu=\"trash\"\r\n        trash={trash}\r\n      />\r\n    );\r\n  }\r\n  return <h1>Invalid Folder</h1>;\r\n};\r\n\r\nexport default Bridge;\r\n","let id = 0;\r\n\r\nexport default class Tag {\r\n  constructor(author, name) {\r\n    this.id = id++;\r\n    this.author = author;\r\n    this.name = name;\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  TextField,\r\n  Container,\r\n  Typography,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Grid\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    alignSelf: \"center\",\r\n    maxWidth: 445,\r\n    padding: theme.spacing(4)\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    flexGrow: 1,\r\n    justifyContent: \"center\",\r\n    paddingTop: theme.spacing(4)\r\n  },\r\n  textField: {\r\n    margin: theme.spacing(1),\r\n    width: 250\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(1),\r\n    width: 250\r\n  },\r\n  dense: {\r\n    paddingTop: theme.spacing(4)\r\n  },\r\n  subheader: {\r\n    marginBottom: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nconst Login = ({ user, say }) => {\r\n  const classes = useStyles();\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\"\r\n  });\r\n  const [createAccount, setCreateAccount] = useState(false);\r\n  const [title, setTitle] = useState(\"Welcome Back\");\r\n\r\n  document.title = title;\r\n\r\n  const validate = event => {\r\n    event.preventDefault();\r\n    let validatedUser = user.validate(values.email, values.password);\r\n    if (validatedUser) {\r\n      user.logIn(validatedUser);\r\n      say(\"Successfully signed in\");\r\n    } else {\r\n      say(\"Email or password is incorrect\");\r\n    }\r\n  };\r\n\r\n  const handleChange = name => event => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  const validateEmail = email => {\r\n    // eslint-disable-next-line\r\n    let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.container}>\r\n      <Card className={classes.card}>\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h3\">Noto</Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Typography\r\n                color=\"textSecondary\"\r\n                variant=\"subtitle1\"\r\n                className={classes.subheader}\r\n              >\r\n                Remember everything important.\r\n              </Typography>\r\n            </Grid>\r\n            {createAccount ? (\r\n              <>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    required\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    id=\"name\"\r\n                    label=\"Name\"\r\n                    className={classes.textField}\r\n                    value={values.name}\r\n                    onChange={handleChange(\"name\")}\r\n                    margin=\"normal\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    required\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    id=\"email\"\r\n                    label=\"Email\"\r\n                    className={classes.textField}\r\n                    value={values.email}\r\n                    onChange={handleChange(\"email\")}\r\n                    margin=\"normal\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    required\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    id=\"password\"\r\n                    label=\"Password\"\r\n                    className={classes.textField}\r\n                    value={values.password}\r\n                    onChange={handleChange(\"password\")}\r\n                    type=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    margin=\"normal\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    required\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    id=\"password\"\r\n                    label=\"Confirm Password\"\r\n                    className={classes.textField}\r\n                    value={values.confirmPassword}\r\n                    onChange={handleChange(\"confirmPassword\")}\r\n                    type=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    margin=\"normal\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    className={classes.button}\r\n                    color=\"primary\"\r\n                    onClick={event => {\r\n                      if (\r\n                        values.name.length === 0 ||\r\n                        values.email.length === 0 ||\r\n                        values.password.length === 0 ||\r\n                        values.confirmPassword.length === 0\r\n                      ) {\r\n                        say(\"Please fill out all fields\");\r\n                      } else if (!validateEmail(values.email)) {\r\n                        say(\"Invalid email entered\");\r\n                      } else if (values.password !== values.confirmPassword) {\r\n                        say(\"Passwords do not match\");\r\n                      } else {\r\n                        user.create(values.name, values.email, values.password);\r\n                        setValues({\r\n                          name: \"\",\r\n                          email: \"\",\r\n                          password: \"\",\r\n                          confirmPassword: \"\"\r\n                        });\r\n                        setCreateAccount(false);\r\n                        setTitle(\"Welcome Back\");\r\n                      }\r\n                    }}\r\n                  >\r\n                    Continue\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    color=\"textSecondary\"\r\n                    className={classes.dense}\r\n                  >\r\n                    Already have an account?\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Button\r\n                    size=\"small\"\r\n                    onClick={event => {\r\n                      setCreateAccount(false);\r\n                      setTitle(\"Welcome Back\");\r\n                    }}\r\n                    fullWidth\r\n                    color=\"primary\"\r\n                  >\r\n                    Sign in\r\n                  </Button>\r\n                </Grid>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    id=\"email\"\r\n                    label=\"Email\"\r\n                    className={classes.textField}\r\n                    value={values.email}\r\n                    onChange={handleChange(\"email\")}\r\n                    margin=\"normal\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    id=\"password\"\r\n                    label=\"Password\"\r\n                    className={classes.textField}\r\n                    value={values.password}\r\n                    onChange={handleChange(\"password\")}\r\n                    type=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    margin=\"normal\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    className={classes.button}\r\n                    color=\"primary\"\r\n                    onClick={validate}\r\n                  >\r\n                    Continue\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    color=\"textSecondary\"\r\n                    className={classes.dense}\r\n                  >\r\n                    Don't have an account?\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Button\r\n                    size=\"small\"\r\n                    onClick={event => {\r\n                      setCreateAccount(true);\r\n                      setTitle(\"Create a Noto Account\");\r\n                    }}\r\n                    fullWidth\r\n                    color=\"primary\"\r\n                  >\r\n                    Create account\r\n                  </Button>\r\n                </Grid>\r\n              </>\r\n            )}\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","let id = 0;\r\n\r\nexport default class Account {\r\n  constructor(name, email, password) {\r\n    this.id = id++;\r\n    this.name = name;\r\n    this.email = email;\r\n    this.password = password;\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Sidebar from \"./components/Sidebar\";\nimport NoteView from \"./components/NoteView\";\nimport Bridge from \"./components/Bridge\";\nimport {\n  createMuiTheme,\n  CssBaseline,\n  Snackbar,\n  IconButton\n} from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport purple from \"@material-ui/core/colors/purple\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Tag from \"./models/Tag\";\nimport Login from \"./components/Login\";\nimport Account from \"./models/Account\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  content: {\n    flexGrow: 1\n  },\n  close: {\n    padding: theme.spacing(0.5)\n  }\n}));\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    primary: {\n      main: purple[\"200\"]\n    }\n  }\n});\n\nconst lightTheme = createMuiTheme({\n  palette: {\n    type: \"light\"\n  }\n});\n\nfunction App(props) {\n  const classes = useStyles();\n  const [page, setPage] = useState(0);\n  // eslint-disable-next-line\n  const [users, setUsers] = useState(props.users);\n  const [notes, setNotes] = useState(props.notes);\n  const [notebooks, setNotebooks] = useState(props.notebooks);\n  const [tags, setTags] = useState(props.tags);\n  const [openNote, setOpenNote] = useState(1);\n  const [dark, setDark] = useState(false);\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [user, setUser] = useState({});\n\n  // OPTIONS: all, notebook, tag, trash\n  const [openFolder, setOpenFolder] = useState(\"all\");\n\n  const setDarkTheme = value => {\n    setDark(value);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpenSnackbar(false);\n  };\n\n  const pageSetter = pageNumber => {\n    setPage(pageNumber);\n  };\n\n  const folderSetter = folder => {\n    setOpenFolder(folder);\n  };\n\n  const noteSetter = noteId => {\n    setOpenNote(noteId);\n  };\n\n  const addNote = note => {\n    setNotes(notes.concat(note));\n    setSnackbarMessage(`Successfully created ${note.title}`);\n    setOpenSnackbar(true);\n  };\n\n  const editNote = (id, title, content, notebook) => {\n    let copy = [...notes];\n    let note = copy[copy.findIndex(note => note.id === id)];\n    note.title = title;\n    note.content = content;\n    note.notebook = notebook;\n    note.date = new Date();\n    setNotes(copy);\n    setSnackbarMessage(`${note.title} updated`);\n    setOpenSnackbar(true);\n  };\n\n  const renameNotebook = (id, name) => {\n    let copy = [...notebooks];\n    let notebook = copy[copy.findIndex(notebook => notebook.id === id)];\n    notebook.name = name;\n    setNotebooks(copy);\n    setSnackbarMessage(\"Notebook renamed\");\n    setOpenSnackbar(true);\n  };\n\n  const deleteNotebook = id => {\n    let copy = [...notebooks];\n    let notebook = copy.find(notebook => notebook.id === id);\n    copy.splice(copy.indexOf(notebook), 1);\n    setNotebooks(copy);\n    setOpenFolder(\"all\");\n    setSnackbarMessage(`Deleted ${notebook.name}`);\n    setOpenSnackbar(true);\n  };\n\n  const deleteNote = noteId => {\n    let copy = [...notes];\n    let note = copy[copy.findIndex(note => note.id === noteId)];\n    note.deleted = true;\n    setNotes(copy);\n    setOpenNote(-1);\n    setSnackbarMessage(`${note.title} moved to Trash`);\n    setOpenSnackbar(true);\n  };\n\n  const restoreNote = noteId => {\n    let copy = [...notes];\n    let note = copy[copy.findIndex(note => note.id === noteId)];\n    note.deleted = false;\n    setNotes(copy);\n    setOpenNote(-1);\n    setSnackbarMessage(`${note.title} restored to ${note.notebook.name}`);\n    setOpenSnackbar(true);\n  };\n\n  const addNotebook = notebook => {\n    setNotebooks(notebooks.concat(notebook));\n    setSnackbarMessage(`Successfully created ${notebook.name}`);\n    setOpenSnackbar(true);\n  };\n\n  const addTag = (noteId, tagName) => {\n    let tagFound = tags.find(tag => tag.name === tagName);\n    if (!tagFound) {\n      tagFound = new Tag(user, tagName);\n      setTags(tags.concat(tagFound));\n    }\n    let copy = [...notes];\n    let note = copy[copy.findIndex(note => note.id === noteId)];\n    note.tags = note.tags.concat(tagFound);\n    setNotes(copy);\n  };\n\n  const removeTag = (noteId, tagName) => {\n    let copy = [...notes];\n    let note = copy[copy.findIndex(note => note.id === noteId)];\n    let tag = note.tags.find(tag => tag.name === tagName);\n    note.tags.splice(note.tags.indexOf(tag), 1);\n    setNotes(copy);\n    if (\n      !notes.some(\n        note => note.tags.findIndex(tag => tag.name === tagName) !== -1\n      )\n    ) {\n      let copyTags = [...tags];\n      let tagId = tag.id;\n      copyTags.splice(copyTags.findIndex(tag => tag.name === tagName), 1);\n      setTags(copyTags);\n      if (openFolder === \"tag\" && page === tagId) {\n        setOpenFolder(\"all\");\n      }\n    }\n  };\n\n  const emptyTrash = () => {\n    const recursiveDeletion = (all, trash) => {\n      if (trash === 0) {\n        setNotes(all);\n        setSnackbarMessage(\"Trash emptied\");\n        setOpenSnackbar(true);\n        return;\n      }\n      all.splice(all.findIndex(note => note.deleted), 1);\n      recursiveDeletion(all, trash - 1);\n    };\n    recursiveDeletion([...notes], notes.filter(note => note.deleted).length);\n  };\n\n  const validateUser = (username, password) => {\n    return users.find(\n      user => user.email === username && user.password === password\n    );\n  };\n\n  return (\n    <ThemeProvider theme={dark ? darkTheme : lightTheme}>\n      <CssBaseline />\n      <div className={classes.root}>\n        {loggedIn ? (\n          <>\n            <Sidebar\n              user={{\n                get: user,\n                signOut: () => {\n                  setLoggedIn(false);\n                }\n              }}\n              addNote={addNote}\n              addNotebook={addNotebook}\n              pageSetter={pageSetter}\n              folderSetter={folderSetter}\n              notebooks={notebooks.filter(\n                notebook => notebook.author.id === user.id\n              )}\n              tags={tags.filter(tag => tag.author.id === user.id)}\n              theme={{ dark: dark, setDarkTheme: setDarkTheme }}\n              search={{\n                term: searchTerm,\n                update: value => setSearchTerm(value)\n              }}\n            />\n            <main className={classes.content}>\n              <Bridge\n                page={page}\n                openFolder={openFolder}\n                notes={notes.filter(note => note.author.id === user.id)}\n                notebooks={{\n                  all: notebooks.filter(\n                    notebook => notebook.author.id === user.id\n                  ),\n                  rename: renameNotebook,\n                  delete: deleteNotebook\n                }}\n                trash={{ empty: emptyTrash }}\n                tags={tags.filter(tag => tag.author.id === user.id)}\n                noteSetter={noteSetter}\n                searchTerm={{\n                  value: searchTerm,\n                  update: value => setSearchTerm(value)\n                }}\n              />\n            </main>\n            <NoteView\n              note={notes.find(\n                note => note.author.id === user.id && note.id === openNote\n              )}\n              editNote={editNote}\n              deleteNote={deleteNote}\n              restoreNote={restoreNote}\n              notebooks={notebooks}\n              tags={{ add: addTag, remove: removeTag }}\n            />\n          </>\n        ) : (\n          <Login\n            user={{\n              loggedIn: loggedIn,\n              logIn: user => {\n                setUser(user);\n                setPage(0);\n                setOpenFolder(\"all\");\n                setLoggedIn(true);\n              },\n              create: (name, email, password) => {\n                let newAccount = new Account(name, email, password);\n                setUsers(users.concat(newAccount));\n                setSnackbarMessage(\"Successfully created account\");\n                setOpenSnackbar(true);\n              },\n              validate: validateUser\n            }}\n            say={message => {\n              setSnackbarMessage(message);\n              setOpenSnackbar(true);\n            }}\n          />\n        )}\n        <Snackbar\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"left\"\n          }}\n          open={openSnackbar}\n          autoHideDuration={6000}\n          onClose={handleClose}\n          ContentProps={{\n            \"aria-describedby\": \"message-id\"\n          }}\n          message={<span id=\"message-id\">{snackbarMessage}</span>}\n          action={[\n            <IconButton\n              key=\"close\"\n              aria-label=\"close\"\n              color=\"inherit\"\n              className={classes.close}\n              onClick={handleClose}\n            >\n              <CloseIcon />\n            </IconButton>\n          ]}\n        />\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Note from \"./models/Note\";\nimport Notebook from \"./models/Notebook\";\nimport Tag from \"./models/Tag\";\nimport Account from \"./models/Account\";\n\nconst users = [\n  new Account(\"Joshua Abad\", \"yeyoan@gmail.com\", \"123\"),\n  new Account(\"John Doe\", \"test@gmail.com\", \"123\")\n];\n\nconst notebooks = [new Notebook(users[0], \"My Notebook\")];\n\nconst tags = [new Tag(users[0], \"Noto\"), new Tag(users[0], \"WIP\")];\n\nconst notes = [\n  new Note(\n    users[0],\n    \"Welcome to Noto 📝\",\n    \"To get started, click the 'New Note' button on the sidebar.\\n\\nCreate notebooks to organize notes with a common topic. Add tags at the top each note to further categorize them.\",\n    new Date(2019, 6, 29),\n    notebooks[0],\n    [tags[0]]\n  ),\n  new Note(\n    users[0],\n    \"TODO 📃\",\n    \"✅ Add dark mode 🌙\\n✅ Add login/logout 👤\\n✅ Implement search 🔍\\n✅ Tag creation/removal in note view\\n✅ CRUD notes\\n✅ Rename and delete notebooks 📓\\n✅ Empty the trash 🗑\\n❌ Order notes displayed (alphabetical, date created, ascending/descending)\\n❌ Use a rich text editor (maybe Draft.js)\",\n    new Date(2019, 7, 1),\n    notebooks[0],\n    [...tags]\n  ),\n  new Note(\n    users[0],\n    \"Known Issues 🐛\",\n    \"- When deleting a note, it's still selected in the folder.\\n- NOT responsive on mobile.\\n- All Notes not selected when redirected there.\\n- Cannot move arrow keys up or down in edit note dialog.\\n- React complains about something in edit note dialog (most likely related to above).\",\n    new Date(2019, 7, 1),\n    notebooks[0],\n    [...tags]\n  )\n];\n\nReactDOM.render(\n  <App users={users} notes={notes} notebooks={notebooks} tags={tags} />,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}